type AcademyArticleSearchResult implements SearchResultInterface {
    article: Article!
    category: String!
}

type AcademyTopic {
    createdAt: ISO8601DateTime!
    id: Int!
    slug: String!
    title: String!
    updatedAt: ISO8601DateTime!
    weight: Int!
}

"""
The connection type for AcademyTopic.
"""
type AcademyTopicConnection {
    """
    A list of edges.
    """
    edges: [AcademyTopicEdge!]!

    """
    A list of nodes.
    """
    nodes: [AcademyTopic!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type AcademyTopicEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: AcademyTopic
}

"""
Autogenerated input type of AcceptRequest
"""
input AcceptRequestInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of ActivateJobsInquiry
"""
input ActivateJobsInquiryInput {
    activationOrigin: JobsInquiryActivationOrigin!

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

enum Activity {
    ANONYMOUS
    PUBLIC
}

type Alumni {
    avatarUrl: String
    city: City
    connected: Boolean
    currentPosition: String
    firstname: String
    lastname: String
    receivedRequestId: ID
    requestId: ID
    slug: String!
}

"""
The connection type for Alumni.
"""
type AlumniConnection {
    """
    A list of edges.
    """
    edges: [AlumniEdge!]!

    """
    A list of nodes.
    """
    nodes: [Alumni!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type AlumniEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Alumni
}

type Anonymous {
    username: String
    warRoomAvatarUrl: String
    warRoomPosition: String!
    warRoomUserAchievements: [UserAchievement!]!
}

"""
Autogenerated input type of ApplyForWarRoom
"""
input ApplyForWarRoomInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    linkedinUrl: String
    personalEmail: String
}

input ApproveTestimonialAuthorAttributes {
    linkedinUrl: String
}

"""
Autogenerated input type of ApproveTestimonialForPublicPortfolioCurrentUser
"""
input ApproveTestimonialForPublicPortfolioCurrentUserInput {
    author: ApproveTestimonialAuthorAttributes

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    confirmationScreenshotSignedId: String
    id: ID!
}

"""
Autogenerated input type of ArchiveCandidateHiring
"""
input ArchiveCandidateHiringInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of ArchiveTestimonialForPublicPortfolioCurrentUser
"""
input ArchiveTestimonialForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

type Article {
    academyTopic: AcademyTopic!
    author: Author
    createdAt: ISO8601DateTime!
    description: String
    html: String
    id: Int!
    isNew: Boolean!
    isSoon: Boolean!
    isUpdated: Boolean!
    markdown: String
    previewImage: File
    seoDescription: String
    seoTitle: String
    slug: String!
    title: String!
    updatedAt: ISO8601DateTime!
    weight: Int!
}

"""
Autogenerated input type of AttachCompanySeriesStage
"""
input AttachCompanySeriesStageInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companySeriesStageId: ID!
}

"""
Autogenerated input type of AttachCompanyStage
"""
input AttachCompanyStageInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyStageId: ID!
}

"""
Autogenerated input type of AttachDepartment
"""
input AttachDepartmentInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    departmentId: ID!
}

"""
Autogenerated input type of AttachProduct
"""
input AttachProductInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    productTypeId: ID!
}

"""
Autogenerated input type of AttachSalesRole
"""
input AttachSalesRoleInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    salesRoleId: ID!
}

type Author {
    avatar: File
    createdAt: ISO8601DateTime!
    id: Int!
    joinedAt: ISO8601DateTime
    linkUrl: String
    name: String!
    title: String
    updatedAt: ISO8601DateTime!
    warRoomProfileSlug: String
}

type AverageHittingQuota {
    hitQuotaLastYear: Int!
    segmentName: String!
    total: Int!
}

type AveragePerAccountSize {
    basePay: Float!
    comissionAtFullQuota: Float!
    customerSegmentId: String
    signingPlusStock: Float!
}

type AveragePerYearsOfExperience {
    basePay: Float!
    comissionAtFullQuota: Float!
    signingPlusStock: Float!
    yearsRange: String!
}

type AverageSalariesData {
    averagePerAccountSize: [AveragePerAccountSize!]!
    averagePerYearsOfExperience: [AveragePerYearsOfExperience!]!
    averageTotals: AverageTotals!
    hittingQuota: [AverageHittingQuota!]!
    totalCompensationRange: TotalCompensationRange!
}

type AverageTotals {
    baseSalary: Float!
    commissionAtFullQuota: Float!
    signingPlusStock: Float!
    totalCompensation: Float!
}

type Award {
    icon: String!
    id: ID!
    name: String!
    year: Int!
}

type BaseMatch {
    type: String!
}

type BestCity {
    avgBasePay: Float!
    avgHittingQuotaPercentage: Float!
    avgOte: Float!
    avgOverallRating: Float
    avgTotalAnnualCompensation: Float!
    avgWorkLifeBalanceRating: Float
    id: ID!
    name: String!
}

"""
Represents non-fractional signed whole numeric values. Since the value may
exceed the size of a 32-bit integer, it's encoded as a string.
"""
scalar BigInt

"""
Autogenerated input type of BlockUser
"""
input BlockUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    otherUserUsername: String!
}

"""
Autogenerated input type of CancelRequest
"""
input CancelRequestInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

input CandidateAttributes {
    annualQuota: String
    badges: [JobsHiringBadge!]
    baseSalary: String
    bullet1: String
    bullet2: String
    csmAccountsNumber: String
    csmQuotaMetric: String
    csmQuotaType: String
    csmRenewalValue: String
    csmTotalBusinessValue: String
    csmUpsellValue: String
    dealSize: String
    flexAppliedCriteria: [JobsFlexAppliedCriteria!]
    flexBandwidth: String
    flexBriefVideoUrl: String
    flexPreviousExperience: String
    flexRating: Float
    flexReasonForParticipation: String
    flexRoles: [JobsFlexRole!]
    flexUnderstandingOfSales: String
    headline1: String
    headline2: String
    headline3: String
    idealJobDescription: String
    leadSources: String
    linkedinUrl: String
    marketingHeadline: String
    ote: String
    quotaAttainmentByTeamPerPeriod: String
    quotaAttainmentPerLastYear: String
    quotaAttainmentPerPeriod: String
    salesCycleLength: String
    teamRanking: String
    vpDepartmentSize: String
    vpManagedRoles: String
    vpQuotaType: String
}

input CandidateAttributesVisability {
    isAnnualQuotaVisible: Boolean
    isBaseSalaryVisible: Boolean
    isBullet1Visible: Boolean
    isBullet2Visible: Boolean
    isClientsVisible: Boolean
    isCsmAccountsNumberVisible: Boolean
    isCsmQuotaMetricVisible: Boolean
    isCsmQuotaTypeVisible: Boolean
    isCsmRenewalValueVisible: Boolean
    isCsmTotalBusinessValueVisible: Boolean
    isCsmUpsellValueVisible: Boolean
    isDealSizeVisible: Boolean
    isDepartmentsVisible: Boolean
    isFlexAppliedCriteriaVisible: Boolean
    isFlexBandwidthVisible: Boolean
    isFlexBriefVideoUrlVisible: Boolean
    isFlexPreviousExperienceVisible: Boolean
    isFlexRatingVisible: Boolean
    isFlexReasonForParticipationVisible: Boolean
    isFlexRolesVisible: Boolean
    isFlexUnderstandingOfSalesVisible: Boolean
    isHeadline1Visible: Boolean
    isHeadline2Visible: Boolean
    isHeadline3Visible: Boolean
    isIdealJobDescriptionVisible: Boolean
    isLeadSourcesVisible: Boolean
    isLinkedinUrlVisible: Boolean
    isMarketingHeadlineVisible: Boolean
    isOteVisible: Boolean
    isQuotaAttainmentByTeamPerPeriodVisible: Boolean
    isQuotaAttainmentPerLastYearVisible: Boolean
    isQuotaAttainmentPerPeriodVisible: Boolean
    isSalesCycleLengthVisible: Boolean
    isTeamRankingVisible: Boolean
    isVpDepartmentSizeVisible: Boolean
    isVpManagedRolesVisible: Boolean
    isVpQuotaTypeVisible: Boolean
    isWorkHistoriesVisible: Boolean
}

type City {
    continentCode: String!
    continentName: String!
    countryCode: String!
    countryFlagEmoji: String
    countryName: String!
    id: ID!
    latitude: Float
    longitude: Float
    metroAreaShortName: String
    name: String!
    stateCode: String
    stateName: String
}

"""
The connection type for City.
"""
type CityConnection {
    """
    A list of edges.
    """
    edges: [CityEdge!]!

    """
    A list of nodes.
    """
    nodes: [City!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type CityEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: City
}

type CityMatch {
    cityName: String!
    type: String!
}

input CitySearchParams {
    countryName: String
    countryNames: [String!]
    ip: IP
    position: GeoPositionAttributes
    term: String
}

type Client {
    company: Company!
    id: ID!
    isPublic: Boolean!
    position: Int
    soldTo: String
    workHistory: WorkHistory
}

type Comment {
    author: UserAuthor!
    children(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): CommentConnection!
    createdAt: ISO8601DateTime!
    currentUserRating: Rating
    deletedAt: ISO8601DateTime
    highlightedText: String
    id: ID!
    isAnonymous: Boolean!
    markedByUser: User
    media: File
    parent: Comment
    parentId: Int
    post: Post!
    postId: Int!
    previewText: String
    ratings(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): RatingConnection!
    rawText: String!
    text: String!
    textUpdatedAt: ISO8601DateTime
    totalRating: Int!
    updatedAt: ISO8601DateTime!
    user: User!
}

"""
The connection type for Comment.
"""
type CommentConnection {
    """
    A list of edges.
    """
    edges: [CommentEdge!]!

    """
    A list of nodes.
    """
    nodes: [Comment!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type CommentEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Comment
}

enum CommentSortType {
    best
    newest
}

type CommissionBalance {
    currentBalance: Int!
    delta: Int!
}

type CommissionOnboarding {
    items: [EarnItem!]
    product: JSON
    type: String!
}

type CommissionTransaction {
    amount: Int!
    createdAt: ISO8601DateTime!
    id: ID!
    name: String!
    updatedAt: ISO8601DateTime!
    user: User!
}

"""
Autogenerated return type of CommissionTransactionSubscription
"""
type CommissionTransactionSubscriptionPayload {
    commissionChange: CommissionBalance
}

type CompaniesCategory {
    id: ID!
    name: String!
}

"""
The connection type for Company.
"""
type CompaniesConnection {
    """
    A list of edges.
    """
    edges: [CompanyEdge!]!

    """
    A list of nodes.
    """
    nodes: [Company!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCompaniesWithData: Int!
    totalCount: Int!
}

enum CompaniesSort {
    AVERAGE_COMPENSATION
    NAME
    RANKING
}

type Company implements CompanyInterface {
    averageTimeForAPromotion: Float
    averageTimeForPromotion: CompanyPagesAverageRate
    averageTimeInTheCompany: Float
    averageWorktime: CompanyPagesAverageRate
    categories: [String!]
    companyPagesSlug: String
    compensationRange: CompanyPagesRange
    compensationRanking: Float
    compensationRating: Float
    custom: Boolean
    domain: String
    employeeCount: String
    fullDescription: String
    hitQuota: CompanyPagesAverageRate
    homepageUrl: String
    id: ID!
    industries: [Industry!]
    interviews(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): CompanyPagesInterviewConnection
    investmentRound: String
    jobSatisfactionRanking: Float
    jobSatisfactionRating: Float
    location: City
    logoUrl: String
    name: String!
    overallRanking: Float
    overallRating: Float
    quotaFairnessRanking: Float
    quotaFairnessRating: Float
    relatedCompanyPages: RelatedCompanyPageResponse
    repsHittingQuotaPercentage: Float
    repsHittingQuotaRanking: Float
    repsHittingQuotaRating: Float
    reviews(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): CompanyPagesReviewConnection
    roles(roleCategoryId: ID = null): [CompanyPagesRole!]
    salesTeam: CompanyPagesSalesTeam
    shortDescription: String
    slug: String
    totalFunding: BigInt
    webSiteUrl: String
    workLifeBalanceRanking: Float
    workLifeBalanceRating: Float
}

"""
An edge in a connection.
"""
type CompanyEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Company
}

interface CompanyInterface {
    employeeCount: String
    fullDescription: String
    id: ID!
    investmentRound: String
    logoUrl: String
    name: String!
    shortDescription: String
    slug: String
    totalFunding: BigInt
    webSiteUrl: String
}

type CompanyPagesAverageRate {
    rate: CompanyPagesRate
    value: Float
}

type CompanyPagesCatalog {
    company: Company
    content: String
    customerSegment: CustomerSegment
    id: ID!
    pageType: CompanyPagesCatalogPageType!
    region: Region
    roleCategory: RoleCategory
    title: String!
}

enum CompanyPagesCatalogPageType {
    COMPENSATION
    INTERVIEWS
    OVERVIEW
    REVIEWS
    SALARIES
}

type CompanyPagesCatalogSearchResult implements SearchResultInterface {
    category: String!
    page: CompanyPagesCatalog!
}

"""
Autogenerated input type of CompanyPagesCreateInterview
"""
input CompanyPagesCreateInterviewInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID
    companyName: String
    customerSegmentId: ID
    difficulty: String
    duration: String
    interviewedAt: ISO8601DateTime
    jobTitle: String!
    locationId: ID
    org: String
    origin: String
    outcome: String
    process: String
    questions: String
    recommendationToPrepare: String
    roleCategoryId: ID
    totalInterviews: Int
}

"""
Autogenerated input type of CompanyPagesCreateReview
"""
input CompanyPagesCreateReviewInput {
    aboutCulture: String
    adviceForNewReps: String
    adviceToManagment: String

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID
    companyName: String
    cons: String
    customerSegmentId: ID
    isRecommended: Boolean
    jobTitle: String!
    level: String
    locationId: ID
    org: String
    overallRating: Float
    pros: String
    quotaFairness: Int
    roleCategoryId: ID
    salesRepTurnover: String
    trajectory: String
    upwardMobility: String
    workLifeBalance: Int
}

"""
Autogenerated input type of CompanyPagesCreateSalary
"""
input CompanyPagesCreateSalaryInput {
    basePay: Float

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    comissionAtFullQuota: Float
    companyId: ID
    companyName: String
    companyPagesRoleId: ID
    companyYearsOfExperience: Int
    customerSegmentId: ID
    entryDate: ISO8601Date
    hitCompensation: Boolean
    hitQuotaLastYear: Boolean
    jobTitle: String!
    level: String
    locationId: ID
    org: String
    ote: Float
    prevYearTotalCompensation: Float
    roleCategoryId: ID
    signingBonus: Float
    signingPlusStock: Float
    stockBonus: Float
    totalAnnualCompensation: Float
    totalYearsOfExperience: Int
}

"""
Autogenerated input type of CompanyPagesDestroyInterview
"""
input CompanyPagesDestroyInterviewInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of CompanyPagesDestroyReview
"""
input CompanyPagesDestroyReviewInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of CompanyPagesDestroySalary
"""
input CompanyPagesDestroySalaryInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

type CompanyPagesInterview {
    company: Company
    createdAt: ISO8601DateTime
    customerSegment: CustomerSegment
    difficulty: CompanyPagesInterviewsDifficulty
    duration: CompanyPagesInterviewsDuration
    id: ID!
    interviewedAt: ISO8601DateTime
    jobTitle: String!
    location: City
    org: String
    origin: CompanyPagesInterviewsOrigin
    outcome: CompanyPagesInterviewsOutcome
    process: String
    questions: String
    recommendationToPrepare: String
    roleCategory: RoleCategory
    totalInterviews: Int
}

"""
The connection type for CompanyPagesInterview.
"""
type CompanyPagesInterviewConnection {
    """
    A list of edges.
    """
    edges: [CompanyPagesInterviewEdge!]!

    """
    A list of nodes.
    """
    nodes: [CompanyPagesInterview!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type CompanyPagesInterviewEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: CompanyPagesInterview
}

enum CompanyPagesInterviewsDifficulty {
    EASY
    HARD
    MEDIUM
}

enum CompanyPagesInterviewsDuration {
    DURATION_0_2_WEEKS
    DURATION_12_PLUS_WEEKS
    DURATION_2_4_WEEKS
    DURATION_4_6_WEEKS
    DURATION_6_8_WEEKS
    DURATION_8_12_WEEKS
}

enum CompanyPagesInterviewsOrigin {
    APPLIED_ONLINE
    INTERNAL_OPPORTUNITY
    JOB_CAREER_FAIR
    REACHED_OUT_TO_A_RECRUITER
    RECRUITER_REACHED_OUT_TO_ME
    REFERRED_BY_A_CURRENT_EMPLOYEE
}

enum CompanyPagesInterviewsOutcome {
    ACCEPTED_OFFER
    DECLINED
    NO_OFFER
    OFFER_RECEIVED
    WAITING_TO_HEAR_BACK
}

type CompanyPagesRange {
    avg: Float
    max: Float
    min: Float
}

enum CompanyPagesRate {
    GOOD
    LOW
    MED
}

type CompanyPagesReview {
    aboutCulture: String
    adviceForNewReps: String
    adviceToManagment: String
    company: Company
    cons: String
    createdAt: ISO8601DateTime!
    customerSegment: CustomerSegment
    id: ID!
    isRecommended: Boolean
    jobTitle: String!
    level: String
    location: City
    org: String
    overallRating: Float!
    pros: String
    quotaFairness: Int
    roleCategory: RoleCategory
    salesRepTurnover: CompanyPagesReviewsSalesRepTurnover
    trajectory: CompanyPagesReviewsTrajectory
    upwardMobility: CompanyPagesReviewsUpwardMobility
    workLifeBalance: Int
}

"""
The connection type for CompanyPagesReview.
"""
type CompanyPagesReviewConnection {
    """
    A list of edges.
    """
    edges: [CompanyPagesReviewEdge!]!

    """
    A list of nodes.
    """
    nodes: [CompanyPagesReview!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type CompanyPagesReviewEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: CompanyPagesReview
}

enum CompanyPagesReviewsSalesRepTurnover {
    AVERAGE
    HIGH
    LOW
}

enum CompanyPagesReviewsTrajectory {
    DECLINE
    GROWTH
    STAGNANT
}

enum CompanyPagesReviewsUpwardMobility {
    NO
    SOME
    STRONG
}

type CompanyPagesRole {
    baseRange: CompanyPagesRange
    baseRangeRelativeAverage: Float
    commissionRange: CompanyPagesRange
    company: Company
    id: ID!
    oteRange: CompanyPagesRange
    oteRangeRelativeAverage: Float
    roleCategory: RoleCategory!
    salaries(location: String): [CompanyPagesSalary!]
    totalCompensationRange: CompanyPagesTotalCompensationRange
}

"""
The connection type for CompanyPagesRole.
"""
type CompanyPagesRoleConnection {
    """
    A list of edges.
    """
    edges: [CompanyPagesRoleEdge!]!

    """
    A list of nodes.
    """
    nodes: [CompanyPagesRole!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type CompanyPagesRoleEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: CompanyPagesRole
}

type CompanyPagesSalary {
    accountSize: CustomerSegment
    basePay: Float
    comissionAtFullQuota: Float
    companyYearsOfExperience: Int
    entryDate: ISO8601Date
    hitCompensation: Boolean
    hitQuotaLastYear: Boolean
    id: ID!
    jobTitle: String
    level: String
    location: City
    org: String
    ote: Float
    prevYearTotalCompensation: Float
    role: CompanyPagesRole
    signingBonus: Float
    signingPlusStock: Float
    stockBonus: Float
    totalAnnualCompensation: Float
    totalYearsOfExperience: Int
}

type CompanyPagesSalesTeam {
    id: ID!
    peopleWorkingLonger: Float!
    peopleWorkingLongerAverage: Float!
    tenureAverage: SalesTeamTenureAverages!
    timeToPromotion: Float!
    timeToPromotionAverage: Float!
}

type CompanyPagesTotalCompensationRange {
    average: Float
    max: Float
    min: Float
}

"""
Autogenerated input type of CompanyPagesUpdateInterview
"""
input CompanyPagesUpdateInterviewInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID
    companyName: String
    customerSegmentId: ID
    difficulty: String
    duration: String
    id: ID!
    interviewedAt: ISO8601DateTime
    jobTitle: String!
    locationId: ID
    org: String
    origin: String
    outcome: String
    process: String
    questions: String
    recommendationToPrepare: String
    roleCategoryId: ID
    totalInterviews: Int
}

"""
Autogenerated input type of CompanyPagesUpdateReview
"""
input CompanyPagesUpdateReviewInput {
    aboutCulture: String
    adviceForNewReps: String
    adviceToManagment: String

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID
    companyName: String
    cons: String
    customerSegmentId: ID
    id: ID!
    isRecommended: Boolean
    jobTitle: String!
    level: String
    locationId: ID
    org: String
    overallRating: Float
    pros: String
    quotaFairness: Int
    roleCategoryId: ID
    salesRepTurnover: String
    trajectory: String
    upwardMobility: String
    workLifeBalance: Int
}

"""
Autogenerated input type of CompanyPagesUpdateSalary
"""
input CompanyPagesUpdateSalaryInput {
    basePay: Float

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    comissionAtFullQuota: Float
    companyId: ID
    companyName: String
    companyPagesRoleId: ID
    companyYearsOfExperience: Int
    customerSegmentId: ID
    entryDate: ISO8601Date
    hitCompensation: Boolean
    hitQuotaLastYear: Boolean
    id: ID!
    jobTitle: String!
    level: String
    locationId: ID
    org: String
    ote: Float
    prevYearTotalCompensation: Float
    roleCategoryId: ID
    signingBonus: Float
    signingPlusStock: Float
    stockBonus: Float
    totalAnnualCompensation: Float
    totalYearsOfExperience: Int
}

type CompanySearchResult implements SearchResultInterface {
    category: String!
    company: Company!
}

type CompanySeriesStage {
    description: String!
    id: ID!
    name: String!
    slug: CompanySeriesStageSlug!
}

enum CompanySeriesStageSlug {
    BOOTSTRAPPED
    GROWTH
    LARGE
    MASSIVE
    STARTUP
}

type CompanyStage {
    id: ID!
    name: String!
}

"""
Autogenerated input type of CompleteTooltip
"""
input CompleteTooltipInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    task: String!
}

"""
Autogenerated input type of ConfirmTermsOfServiceByPotentialEmployer
"""
input ConfirmTermsOfServiceByPotentialEmployerInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    hashid: ID!
}

type Connection {
    avatarUrl: String
    connected: Boolean
    currentCompany: Company
    currentPosition: String
    firstname: String
    lastname: String
    receivedRequestId: ID
    requestId: ID
    slug: String!
}

"""
The connection type for Connection.
"""
type ConnectionConnection {
    """
    A list of edges.
    """
    edges: [ConnectionEdge!]!

    """
    A list of nodes.
    """
    nodes: [Connection!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type ConnectionEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Connection
}

interface ConnectionSuggestionInterface {
    id: ID!
    name: String!
    position: String
}

"""
The connection type for ConnectionSuggestionInterface.
"""
type ConnectionSuggestionInterfaceConnection {
    """
    A list of edges.
    """
    edges: [ConnectionSuggestionInterfaceEdge!]!

    """
    A list of nodes.
    """
    nodes: [ConnectionSuggestionInterface!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type ConnectionSuggestionInterfaceEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: ConnectionSuggestionInterface
}

enum ConnectionSuggestionType {
    colleagues
    salespeople
    topSuggestions
}

type ConnectionTopSuggestionUser implements ConnectionSuggestionInterface {
    avatarUrl: String
    id: ID!
    name: String!
    position: String
}

type Contacts {
    email: String
}

union Content = DealStory | Link | LinkedinPost | Story | YoutubeLink

type Country {
    name: String!
    shortName: String!
}

type CountryState {
    name: String!
}

"""
Autogenerated input type of CreateAwardForPublicPortfolioCurrentUser
"""
input CreateAwardForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    name: String!
    year: Int!
}

"""
Autogenerated input type of CreateClientForPublicPortfolioCurrentUser
"""
input CreateClientForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID!
    origin: String
    soldTo: String
    workHistoryId: ID
}

"""
Autogenerated input type of CreateComment
"""
input CreateCommentInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    isAnonymous: Boolean = true
    media: String
    parentId: ID
    postId: ID!
    text: String!
}

"""
Autogenerated input type of CreateConnections
"""
input CreateConnectionsInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    unselectedColleagueIds: [ID!]!
    unselectedSalespeopleIds: [ID!]!
    unselectedTopSuggestionIds: [ID!]!
}

"""
Autogenerated input type of CreateCustomCompany
"""
input CreateCustomCompanyInput {
    categories: [String!]

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    domain: String
    industryIds: [Int!]
    logoUrl: String
    name: String!
}

"""
Autogenerated input type of CreateCustomDepartment
"""
input CreateCustomDepartmentInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    name: String!
}

"""
Autogenerated input type of CreateCustomProduct
"""
input CreateCustomProductInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    name: String!
}

"""
Autogenerated input type of CreateCustomSalesRole
"""
input CreateCustomSalesRoleInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    name: String!
}

"""
Autogenerated input type of CreateCustomUniversity
"""
input CreateCustomUniversityInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    name: String!
}

input CreateDealAttributes {
    amount: Float!
    closeDate: ISO8601DateTime!
    company: FindOrCreateCompanyAttributes!
    departments: [FindOrCreateDepartmentAttributes!]!
    isPrivateCompany: Boolean!
    isPrivateDepartments: Boolean!
    post: DealStoryPostAttributes
    source: String
}

"""
Autogenerated input type of CreateDeals
"""
input CreateDealsInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    deals: [CreateDealAttributes!]!
}

"""
Autogenerated input type of CreateDealsSource
"""
input CreateDealsSourceInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    signedId: String!
}

"""
Autogenerated input type of CreateEducationHistoryForPublicPortfolioCurrentUser
"""
input CreateEducationHistoryForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    degreeName: String!
    description: String
    endDate: ISO8601DateTime
    fieldOfStudy: String!
    startDate: ISO8601DateTime!
    universityId: ID!
}

"""
Autogenerated input type of CreatePollVote
"""
input CreatePollVoteInput {
    choiceId: ID!

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

"""
Autogenerated input type of CreatePost
"""
input CreatePostInput {
    category: String!

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    files: [String!]
    isAnonymous: Boolean = true
    link: String
    poll: PollAttributes
    salesGptSessionId: String
    text: String
    title: String!
    topicIds: [Int!]!
}

"""
Autogenerated input type of CreatePotentialEmployer
"""
input CreatePotentialEmployerInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyBusinessAddress: String
    companyDomain: String
    companyId: ID
    email: String
    firstName: String
    jobTitle: String
    lastName: String
    numberOfHirings: String
    otherRoles: String
    phone: String
    rolesOfHirings: [String!]
}

"""
Autogenerated input type of CreateRating
"""
input CreateRatingInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    reactableId: ID!
    reactableType: String!
    value: Int!
}

"""
Autogenerated input type of CreateRequest
"""
input CreateRequestInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    slug: String!
}

"""
Autogenerated input type of CreateTopic
"""
input CreateTopicInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    emoji: String!
    name: String!
}

"""
Autogenerated input type of CreateWorkHistoryForPublicPortfolioCurrentUser
"""
input CreateWorkHistoryForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID!
    currentWorkplace: Boolean!
    endDate: ISO8601DateTime
    origin: String
    startDate: ISO8601DateTime
    title: String!
}

enum Currency {
    INR
    USD
}

type CurrentUser {
    abTests: [String!]
    achievements: [UserAchievement!]
    achievementsProgress: [UserAchievement!]
    address: String
    admin: Boolean
    autoName: String
    avatarUrl: String
    birthDate: ISO8601Date
    calendarLink: String
    city: City
    commentsCount: Int!
    company: Company
    companySeriesStages: [CompanySeriesStage!]
    companyStages: [CompanyStage!]
    contacts: [UserContact!]
    createdAt: ISO8601DateTime!
    departmentIds: [Int!]
    departments: [Department!]
    description: String
    email: String!
    enabledFeatures: [String!]
    facebookUrl: String
    fakeVacancyIds: [Int!]!
    firstname: String
    hasSeenNewReferProgram: Boolean
    id: ID!
    industries: [Industry!]
    industry: String
    instagramUrl: String
    inviteReferrerUser: User
    languages: String
    lastColleaguesSyncError: String
    lastColleaguesSyncedAt: ISO8601DateTime
    lastContactsSyncError: String
    lastContactsSyncedAt: ISO8601DateTime
    lastLinkedinSyncError: String
    lastLinkedinSyncedAt: ISO8601DateTime
    lastSeenAt: ISO8601DateTime
    lastname: String
    linkedinProfilePicUrl: String
    linkedinSlug: String
    linkedinUrl: String
    marker: String
    onboardingState: String!
    onboardingVacancy: JobsVacancy
    orderPosition: Int
    personalEmail: String
    phone: String
    position: String
    posts: [Post!]
    postsCount: Int!
    prevScore: Int
    privateHash: String!
    productTypeIds: [Int!]
    productTypes: [ProductType!]
    public: Boolean!
    publicEmail: String
    referralsCount: Int!
    role: String
    salesRoles: String
    score: Int
    slug: String!
    solidClients: [Client!]
    submittedCompaniesData: Boolean!
    superInviteMarker: String
    tooltips: [String!]
    toured: Boolean
    twitterUrl: String
    uiTheme: String
    unreadConnectionRequestsCount: Int!
    unreadWarRoomNotifications(platform: Platform = MOBILE): Boolean
    unseenWarRoomNotifications(platform: Platform = MOBILE): Boolean
    unusedSuperInvitesCount: Int!
    updatedAt: ISO8601DateTime!
    username: String
    warRoomAvatarUrl: String
    warRoomCompanySeriesStageIds: [Int!]
    warRoomCompanyStageIds: [Int!]
    warRoomCurrentBalance: Int
    warRoomDescription: String
    warRoomIndustryIds: [Int!]
    warRoomJobSearchStatus: String
    warRoomJobSearchStatusExpiredAt: ISO8601DateTime
    warRoomPosition: String
    warRoomSalesRoleIds: [Int!]
    warRoomSalesRoles: [SalesRole!]
    warRoomState: String!
    warRoomTotalBalance: Int
    warRoomYearsOfExperience: Int
    websiteUrl: String
}

type CustomerSegment {
    emoji: String
    id: ID!
    name: String!
    slug: String!
}

"""
Autogenerated input type of DeactivateCurrentUser
"""
input DeactivateCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

type Deal implements DealInterface {
    amount: Float!
    closeDate: ISO8601DateTime!
    company: Company
    createdAt: ISO8601DateTime!
    departments: [Department!]
    id: ID!
    interactionsCount: Int!
    isOwner: Boolean!
    isPrivateCompany: Boolean!
    isPrivateDepartments: Boolean!
    post: Post
    user: User!
}

"""
The connection type for Deal.
"""
type DealConnection implements DealConnectionInterface {
    """
    A list of edges.
    """
    edges: [DealEdge!]!

    """
    A list of nodes.
    """
    nodes: [Deal!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    statistics: DealsStatistics!
    totalCount: Int!
}

interface DealConnectionInterface {
    statistics: DealsStatistics!
}

"""
An edge in a connection.
"""
type DealEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Deal
}

interface DealInterface {
    amount: Float!
    closeDate: ISO8601DateTime!
    company: Company
    createdAt: ISO8601DateTime!
    departments: [Department!]
    id: ID!
    interactionsCount: Int!
    isOwner: Boolean!
    isPrivateCompany: Boolean!
    isPrivateDepartments: Boolean!
    post: Post
}

type DealStory {
    coverContentType: String
    coverFileName: String
    coverFileSize: Int
    coverUpdatedAt: ISO8601DateTime
    coverUrl: String
    createdAt: ISO8601DateTime!
    deal: Deal!
    highlightedText: String
    id: Int!
    previewImageUrl: String
    rawText: String
    text: String
    textImageUrl: String
    title: String!
    updatedAt: ISO8601DateTime!
}

input DealStoryPostAttributes {
    text: String!
}

type DealsStatistics {
    totalAmount: Float!
    totalCount: Int!
}

type Department {
    createdAt: ISO8601DateTime!
    custom: Boolean!
    emoji: String
    id: ID!
    name: String!
    updatedAt: ISO8601DateTime!
    users: [User!]
}

"""
Autogenerated input type of DestroyAwardForPublicPortfolioCurrentUser
"""
input DestroyAwardForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of DestroyClientForPublicPortfolioCurrentUser
"""
input DestroyClientForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of DestroyComment
"""
input DestroyCommentInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of DestroyDeal
"""
input DestroyDealInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of DestroyEducationHistoryForPublicPortfolioCurrentUser
"""
input DestroyEducationHistoryForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of DestroyPost
"""
input DestroyPostInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    slug: String!
}

"""
Autogenerated input type of DestroyRating
"""
input DestroyRatingInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    reactableId: ID!
    reactableType: String!
}

"""
Autogenerated input type of DestroyTestimonialForPublicPortfolioCurrentUser
"""
input DestroyTestimonialForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of DestroyWorkHistoryForPublicPortfolioCurrentUser
"""
input DestroyWorkHistoryForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of DetachCompanySeriesStage
"""
input DetachCompanySeriesStageInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companySeriesStageId: ID!
}

"""
Autogenerated input type of DetachCompanyStage
"""
input DetachCompanyStageInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyStageId: ID!
}

"""
Autogenerated input type of DetachDepartment
"""
input DetachDepartmentInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    departmentId: ID!
}

"""
Autogenerated input type of DetachProduct
"""
input DetachProductInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    productTypeId: ID!
}

"""
Autogenerated input type of DetachSalesRole
"""
input DetachSalesRoleInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    salesRoleId: ID!
}

"""
Autogenerated return type of DirectMessagesSubscription
"""
type DirectMessagesSubscriptionPayload {
    newMessage: Message
    readThreadEvent: ReadThreadEvent
}

type EarnItem {
    price: Int!
    state: String!
    type: String!
}

type EducationHistory {
    degreeName: String
    description: String
    endDate: ISO8601DateTime
    fieldOfStudy: String
    id: ID
    manuallyEdited: Boolean!
    schoolName: String
    startDate: ISO8601DateTime
    university: University
}

type Employee {
    avatarUrl: String
    connected: Boolean
    currentPosition: String
    firstname: String
    lastname: String
    receivedRequestId: ID
    requestId: ID
    slug: String!
}

"""
The connection type for Employee.
"""
type EmployeeConnection {
    """
    A list of edges.
    """
    edges: [EmployeeEdge!]!

    """
    A list of nodes.
    """
    nodes: [Employee!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type EmployeeEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Employee
}

input EndorseTestimonialAuthorAttributes {
    firstname: String
    lastname: String
}

"""
Autogenerated input type of EndorseTestimonialForPublicPortfolioUser
"""
input EndorseTestimonialForPublicPortfolioUserInput {
    author: EndorseTestimonialAuthorAttributes

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    description: String
    sign: String!
    skills: [String!]
}

type Expectation {
    id: ID!
    name: String!
}

"""
Autogenerated input type of ExpressDesireToImportConnectionsForPublicPortfolioUser
"""
input ExpressDesireToImportConnectionsForPublicPortfolioUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

type File {
    name: String
    signedId: String
    url: String!
}

"""
Autogenerated input type of FillInquiry
"""
input FillInquiryInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

input FindOrCreateCompanyAttributes {
    id: ID
    name: String
}

input FindOrCreateDepartmentAttributes {
    id: ID
    name: String
}

"""
Autogenerated input type of FinishOnboarding
"""
input FinishOnboardingInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

"""
Autogenerated input type of FireHiringEvent
"""
input FireHiringEventInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    eventName: JobsHiringEventName!
    id: ID!
}

"""
Autogenerated input type of FlagIssue
"""
input FlagIssueInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    flaggableId: ID!
    flaggableType: String!
    source: String
    text: String!
}

type FloatRangeRightBoundOptional {
    max: Float
    min: Float!
}

input FloatRangeRightBoundOptionalInput {
    max: Float
    min: Float!
}

union GenericMatch = BaseMatch | CityMatch | UniversityMatch | WorkHistoryMatch

input GeoPositionAttributes {
    latitude: Float!
    longitude: Float!
}

type HighlightedText {
    highlightFrom: Int
    highlightTo: Int
    text: String!
}

"""
Autogenerated input type of HiringResendIntroduceEmail
"""
input HiringResendIntroduceEmailInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Represents textual data as UTF-8 character sequences. This type is most often
used by GraphQL to represent free-form human-readable text.
"""
scalar IP

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Industry {
    emoji: String
    id: ID!
    name: String!
}

"""
Attributes for creating or updating jobs inquiry fake hiring
"""
input InquiryFakeHiringAttributes {
    candidateState: JobsHiringCandidateState!
    vacancyUid: String!
}

type IntRangeRightBoundOptional {
    max: Int
    min: Int!
}

input IntRangeRightBoundOptionalInput {
    max: Int
    min: Int!
}

"""
Represents untyped JSON
"""
scalar JSON

interface JobsBaseInquiryInterface {
    accomplishments: String
    aeAnnualizedQuota: Int
    aeLeadSourceOther: String
    aeLeadSourcesMain: [JobsInquiryAeLeadSource!]
    aeQuotaPerPeriod: Int
    aeQuotaTypeMain: JobsInquiryAeQuota
    aeQuotaTypeOther: String
    baseSalary: Int
    clientDescription: String
    csmAccountsNumber: JobsInquiryCsmAccountNumber
    csmQuotaMetricMain: [JobsInquiryCsmQuotaMetric!]
    csmQuotaMetricOther: String
    csmQuotaPeriodMain: JobsInquiryCsmQuotaPeriod
    csmQuotaPeriodOther: String
    csmQuotaTypeMain: JobsInquiryCsmQuota
    csmQuotaTypeOther: String
    csmRenewalValue: JobsInquiryCsmRenewalValue
    csmTotalBusinessValue: JobsInquiryCsmBusinessValue
    csmUpsellValue: JobsInquiryCsmUpsellValue
    currency: Currency
    dealBreakerOther: String
    dealBreakersMain: [JobsInquiryDealBreaker!]
    dealSize: JobsInquiryDealSize
    desiredCompanySeriesStages: [CompanySeriesStage!]
    employmentTypes: [JobsInquiryEmployment!]!
    filledAt: ISO8601DateTime
    flexAppliedCriteria: [JobsFlexAppliedCriteria!]
    flexBandwidth: String
    flexBriefVideoUrl: String
    flexConsideredCompanyTypes: [JobsFlexFlexConsideredCompanyType!]
    flexOnboardingState: String
    flexPreviousExperience: String
    flexRating: Float
    flexReasonForParticipation: String
    flexRoles: [JobsFlexRole!]
    flexState: String
    flexUnderstandingOfSales: String
    id: ID!
    idealJobDescription: String
    lastActiveAt: ISO8601DateTime
    onboardingState: JobsInquiryOnboardingState!
    ote: Int
    positionMain: JobsInquiryPosition
    positionOther: String
    quotaAttainmentByTeamPerPeriod: Int
    quotaAttainmentPerLastYear: Int
    quotaAttainmentPerPeriod: Int
    rankOnTeam: Int
    revenue: Int
    salesCycleLength: JobsInquirySalesCycleLength
    salesMethodologies: [JobsInquirySalesMethodology!]
    sdrQuotaPerPeriod: String
    sdrQuotaTypes: [JobsInquirySdrQuota!]
    state: JobsInquiryState!
    teamSize: Int
    vpDepartmentSize: JobsInquiryVpDepartmentSize
    vpManagedRoles: [JobsInquiryVpManagedRole!]
    vpQuotaType: JobsInquiryVpQuota
    vpResponsibilities: String
    willingToRelocate: Boolean
}

interface JobsCandidateInterface {
    annualQuota: String
    avatarUrl: String
    badges: [JobsHiringBadge!]
    baseSalary: String
    bullet1: String
    bullet2: String
    captions: String
    city: City
    csmAccountsNumber: String
    csmQuotaMetric: String
    csmQuotaType: String
    csmRenewalValue: String
    csmTotalBusinessValue: String
    csmUpsellValue: String
    currency: Currency
    dealSize: String
    firstname: String
    flexAppliedCriteria: [JobsFlexAppliedCriteria!]
    flexBandwidth: String
    flexBriefVideoUrl: String
    flexPreviousExperience: String
    flexRating: Float
    flexReasonForParticipation: String
    flexRoles: [JobsFlexRole!]
    flexUnderstandingOfSales: String
    headline1: String
    headline2: String
    headline3: String
    id: ID!
    idealJobDescription: String
    initials: String
    inquiredPosition: JobsInquiryPosition
    lastname: String
    leadSources: String
    linkedinUrl: String
    marketingHeadline: String
    ote: String
    position: String
    quotaAttainmentByTeamPerPeriod: String
    quotaAttainmentPerLastYear: String
    quotaAttainmentPerPeriod: Int
    salesCycleLength: String
    teamRanking: String
    updatedAt: ISO8601DateTime!
    vpDepartmentSize: String
    vpManagedRoles: String
    vpQuotaType: String
    willingToRelocate: Boolean
}

"""
Autogenerated input type of JobsCandidatesUpdateHiring
"""
input JobsCandidatesUpdateHiringInput {
    candidateStateViewed: Boolean!

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

type JobsEmployer {
    company: Company!
    descriptionHtml: String
    id: ID!
    keyPoints: [String!]!
    roleUrl: String
}

enum JobsEmployersAnnualRevenue {
    REVENUE_0_500K
    REVENUE_10M_30M
    REVENUE_2M_10M
    REVENUE_500K_2M
    REVENUE_MORE_30M
}

enum JobsEmployersFunding {
    A_C_SERIES
    BOOTSTRAPING
    D_BEYOUND_SERIES
    GOING_TO_VC
    VC_SEED
}

enum JobsEmployersSalesTeamSize {
    SIZE_0_1
    SIZE_21_50
    SIZE_2_5
    SIZE_6_20
    SIZE_MORE_50
}

enum JobsFieldsAccessLevel {
    ADMIN
    EVERYONE
}

interface JobsFieldsBooleanInterface {
    placeholder: String
}

interface JobsFieldsCategoryInterface {
    description: String
    id: ID!
    position: Int!
    title: String!
}

type JobsFieldsConfiguration {
    autocomplete: Boolean
    width: Int
}

interface JobsFieldsFloatInterface {
    placeholder: String!
    range: FloatRangeRightBoundOptional
}

interface JobsFieldsFloatRangeInterface {
    placeholder: JobsFieldsRangePlaceholder!
    range: FloatRangeRightBoundOptional
}

interface JobsFieldsIntegerInterface {
    placeholder: String
    range: IntRangeRightBoundOptional
}

interface JobsFieldsIntegerRangeInterface {
    placeholder: JobsFieldsRangePlaceholder!
    range: IntRangeRightBoundOptional
}

interface JobsFieldsInterface {
    availableForRoles: [JobsRole!]!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    popularForRoles: [JobsRole!]!
    position: Int!
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

type JobsFieldsRangePlaceholder {
    max: String
    min: String
}

enum JobsFieldsRecordType {
    CITY
    COMPANY
    DEPARTMENT
    INDUSTRY
}

enum JobsFieldsScope {
    FLEX
    ML_SETTINGS
    TALENT
}

interface JobsFieldsSelectInterface {
    options: [JobsFieldsSelectOption!]!
    placeholder: String
}

type JobsFieldsSelectOption {
    default: Boolean!
    name: String
    value: String
}

interface JobsFieldsSingleSelectRecordInterface {
    placeholder: String
    recordType: JobsFieldsRecordType!
}

interface JobsFieldsStringArrayInterface {
    placeholder: String
}

interface JobsFieldsStringInterface {
    placeholder: String
}

type JobsFieldsTooltip {
    description: String
    title: String
}

enum JobsFlexAppliedCriteria {
    CLOSED_6_FIGURE_DEAL
    DID_OWN_PROSPECTING_BUILDING
    HAVE_EXPERIENCE_SELLING_FOR_EARLY_STAGE_COMPANIES
    HAVE_TRACK_RECORD_OF_ACHIEVING
    MADE_50_DIALS_PER_DAY
    WORKED_AS_INBOUND_SDR
}

enum JobsFlexBandwidth {
    BANDWIDTH_0_5_HOURS_PER_WEEK
    BANDWIDTH_16_30_HOURS_PER_WEEK
    BANDWIDTH_31_HOURS_PER_WEEK
    BANDWIDTH_6_15_HOURS_PER_WEEK
    BANDWIDTH_FULL_TIME
}

enum JobsFlexFlexConsideredCompanyType {
    BRAND_NEW_PRODUCT
    ESTABLISHED
    NEWER_PRODUCT
    OPEN_TO_ALL_OPPORTUNITIES
}

enum JobsFlexRole {
    AE
    CONSULTANT
    SDR_BDR
}

type JobsHiring {
    acceptedByEmployer: Boolean!
    candidateState: JobsHiringCandidateState
    candidateStateUpdatedAt: ISO8601DateTime
    candidateStateViewed: Boolean
    employer: JobsEmployer!
    hashid: String!
    hoursToExpire: Int
    id: ID!
    origin: JobsHiringOrigin!
    vacancy: JobsVacancy
}

enum JobsHiringBadge {
    DIVERSE
    FREQUENTLY_PROMOTED
    LEADER
    VETERAN
}

enum JobsHiringCandidateState {
    ACCEPTED_ANOTHER_OFFER
    ARCHIVED
    HIRED
    INTERESTED
    INTERVIEWING
    INTRODUCTION
    REJECTED
}

enum JobsHiringEventName {
    accept_by_candidate
    reject_by_candidate
}

enum JobsHiringMeeting {
    assessment
    interview
}

enum JobsHiringOrigin {
    algorithm_background_match
    algorithm_backoffice
    algorithm_demo
    algorithm_flex_onboarding
    algorithm_onboarding
    algorithm_refresh
    algorithm_vacancy_activated
    algorithm_vacancy_edited
    manual
}

enum JobsHiringSubmissionSource {
    AUTO
    MANUAL
}

type JobsInquiry implements JobsBaseInquiryInterface {
    accomplishments: String
    activable: Boolean!
    activeHirings: [JobsHiring!]
    activeHiringsCount: Int!
    aeAnnualizedQuota: Int
    aeLeadSourceOther: String
    aeLeadSourcesMain: [JobsInquiryAeLeadSource!]
    aeQuotaPerPeriod: Int
    aeQuotaTypeMain: JobsInquiryAeQuota
    aeQuotaTypeOther: String
    baseSalary: Int
    clientDescription: String
    csmAccountsNumber: JobsInquiryCsmAccountNumber
    csmQuotaMetricMain: [JobsInquiryCsmQuotaMetric!]
    csmQuotaMetricOther: String
    csmQuotaPeriodMain: JobsInquiryCsmQuotaPeriod
    csmQuotaPeriodOther: String
    csmQuotaTypeMain: JobsInquiryCsmQuota
    csmQuotaTypeOther: String
    csmRenewalValue: JobsInquiryCsmRenewalValue
    csmTotalBusinessValue: JobsInquiryCsmBusinessValue
    csmUpsellValue: JobsInquiryCsmUpsellValue
    currency: Currency
    dealBreakerOther: String
    dealBreakersMain: [JobsInquiryDealBreaker!]
    dealSize: JobsInquiryDealSize
    desiredCompanySeriesStages: [CompanySeriesStage!]
    employmentTypes: [JobsInquiryEmployment!]!
    fakeHiring: JobsInquiryFakeHiring
    filledAt: ISO8601DateTime
    flexAppliedCriteria: [JobsFlexAppliedCriteria!]
    flexBandwidth: String
    flexBriefVideoUrl: String
    flexConsideredCompanyTypes: [JobsFlexFlexConsideredCompanyType!]
    flexOnboardingState: String
    flexPreviousExperience: String
    flexRating: Float
    flexReasonForParticipation: String
    flexRoles: [JobsFlexRole!]
    flexState: String
    flexUnderstandingOfSales: String
    hiringsForReview: [JobsHiring!]
    id: ID!
    idealJobDescription: String
    lastActiveAt: ISO8601DateTime
    onboardingState: JobsInquiryOnboardingState!
    ote: Int
    positionMain: JobsInquiryPosition
    positionOther: String
    quotaAttainmentByTeamPerPeriod: Int
    quotaAttainmentPerLastYear: Int
    quotaAttainmentPerPeriod: Int
    rankOnTeam: Int
    revenue: Int
    salesCycleLength: JobsInquirySalesCycleLength
    salesMethodologies: [JobsInquirySalesMethodology!]
    sdrQuotaPerPeriod: String
    sdrQuotaTypes: [JobsInquirySdrQuota!]
    source: JobsInquirySource!
    stale: Boolean!
    state: JobsInquiryState!
    teamSize: Int
    vpDepartmentSize: JobsInquiryVpDepartmentSize
    vpManagedRoles: [JobsInquiryVpManagedRole!]
    vpQuotaType: JobsInquiryVpQuota
    vpResponsibilities: String
    willingToRelocate: Boolean
}

enum JobsInquiryActivationOrigin {
    email
    profile_update
    refresh_inquiry
    sms
}

enum JobsInquiryAeLeadSource {
    CUSTOMER
    MARKETING
    SDR
    SELF
}

enum JobsInquiryAeQuota {
    ANNUAL
    MONTHLY
    QUARTERLY
}

enum JobsInquiryCsmAccountNumber {
    NUMBER_101_250
    NUMBER_11_50
    NUMBER_1_10
    NUMBER_251_500
    NUMBER_51_100
    NUMBER_MORE_500
}

enum JobsInquiryCsmBusinessValue {
    VALUE_1_1M_2M_USD
    VALUE_251K_1M_USD
    VALUE_2_1M_5M_USD
    VALUE_LESS_250K_USD
    VALUE_MORE_5M_USD
}

enum JobsInquiryCsmQuota {
    CSM_INDIVIDUAL_QUOTA
    CSM_NO_QUOTA
    CSM_TEAM_QUOTA
}

enum JobsInquiryCsmQuotaMetric {
    CSM_CUSTOMER_SATISFACTION
    CSM_ENGAGEMENT
    CSM_OPPORTUNITIES
    CSM_RENEWALS
    CSM_UPSELLS
}

enum JobsInquiryCsmQuotaPeriod {
    ANNUAL
    MONTHLY
    QUARTERLY
}

enum JobsInquiryCsmRenewalValue {
    VALUE_1K_5K_USD
    VALUE_25K_100K_USD
    VALUE_5K_25K_USD
    VALUE_LESS_1K_USD
    VALUE_MORE_100K_USD
}

enum JobsInquiryCsmUpsellValue {
    VALUE_1K_5K_USD
    VALUE_25K_100K_USD
    VALUE_5K_25K_USD
    VALUE_LESS_1K_USD
    VALUE_MORE_100K_USD
}

enum JobsInquiryDealBreaker {
    NEW_PRODUCT
    NONE
    OFFICE_WORK
    REMOTE_COMPANY
    WITHOUT_SDR
}

enum JobsInquiryDealSize {
    DEAL_100000_500000
    DEAL_10000_50000
    DEAL_50000_100000
    DEAL_LESS_10000
    DEAL_MORE_500000
}

enum JobsInquiryEmployment {
    FULL_TIME
    SIDE_HUSTLE
}

type JobsInquiryFakeHiring {
    candidateState: JobsHiringCandidateState!
    vacancy: JobsVacancy
    vacancyUid: String!
}

enum JobsInquiryOnboardingState {
    ACCOMPLISHMENTS_STEP
    AE_LEAD_SOURCES_STEP
    AE_QUOTA_PER_PERIOD_STEP
    AE_QUOTA_TYPE_STEP
    BASE_SALARY_STEP
    CLIENTS_STEP
    COMPANY_STAGE_STEP
    CSM_ACCOUNTS_NUMBER_STEP
    CSM_DEAL_CYCLE_STEP
    CSM_QUOTA_METRIC
    CSM_QUOTA_PERIOD
    CSM_QUOTA_TYPE
    CSM_RENEWAL_VALUE_STEP
    CSM_TOTAL_BUSINESS_VALUE_STEP
    CSM_UPSELL_VALUE_STEP
    CURRENT_POSITION_STEP
    DEAL_BREAKERS_STEP
    DEAL_SIZE_STEP
    EMPLOYMENT_TYPE_STEP
    IDEAL_JOB_DESCRIPTION_STEP
    LINKEDIN_URL_STEP
    LOCATION_STEP
    OTE_STEP
    PHONE_NUMBER_STEP
    POSITION_STEP
    QUOTA_ATTAINMENT_BY_TEAM_PER_PERIOD_STEP
    QUOTA_ATTAINMENT_PER_LAST_YEAR_STEP
    QUOTA_ATTAINMENT_PER_PERIOD_STEP
    RANK_ON_TEAM_STEP
    RELOCATION_STEP
    REVENUE_STEP
    SALES_CYCLE_LENGTH_STEP
    SALES_METHODOLOGIES_STEP
    SDR_QUOTA_PER_PERIOD_STEP
    SDR_QUOTA_TYPE_STEP
    SUGGESTED_LOCATION_STEP
    TEAM_SIZE_STEP
    VP_DEPARTMENT_SIZE_STEP
    VP_MANAGED_ROLES_STEP
    VP_QUOTA_MEASUREMENT_STEP
}

enum JobsInquiryPosition {
    ACCOUNT_EXECUTIVE
    CSM
    SDR
    VP
}

enum JobsInquirySalesCycleLength {
    VALUE_1_MONTH_3_MONTHS
    VALUE_1_WEEK_1_MONTH
    VALUE_3_MONTHS_1_YEAR
    VALUE_LESS_1_WEEK
    VALUE_LONGER_1_YEAR
}

enum JobsInquirySalesMethodology {
    CHALLENGER
    CONCEPTUAL_SELLING
    MEDDIC
    NO_FORMAL_TRAINING
    SANDLER
    SNAP_SELLING
    SPIN_SELLING
}

enum JobsInquirySdrQuota {
    APPOINTMENT
    OPPORTUNITY
    PIPELINE
    REVENUE
}

enum JobsInquirySource {
    LINKEDIN
    OTHER
}

enum JobsInquiryState {
    filled
    initialized
    removed
}

enum JobsInquiryVpDepartmentSize {
    VP_DEPARTMENT_SIZE_1_20
    VP_DEPARTMENT_SIZE_21_50
    VP_DEPARTMENT_SIZE_51_75
    VP_DEPARTMENT_SIZE_76_100
    VP_DEPARTMENT_SIZE_MORE_100
}

enum JobsInquiryVpManagedRole {
    VP_MANAGED_ROLE_AE
    VP_MANAGED_ROLE_AE_MANAGER
    VP_MANAGED_ROLE_CSM
    VP_MANAGED_ROLE_DIRECTOR
    VP_MANAGED_ROLE_OTHER
    VP_MANAGED_ROLE_SALES_ENABLEMENT
    VP_MANAGED_ROLE_SALES_OPS
    VP_MANAGED_ROLE_SDR
    VP_MANAGED_ROLE_SDR_MANAGER
    VP_MANAGED_ROLE_SE
}

enum JobsInquiryVpQuota {
    VP_QUOTA_INDIVIDUAL
    VP_QUOTA_TEAM
}

enum JobsJobSearchStatus {
    actively_looking
    not_interested
    passively_looking
}

"""
Autogenerated input type of JobsModeratorsActivateVacancy
"""
input JobsModeratorsActivateVacancyInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    vacancyId: ID!
}

type JobsModeratorsCandidate implements JobsCandidateInterface {
    annualQuota: String
    avatarUrl: String
    badges: [JobsHiringBadge!]
    baseSalary: String
    bullet1: String
    bullet2: String
    captions: String
    city: City
    clients: [Client!]!
    csmAccountsNumber: String
    csmQuotaMetric: String
    csmQuotaType: String
    csmRenewalValue: String
    csmTotalBusinessValue: String
    csmUpsellValue: String
    currency: Currency
    dealSize: String
    departments: [Department!]!
    firstname: String
    flexAppliedCriteria: [JobsFlexAppliedCriteria!]
    flexBandwidth: String
    flexBriefVideoUrl: String
    flexPreviousExperience: String
    flexRating: Float
    flexReasonForParticipation: String
    flexRoles: [JobsFlexRole!]
    flexUnderstandingOfSales: String
    headline1: String
    headline2: String
    headline3: String
    id: ID!
    idealJobDescription: String
    initials: String
    inquiredPosition: JobsInquiryPosition
    lastname: String
    leadSources: String
    linkedinUrl: String
    marketingHeadline: String
    ote: String
    position: String
    quotaAttainmentByTeamPerPeriod: String
    quotaAttainmentPerLastYear: String
    quotaAttainmentPerPeriod: Int
    salesCycleLength: String
    state: JobsModeratorsHiringState!
    teamRanking: String
    updatedAt: ISO8601DateTime!
    visibilityOfAttributes: JobsModeratorsCandidateVisibilityOfAttributes!
    vpDepartmentSize: String
    vpManagedRoles: String
    vpQuotaType: String
    willingToRelocate: Boolean
    workHistories: [WorkHistory!]!
}

type JobsModeratorsCandidateVisibilityOfAttributes {
    isAnnualQuotaVisible: Boolean
    isBaseSalaryVisible: Boolean
    isBullet1Visible: Boolean
    isBullet2Visible: Boolean
    isClientsVisible: Boolean
    isCsmAccountsNumberVisible: Boolean
    isCsmQuotaMetricVisible: Boolean
    isCsmQuotaTypeVisible: Boolean
    isCsmRenewalValueVisible: Boolean
    isCsmTotalBusinessValueVisible: Boolean
    isCsmUpsellValueVisible: Boolean
    isDealSizeVisible: Boolean
    isDepartmentsVisible: Boolean
    isFlexAppliedCriteriaVisible: Boolean
    isFlexBandwidthVisible: Boolean
    isFlexBriefVideoUrlVisible: Boolean
    isFlexPreviousExperienceVisible: Boolean
    isFlexRatingVisible: Boolean
    isFlexReasonForParticipationVisible: Boolean
    isFlexRolesVisible: Boolean
    isFlexUnderstandingOfSalesVisible: Boolean
    isHeadline1Visible: Boolean
    isHeadline2Visible: Boolean
    isHeadline3Visible: Boolean
    isIdealJobDescriptionVisible: Boolean
    isLeadSourcesVisible: Boolean
    isLinkedinUrlVisible: Boolean
    isMarketingHeadlineVisible: Boolean
    isOteVisible: Boolean
    isQuotaAttainmentByTeamPerPeriodVisible: Boolean
    isQuotaAttainmentPerLastYearVisible: Boolean
    isQuotaAttainmentPerPeriodVisible: Boolean
    isSalesCycleLengthVisible: Boolean
    isTeamRankingVisible: Boolean
    isVpDepartmentSizeVisible: Boolean
    isVpManagedRolesVisible: Boolean
    isVpQuotaTypeVisible: Boolean
    isWorkHistoriesVisible: Boolean
}

"""
Autogenerated input type of JobsModeratorsCreateEmployer
"""
input JobsModeratorsCreateEmployerInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID!
}

"""
Autogenerated input type of JobsModeratorsCreateHiring
"""
input JobsModeratorsCreateHiringInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    inquiryId: ID!
    origin: JobsHiringOrigin = manual
    vacancyId: ID!
}

"""
Autogenerated input type of JobsModeratorsCreateHirings
"""
input JobsModeratorsCreateHiringsInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    inquiryId: ID!
    origin: JobsHiringOrigin = manual
    vacancyIds: [ID!]!
}

"""
Autogenerated input type of JobsModeratorsCreateInquiryNote
"""
input JobsModeratorsCreateInquiryNoteInput {
    body: String

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    inquiryId: ID!
    subcategory: JobsModeratorsInquiryNoteSubcategory
}

"""
Autogenerated input type of JobsModeratorsCreateVacancy
"""
input JobsModeratorsCreateVacancyInput {
    booleanFields: [JobsModeratorsFieldsBooleanAttributes!]
    cityIds: [ID!]

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    comments: String
    countries: [String!]
    description: String
    employerId: ID!
    employmentType: JobsVacancyEmployment
    floatFields: [JobsModeratorsFieldsFloatAttributes!]
    floatRangeFields: [JobsModeratorsFieldsFloatRangeAttributes!]
    gptPrompt: String
    headcount: Int
    hiringsBacklogLimit: Int
    integerFields: [JobsModeratorsFieldsIntegerAttributes!]
    integerRangeFields: [JobsModeratorsFieldsIntegerRangeAttributes!]
    lookbackPeriod: Int
    multiSelectFields: [JobsModeratorsFieldsMultiSelectAttributes!]
    multiSelectRecordFields: [JobsModeratorsFieldsMultiSelectRecordAttributes!]
    openToRemoteWork: Boolean
    pairScoreThreshold: Float
    position: JobsRole
    primaryRecruiterId: ID
    recruiterIds: [ID!]
    remoteOnlyAtSelectedLocations: Boolean
    singleSelectFields: [JobsModeratorsFieldsSingleSelectAttributes!]
    singleSelectRecordFields: [JobsModeratorsFieldsSingleSelectRecordAttributes!]
    stringArrayFields: [JobsModeratorsFieldsStringArrayAttributes!]
    stringFields: [JobsModeratorsFieldsStringAttributes!]
    submitPeriod: Int
    submitScoreThreshold: Float
    title: String
}

"""
Autogenerated input type of JobsModeratorsCreateVacancySubmission
"""
input JobsModeratorsCreateVacancySubmissionInput {
    avgDealSize: String
    avgSalesCycle: String
    baseSalary: String
    brandMaturity: JobsVacancySubmissionBrandMaturity

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyName: String
    compensation: String
    compensationDescription: String
    customerProfile: String
    industry: String
    jobUrl: String
    keyPoint1: String
    keyPoint2: String
    keyPoint3: String
    keyPoint4: String
    keyPoint5: String
    keyPoint6: String
    keyPoint7: String
    location: String
    minBandwidth: String
    ote: String
    quotaAttainmentByTeam: Int
    roleName: String
    vacancyId: ID!
    visibilityOfAttributes: JobsModeratorsVacancySubmissionVisibilityAttributes
    workType: String
}

"""
Autogenerated input type of JobsModeratorsDeactivateVacancy
"""
input JobsModeratorsDeactivateVacancyInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    vacancyId: ID!
}

"""
Autogenerated input type of JobsModeratorsDeleteVacancy
"""
input JobsModeratorsDeleteVacancyInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    vacancyId: ID!
}

"""
Autogenerated input type of JobsModeratorsDestroyInquiryNote
"""
input JobsModeratorsDestroyInquiryNoteInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    inquiryNoteId: ID!
}

"""
Autogenerated input type of JobsModeratorsEditEmployersClients
"""
input JobsModeratorsEditEmployersClientsInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    clients: [JobsModeratorsEmployerClientAttributes!]!
    employerId: ID!
}

"""
Autogenerated input type of JobsModeratorsEditEmployersRecruiters
"""
input JobsModeratorsEditEmployersRecruitersInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    employerId: ID!
    recruiters: [JobsModeratorsRecruiterAttributes!]!
}

type JobsModeratorsEmployer {
    accountOwner: JobsModeratorsEmployersAccountOwner
    activatedVacancies: [JobsModeratorsVacancy!]!
    activatedVacanciesCount: Int!
    activatedVacanciesHeadcount: Int!
    clients: [JobsModeratorsEmployerClient!]!
    company: Company!
    daysSinceLastHiringReviewed: Int
    description: String
    descriptionHtml: String
    descriptionMarkdown: String
    greenhouseIntegrated: Boolean!
    hiringProcessHtml: String
    hiringProcessMarkdown: String
    hiringsHiredCount: Int!
    hiringsInterviewedCount: Int!
    hiringsIntroducedCount: Int!
    hiringsOfferedCount: Int!
    hiringsScheduledCount: Int!
    hiringsToExpireCount: Int!
    hiringsToReviewCount: Int!
    id: ID!
    keyPoints: [String!]!
    recruiters: [JobsModeratorsRecruiter!]!
    roleUrl: String
    slackChannel: String
    talentAccessSubscription: JobsModeratorsEmployerSubscription
    vacancies: [JobsModeratorsVacancy!]!
    vacanciesToMergeWith: [JobsModeratorsVacancy!]!
}

type JobsModeratorsEmployerClient {
    company: Company!
    employer: JobsModeratorsEmployer!
    id: ID!
}

"""
Attributes for creating, updating, or deleting jobs employer's clients
"""
input JobsModeratorsEmployerClientAttributes {
    companyId: ID!
    id: ID
}

"""
The connection type for JobsModeratorsEmployer.
"""
type JobsModeratorsEmployerConnection {
    """
    A list of edges.
    """
    edges: [JobsModeratorsEmployerEdge!]!

    """
    A list of nodes.
    """
    nodes: [JobsModeratorsEmployer!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type JobsModeratorsEmployerEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: JobsModeratorsEmployer
}

type JobsModeratorsEmployerHiringGroups {
    hiringsAccepted: [JobsModeratorsHiring!]
    hiringsInProcess: [JobsModeratorsHiring!]
    hiringsInReview: [JobsModeratorsHiring!]
}

"""
Attributes for sorting employers for a moderator
"""
input JobsModeratorsEmployerSortAttributes {
    field: JobsModeratorsEmployerSortField!
    order: SortOrder!
}

enum JobsModeratorsEmployerSortField {
    COMPANY_NAME
    DAYS_SINCE_LAST_HIRING_REVIEWED
    HIRINGS_HIRED_COUNT
    HIRINGS_INTERVIEWED_COUNT
    HIRINGS_INTRODUCED_COUNT
    HIRINGS_OFFERED_COUNT
    HIRINGS_SCHEDULED_COUNT
    HIRINGS_TO_EXPIRE_COUNT
    HIRINGS_TO_REVIEW_COUNT
}

type JobsModeratorsEmployerSubscription {
    active: Boolean!
    expiresAt: ISO8601DateTime!
    quantity: Int!
}

enum JobsModeratorsEmployerSubscriptionState {
    ACTIVE
    INACTIVE
}

enum JobsModeratorsEmployerSubscriptionType {
    TALENT_ACCESS
}

type JobsModeratorsEmployersAccountOwner {
    calendarLink: String
    id: ID!
    slackId: String!
    user: JobsModeratorsUser!
}

union JobsModeratorsField = JobsModeratorsFieldsBoolean | JobsModeratorsFieldsFloat | JobsModeratorsFieldsFloatRange | JobsModeratorsFieldsInteger | JobsModeratorsFieldsIntegerRange | JobsModeratorsFieldsMultiSelect | JobsModeratorsFieldsMultiSelectRecord | JobsModeratorsFieldsSingleSelect | JobsModeratorsFieldsSingleSelectRecord | JobsModeratorsFieldsString | JobsModeratorsFieldsStringArray

interface JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    shouldClause: Boolean!
}

type JobsModeratorsFieldValuesBoolean implements JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    shouldClause: Boolean!
    value: Boolean
}

type JobsModeratorsFieldValuesFloat implements JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    shouldClause: Boolean!
    value: Float
}

type JobsModeratorsFieldValuesFloatRange implements JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    range: FloatRangeRightBoundOptional
    shouldClause: Boolean!
}

type JobsModeratorsFieldValuesInteger implements JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    shouldClause: Boolean!
    value: Int
}

type JobsModeratorsFieldValuesIntegerRange implements JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    range: IntRangeRightBoundOptional
    shouldClause: Boolean!
}

type JobsModeratorsFieldValuesMultiSelect implements JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    shouldClause: Boolean!
    values: [String!]!
}

type JobsModeratorsFieldValuesMultiSelectRecord implements JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    records: [JobsModeratorsFieldValuesSelectRecordType!]!
    shouldClause: Boolean!
}

union JobsModeratorsFieldValuesSelectRecordType = City | Company | Department | Industry

type JobsModeratorsFieldValuesSingleSelect implements JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    shouldClause: Boolean!
    value: String
}

type JobsModeratorsFieldValuesSingleSelectRecord implements JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    record: JobsModeratorsFieldValuesSelectRecordType!
    shouldClause: Boolean!
}

type JobsModeratorsFieldValuesString implements JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    shouldClause: Boolean!
    value: String
}

type JobsModeratorsFieldValuesStringArray implements JobsModeratorsFieldValueInterface {
    field: JobsModeratorsField!
    id: ID!
    negation: Boolean!
    priority: Int
    shouldClause: Boolean!
    values: [String!]
}

enum JobsModeratorsFieldsAccessLevel {
    ADMIN
    EVERYONE
}

type JobsModeratorsFieldsBoolean implements JobsFieldsBooleanInterface & JobsFieldsInterface {
    accessLevels: [JobsModeratorsFieldsAccessLevel!]!
    availableForRoles: [JobsRole!]!
    category: JobsModeratorsFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    requiredForRoles: [JobsRole!]!
    scopes: [JobsFieldsScope!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsModeratorsFieldsBooleanAttributes {
    fieldId: ID
    id: ID
    negation: Boolean
    priority: Int
    shouldClause: Boolean
    value: Boolean
}

type JobsModeratorsFieldsCategory implements JobsFieldsCategoryInterface {
    description: String
    fields(
        """
        filter by overlapping for `accessLevels`
        """
        accessLevels: [JobsFieldsAccessLevel!]

        """
        filter by overlapping for `availableForRoles`
        """
        availableForRoles: [JobsRole!]

        """
        filter by overlapping for `popularForRoles`
        """
        popularForRoles: [JobsRole!]

        """
        filter by overlapping for `scopes`
        """
        scopes: [JobsFieldsScope!]
    ): [JobsModeratorsField!]!
    id: ID!
    position: Int!
    title: String!
}

type JobsModeratorsFieldsFloat implements JobsFieldsFloatInterface & JobsFieldsInterface {
    accessLevels: [JobsModeratorsFieldsAccessLevel!]!
    availableForRoles: [JobsRole!]!
    category: JobsModeratorsFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String!
    popularForRoles: [JobsRole!]!
    position: Int!
    range: FloatRangeRightBoundOptional
    requiredForRoles: [JobsRole!]!
    scopes: [JobsFieldsScope!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsModeratorsFieldsFloatAttributes {
    fieldId: ID
    id: ID
    negation: Boolean
    priority: Int
    shouldClause: Boolean
    value: Float
}

type JobsModeratorsFieldsFloatRange implements JobsFieldsFloatRangeInterface & JobsFieldsInterface {
    accessLevels: [JobsModeratorsFieldsAccessLevel!]!
    availableForRoles: [JobsRole!]!
    category: JobsModeratorsFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: JobsFieldsRangePlaceholder!
    popularForRoles: [JobsRole!]!
    position: Int!
    range: FloatRangeRightBoundOptional
    requiredForRoles: [JobsRole!]!
    scopes: [JobsFieldsScope!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsModeratorsFieldsFloatRangeAttributes {
    fieldId: ID
    id: ID
    negation: Boolean
    priority: Int
    shouldClause: Boolean
    value: FloatRangeRightBoundOptionalInput
}

type JobsModeratorsFieldsInteger implements JobsFieldsIntegerInterface & JobsFieldsInterface {
    accessLevels: [JobsModeratorsFieldsAccessLevel!]!
    availableForRoles: [JobsRole!]!
    category: JobsModeratorsFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    range: IntRangeRightBoundOptional
    requiredForRoles: [JobsRole!]!
    scopes: [JobsFieldsScope!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsModeratorsFieldsIntegerAttributes {
    fieldId: ID
    id: ID
    negation: Boolean
    priority: Int
    shouldClause: Boolean
    value: Int
}

type JobsModeratorsFieldsIntegerRange implements JobsFieldsIntegerRangeInterface & JobsFieldsInterface {
    accessLevels: [JobsModeratorsFieldsAccessLevel!]!
    availableForRoles: [JobsRole!]!
    category: JobsModeratorsFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: JobsFieldsRangePlaceholder!
    popularForRoles: [JobsRole!]!
    position: Int!
    range: IntRangeRightBoundOptional
    requiredForRoles: [JobsRole!]!
    scopes: [JobsFieldsScope!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsModeratorsFieldsIntegerRangeAttributes {
    fieldId: ID
    id: ID
    negation: Boolean
    priority: Int
    shouldClause: Boolean
    value: IntRangeRightBoundOptionalInput
}

type JobsModeratorsFieldsMultiSelect implements JobsFieldsInterface & JobsFieldsSelectInterface {
    accessLevels: [JobsModeratorsFieldsAccessLevel!]!
    availableForRoles: [JobsRole!]!
    category: JobsModeratorsFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    options: [JobsFieldsSelectOption!]!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    requiredForRoles: [JobsRole!]!
    scopes: [JobsFieldsScope!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsModeratorsFieldsMultiSelectAttributes {
    fieldId: ID
    id: ID
    negation: Boolean
    priority: Int
    shouldClause: Boolean
    values: [String!]
}

type JobsModeratorsFieldsMultiSelectRecord implements JobsFieldsInterface & JobsFieldsSingleSelectRecordInterface {
    accessLevels: [JobsModeratorsFieldsAccessLevel!]!
    availableForRoles: [JobsRole!]!
    category: JobsModeratorsFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    recordType: JobsFieldsRecordType!
    requiredForRoles: [JobsRole!]!
    scopes: [JobsFieldsScope!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsModeratorsFieldsMultiSelectRecordAttributes {
    fieldId: ID
    id: ID
    negation: Boolean
    priority: Int
    recordIds: [ID!]
    shouldClause: Boolean
}

type JobsModeratorsFieldsSingleSelect implements JobsFieldsInterface & JobsFieldsSelectInterface {
    accessLevels: [JobsModeratorsFieldsAccessLevel!]!
    availableForRoles: [JobsRole!]!
    category: JobsModeratorsFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    options: [JobsFieldsSelectOption!]!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    requiredForRoles: [JobsRole!]!
    scopes: [JobsFieldsScope!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsModeratorsFieldsSingleSelectAttributes {
    fieldId: ID
    id: ID
    negation: Boolean
    priority: Int
    shouldClause: Boolean
    value: String
}

type JobsModeratorsFieldsSingleSelectRecord implements JobsFieldsInterface & JobsFieldsSingleSelectRecordInterface {
    accessLevels: [JobsModeratorsFieldsAccessLevel!]!
    availableForRoles: [JobsRole!]!
    category: JobsModeratorsFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    recordType: JobsFieldsRecordType!
    requiredForRoles: [JobsRole!]!
    scopes: [JobsFieldsScope!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsModeratorsFieldsSingleSelectRecordAttributes {
    fieldId: ID
    id: ID
    negation: Boolean
    priority: Int
    recordId: ID
    shouldClause: Boolean
}

type JobsModeratorsFieldsString implements JobsFieldsInterface & JobsFieldsStringInterface {
    accessLevels: [JobsModeratorsFieldsAccessLevel!]!
    availableForRoles: [JobsRole!]!
    category: JobsModeratorsFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    requiredForRoles: [JobsRole!]!
    scopes: [JobsFieldsScope!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

type JobsModeratorsFieldsStringArray implements JobsFieldsInterface & JobsFieldsStringArrayInterface {
    accessLevels: [JobsModeratorsFieldsAccessLevel!]!
    availableForRoles: [JobsRole!]!
    category: JobsModeratorsFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    requiredForRoles: [JobsRole!]!
    scopes: [JobsFieldsScope!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsModeratorsFieldsStringArrayAttributes {
    fieldId: ID
    id: ID
    negation: Boolean
    priority: Int
    shouldClause: Boolean
    values: [String!]
}

input JobsModeratorsFieldsStringAttributes {
    fieldId: ID
    id: ID
    negation: Boolean
    priority: Int
    shouldClause: Boolean
    value: String
}

"""
Autogenerated input type of JobsModeratorsFireHiringEvent
"""
input JobsModeratorsFireHiringEventInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    eventName: JobsModeratorsHiringEventName!
    hiringId: ID!
}

"""
Autogenerated input type of JobsModeratorsFireInquiryEvent
"""
input JobsModeratorsFireInquiryEventInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    eventName: JobsModeratorsInquiryEventName!
    inquiryId: ID!
}

type JobsModeratorsHiring {
    acceptedByCandidateAt: ISO8601DateTime
    acceptedByEmployerAt: ISO8601DateTime
    acceptedByOpsAt: ISO8601DateTime
    availableEvents: [String!]!
    employer: JobsModeratorsEmployer!
    id: ID!
    inquiry: JobsModeratorsInquiry!
    interviewDate: ISO8601Date
    interviewNumber: Int
    introductionDate: ISO8601Date
    matchingModelInterpretation: String
    matchingScore: Float
    origin: JobsHiringOrigin!
    scheduledMessages: [JobsModeratorsScheduledMessage!]
    secondsInState: Int!
    state: JobsModeratorsHiringState!
    stateUpdatedAt: ISO8601DateTime!
    submittedAt: ISO8601DateTime
    talentPortalUrl: String!
    vacancy: JobsModeratorsVacancy
}

"""
The connection type for JobsModeratorsHiring.
"""
type JobsModeratorsHiringConnection {
    """
    A list of edges.
    """
    edges: [JobsModeratorsHiringEdge!]!

    """
    A list of nodes.
    """
    nodes: [JobsModeratorsHiring!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type JobsModeratorsHiringEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: JobsModeratorsHiring
}

enum JobsModeratorsHiringEventName {
    accept_another_offer
    accept_by_candidate
    accept_by_employer
    deactivate
    expire
    finish_meeting
    hire
    introduce
    offer
    pair
    reject_by_candidate
    reject_by_employer
    reject_by_ops
    restore
    schedule_meeting
    submit
}

type JobsModeratorsHiringExplanation {
    badges: [JobsHiringBadge!]
    bullet1: String
    bullet2: String
    headline1: String
    headline2: String
    headline3: String
}

"""
Attributes for sorting hirings for a moderator
"""
input JobsModeratorsHiringSortAttributes {
    field: JobsModeratorsHiringSortField!
    order: SortOrder!
}

enum JobsModeratorsHiringSortField {
    accepted_by_candidate_at
    accepted_by_employer_at
    interview_date
    state_updated_at
    vacancy_title
}

enum JobsModeratorsHiringState {
    accepted_another_offer
    deactivated
    draft
    expired
    hired
    interviewed
    introduced
    matched
    offered
    paired
    queued
    rejected_by_candidate
    rejected_by_employer
    rejected_by_ops
    scheduled_assessment
    scheduled_interview
    submitted
}

type JobsModeratorsHiringStateCounter {
    count: Int!
    state: JobsModeratorsHiringState!
}

type JobsModeratorsInquiry implements JobsBaseInquiryInterface {
    accomplishments: String
    aeAnnualizedQuota: Int
    aeLeadSourceOther: String
    aeLeadSourcesMain: [JobsInquiryAeLeadSource!]
    aeQuotaPerPeriod: Int
    aeQuotaTypeMain: JobsInquiryAeQuota
    aeQuotaTypeOther: String
    assignee: JobsModeratorsUser
    availableEvents: [JobsModeratorsInquiryEventName!]
    baseSalary: Int
    canCreateHirings: Boolean!
    clientDescription: String
    csmAccountsNumber: JobsInquiryCsmAccountNumber
    csmQuotaMetricMain: [JobsInquiryCsmQuotaMetric!]
    csmQuotaMetricOther: String
    csmQuotaPeriodMain: JobsInquiryCsmQuotaPeriod
    csmQuotaPeriodOther: String
    csmQuotaTypeMain: JobsInquiryCsmQuota
    csmQuotaTypeOther: String
    csmRenewalValue: JobsInquiryCsmRenewalValue
    csmTotalBusinessValue: JobsInquiryCsmBusinessValue
    csmUpsellValue: JobsInquiryCsmUpsellValue
    currency: Currency
    dealBreakerOther: String
    dealBreakersMain: [JobsInquiryDealBreaker!]
    dealSize: JobsInquiryDealSize
    desiredCompanySeriesStages: [CompanySeriesStage!]
    employmentTypes: [JobsInquiryEmployment!]!
    filledAt: ISO8601DateTime
    flexAppliedCriteria: [JobsFlexAppliedCriteria!]
    flexBandwidth: String
    flexBriefVideoUrl: String
    flexConsideredCompanyTypes: [JobsFlexFlexConsideredCompanyType!]
    flexOnboardingState: String
    flexPreviousExperience: String
    flexRating: Float
    flexReasonForParticipation: String
    flexRoles: [JobsFlexRole!]
    flexState: String
    flexUnderstandingOfSales: String
    frontUrl: String!
    hirings: [JobsModeratorsHiring!]
    id: ID!
    idealJobDescription: String
    lastActiveAt: ISO8601DateTime
    lastNote: JobsModeratorsInquiryNote
    notes: [JobsModeratorsInquiryNote!]
    onboardingState: JobsInquiryOnboardingState!
    ote: Int
    positionMain: JobsInquiryPosition
    positionOther: String
    quotaAttainmentByTeamPerPeriod: Int
    quotaAttainmentPerLastYear: Int
    quotaAttainmentPerPeriod: Int
    rankOnTeam: Int
    refreshedAt: ISO8601DateTime
    revenue: Int
    salesCycleLength: JobsInquirySalesCycleLength
    salesMethodologies: [JobsInquirySalesMethodology!]
    screened: Boolean!
    sdrQuotaPerPeriod: String
    sdrQuotaTypes: [JobsInquirySdrQuota!]
    state: JobsInquiryState!
    teamSize: Int
    tier: Int
    user: JobsModeratorsUser
    vpDepartmentSize: JobsInquiryVpDepartmentSize
    vpManagedRoles: [JobsInquiryVpManagedRole!]
    vpQuotaType: JobsInquiryVpQuota
    vpResponsibilities: String
    willingToRelocate: Boolean
    workHistories: [WorkHistory!]!
}

"""
The connection type for JobsModeratorsInquiry.
"""
type JobsModeratorsInquiryConnection {
    """
    A list of edges.
    """
    edges: [JobsModeratorsInquiryEdge!]!

    """
    A list of nodes.
    """
    nodes: [JobsModeratorsInquiry!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type JobsModeratorsInquiryEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: JobsModeratorsInquiry
}

enum JobsModeratorsInquiryEventName {
    remove
}

type JobsModeratorsInquiryMatch {
    inquiry: JobsModeratorsInquiry!
    matchingModelInterpretation: [String!]
    score: Float
}

type JobsModeratorsInquiryNote {
    body: String
    createdAt: ISO8601DateTime
    hiring: JobsModeratorsHiring
    id: ID!
    inquiry: JobsModeratorsInquiry!
    mainCategory: JobsModeratorsInquiryNoteMainCategory!
    subcategory: JobsModeratorsInquiryNoteSubcategory!
    title: String!
    user: JobsModeratorsUser
}

enum JobsModeratorsInquiryNoteMainCategory {
    MAIN_CATEGORY_MODEL
    MAIN_CATEGORY_PROFILE_UPDATES
    MAIN_CATEGORY_TEAM_NOTES
}

enum JobsModeratorsInquiryNoteSubcategory {
    SUBCATEGORY_CALL
    SUBCATEGORY_CANDIDATE_HIRING_REJECTION
    SUBCATEGORY_CANDIDATE_MESSAGE
    SUBCATEGORY_CANDIDATE_PROFILE_UPDATE
    SUBCATEGORY_EMPLOYER_HIRING_REJECTION
    SUBCATEGORY_GENERAL
    SUBCATEGORY_NO_SHOW_INTERVIEW
    SUBCATEGORY_OPS_HIRING_REJECTION
    SUBCATEGORY_OPS_PROFILE_UPDATE
    SUBCATEGORY_PAIRING_MODEL
    SUBCATEGORY_PROFILE
    SUBCATEGORY_SUBMITTED_CARD_UPDATE
    SUBCATEGORY_TIERING_MODEL
}

"""
Attributes for sorting inquiries for a moderator
"""
input JobsModeratorsInquirySortAttributes {
    field: JobsModeratorsInquirySortField!
    order: SortOrder!
}

enum JobsModeratorsInquirySortField {
    FILLED_AT
    LAST_ACTIVE_OR_FILLED_AT
}

"""
Autogenerated input type of JobsModeratorsMatchInquiry
"""
input JobsModeratorsMatchInquiryInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    inquiryId: ID!
}

"""
Autogenerated return type of JobsModeratorsMatchInquiry
"""
type JobsModeratorsMatchInquiryPayload {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    error: String
    inquiry: JobsModeratorsInquiry
}

"""
Autogenerated input type of JobsModeratorsMergeVacancy
"""
input JobsModeratorsMergeVacancyInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    mergeWithVacancyId: ID!
    vacancyId: ID!
}

type JobsModeratorsOpsRejectionReason {
    category: String!
    id: ID!
    title: String!
}

type JobsModeratorsRecruiter {
    email: String!
    firstname: String
    fullName: String
    id: ID!
    jobTitle: String
    lastname: String
    phone: String
    primary: Boolean
    schedulingLink: String
    slackId: String
}

"""
Attributes for creating, updating, or deleting jobs employer's recruiters
"""
input JobsModeratorsRecruiterAttributes {
    email: String!
    firstname: String!
    id: ID
    lastname: String!
    phone: String
    schedulingLink: String
    slackId: String
}

"""
Autogenerated input type of JobsModeratorsRejectInquiryVacancySuggestionByOps
"""
input JobsModeratorsRejectInquiryVacancySuggestionByOpsInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    inquiryId: ID!
    otherRejectionReason: String
    rejectionReasonIds: [ID!]
    vacancyId: ID!
}

"""
Autogenerated input type of JobsModeratorsRejectJobsHiringByOps
"""
input JobsModeratorsRejectJobsHiringByOpsInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    hiringId: ID!
    otherRejectionReason: String
    rejectionReasonIds: [ID!]
}

"""
Autogenerated input type of JobsModeratorsRemoveInquiry
"""
input JobsModeratorsRemoveInquiryInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    inquiryId: ID!
}

"""
Autogenerated input type of JobsModeratorsRenewActiveJobStatus
"""
input JobsModeratorsRenewActiveJobStatusInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    userId: ID!
}

"""
Autogenerated input type of JobsModeratorsScheduleMeeting
"""
input JobsModeratorsScheduleMeetingInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    hiringId: ID!
    interviewDate: ISO8601Date!
    meetingType: JobsHiringMeeting!
}

type JobsModeratorsScheduledMessage {
    deliveredAt: ISO8601DateTime
    failedAt: ISO8601DateTime
    id: ID!
    name: String!
    scheduledAt: ISO8601DateTime
}

"""
Autogenerated input type of JobsModeratorsSubmitHiring
"""
input JobsModeratorsSubmitHiringInput {
    candidateAttributes: CandidateAttributes!
    candidateAttributesVisability: CandidateAttributesVisability!

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    hiringId: ID!
}

"""
Autogenerated input type of JobsModeratorsUpdateCompany
"""
input JobsModeratorsUpdateCompanyInput {
    categories: [String!]

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID!
}

"""
Autogenerated input type of JobsModeratorsUpdateEmployer
"""
input JobsModeratorsUpdateEmployerInput {
    accountOwnerId: ID

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID
    descriptionHtml: String
    descriptionMarkdown: String
    employerId: ID!
    hiringProcessHtml: String
    hiringProcessMarkdown: String
    industries: [String!]
    keyPoints: [String!]
    roleUrl: String
    slackChannel: String
}

"""
Autogenerated input type of JobsModeratorsUpdateHiring
"""
input JobsModeratorsUpdateHiringInput {
    acceptedByCandidateAt: ISO8601DateTime
    acceptedByEmployerAt: ISO8601DateTime

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    employerId: ID!
    hiringId: ID!
    interviewDate: ISO8601Date
    introductionDate: ISO8601Date
    vacancyId: ID
}

"""
Autogenerated input type of JobsModeratorsUpdateInquiry
"""
input JobsModeratorsUpdateInquiryInput {
    accomplishments: String
    aeLeadSourceOther: String
    aeLeadSourcesMain: [JobsInquiryAeLeadSource!]
    aeQuotaPerPeriod: Int
    aeQuotaTypeMain: JobsInquiryAeQuota
    aeQuotaTypeOther: String
    assigneeId: ID
    baseSalary: Int

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    csmAccountsNumber: JobsInquiryCsmAccountNumber
    csmQuotaMetricMain: [JobsInquiryCsmQuotaMetric!]
    csmQuotaMetricOther: String
    csmQuotaPeriodMain: JobsInquiryCsmQuotaPeriod
    csmQuotaPeriodOther: String
    csmQuotaTypeMain: JobsInquiryCsmQuota
    csmQuotaTypeOther: String
    csmRenewalValue: JobsInquiryCsmRenewalValue
    csmTotalBusinessValue: JobsInquiryCsmBusinessValue
    csmUpsellValue: JobsInquiryCsmUpsellValue
    currency: Currency
    dealBreakerOther: String
    dealBreakersMain: [JobsInquiryDealBreaker!]
    dealSize: JobsInquiryDealSize
    desiredCompanySeriesStageIds: [Int!]
    employmentTypes: [JobsInquiryEmployment!]
    fakeHiring: InquiryFakeHiringAttributes
    flexAppliedCriteria: [JobsFlexAppliedCriteria!]
    flexBandwidth: JobsFlexBandwidth
    flexBriefVideoUrl: String
    flexConsideredCompanyTypes: [JobsFlexFlexConsideredCompanyType!]
    flexOnboardingState: String
    flexPreviousExperience: String
    flexRating: Float
    flexReasonForParticipation: String
    flexRoles: [JobsFlexRole!]
    flexState: String
    flexUnderstandingOfSales: String
    idealJobDescription: String
    inquiryId: ID!
    onboardingState: JobsInquiryOnboardingState
    ote: Int
    positionMain: JobsInquiryPosition
    positionOther: String
    quotaAttainmentByTeamPerPeriod: Int
    quotaAttainmentPerLastYear: Int
    quotaAttainmentPerPeriod: Int
    rankOnTeam: Int
    revenue: Int
    salesCycleLength: JobsInquirySalesCycleLength
    salesMethodologies: [JobsInquirySalesMethodology!]
    screened: Boolean
    sdrQuotaPerPeriod: String
    sdrQuotaTypes: [JobsInquirySdrQuota!]
    source: JobsInquirySource
    teamSize: Int
    tier: Int
    vpDepartmentSize: JobsInquiryVpDepartmentSize
    vpManagedRoles: [JobsInquiryVpManagedRole!]
    vpQuotaType: JobsInquiryVpQuota
    vpResponsibilities: String
    willingToRelocate: Boolean
    workHistoryId: ID = null
}

"""
Autogenerated input type of JobsModeratorsUpdateSubmittedHiring
"""
input JobsModeratorsUpdateSubmittedHiringInput {
    candidateAttributes: CandidateAttributes!
    candidateAttributesVisability: CandidateAttributesVisability

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    hiringId: ID!
}

"""
Autogenerated input type of JobsModeratorsUpdateUser
"""
input JobsModeratorsUpdateUserInput {
    cityId: Int

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    departmentIds: [ID!]
    firstname: String
    lastname: String
    linkedinUrl: String
    phone: String
    position: String
    productTypeIds: [ID!]
    unarchivedClientCompanyIds: [ID!]
    userId: ID!
    warRoomCompanySeriesStageIds: [ID!]
    warRoomCompanyStageIds: [ID!]
    warRoomIndustryIds: [ID!]
    warRoomJobSearchStatus: String
    warRoomSalesRoleIds: [ID!]
    warRoomYearsOfExperience: Int
}

"""
Autogenerated input type of JobsModeratorsUpdateVacancy
"""
input JobsModeratorsUpdateVacancyInput {
    booleanFields: [JobsModeratorsFieldsBooleanAttributes!]
    cityIds: [ID!]

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    comments: String
    countries: [String!]
    description: String
    employmentType: JobsVacancyEmployment
    floatFields: [JobsModeratorsFieldsFloatAttributes!]
    floatRangeFields: [JobsModeratorsFieldsFloatRangeAttributes!]
    gptPrompt: String
    headcount: Int
    hiringsBacklogLimit: Int
    integerFields: [JobsModeratorsFieldsIntegerAttributes!]
    integerRangeFields: [JobsModeratorsFieldsIntegerRangeAttributes!]
    lookbackPeriod: Int

    """
    If provided then all other field are ingored and vacancy will not be updated, only merged
    """
    mergeWithVacancyId: ID @deprecated(reason: "Please use JobsModeratorsMergeVacancy instead")
    multiSelectFields: [JobsModeratorsFieldsMultiSelectAttributes!]
    multiSelectRecordFields: [JobsModeratorsFieldsMultiSelectRecordAttributes!]
    openToRemoteWork: Boolean
    pairScoreThreshold: Float
    position: JobsRole
    primaryRecruiterId: ID
    recruiterIds: [ID!]
    remoteOnlyAtSelectedLocations: Boolean
    singleSelectFields: [JobsModeratorsFieldsSingleSelectAttributes!]
    singleSelectRecordFields: [JobsModeratorsFieldsSingleSelectRecordAttributes!]
    stringArrayFields: [JobsModeratorsFieldsStringArrayAttributes!]
    stringFields: [JobsModeratorsFieldsStringAttributes!]
    submitPeriod: Int
    submitScoreThreshold: Float
    title: String
    vacancyId: ID!
}

"""
Autogenerated input type of JobsModeratorsUpdateVacancySubmission
"""
input JobsModeratorsUpdateVacancySubmissionInput {
    avgDealSize: String
    avgSalesCycle: String
    baseSalary: String
    brandMaturity: JobsVacancySubmissionBrandMaturity

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyName: String
    compensation: String
    compensationDescription: String
    customerProfile: String
    industry: String
    jobUrl: String
    keyPoint1: String
    keyPoint2: String
    keyPoint3: String
    keyPoint4: String
    keyPoint5: String
    keyPoint6: String
    keyPoint7: String
    location: String
    minBandwidth: String
    ote: String
    quotaAttainmentByTeam: Int
    roleName: String
    vacancyId: ID!
    visibilityOfAttributes: JobsModeratorsVacancySubmissionVisibilityAttributes
    workType: String
}

type JobsModeratorsUser {
    autoName: String
    avatarUrl: String
    city: City
    companySeriesStages: [CompanySeriesStage!]
    companyStages: [CompanyStage!]
    departmentIds: [Int!]
    departments: [Department!]
    firstname: String
    fullEmail: String!
    id: Int!
    industries: [Industry!]
    initials: String
    jobsAccountOwner: Boolean!
    lastname: String
    linkedinSlug: String
    linkedinUrl: String
    phone: String
    position: String
    productTypeIds: [Int!]
    productTypes: [ProductType!]
    solidClients: [Client!]!
    warRoomCompanySeriesStageIds: [Int!]
    warRoomCompanyStageIds: [Int!]
    warRoomIndustryIds: [Int!]
    warRoomJobSearchStatus: String
    warRoomJobSearchStatusExpiredAt: ISO8601DateTime
    warRoomSalesRoleIds: [Int!]
    warRoomSalesRoles: [SalesRole!]
    warRoomYearsOfExperience: Int
}

type JobsModeratorsVacancy {
    cities: [City!]
    comments: String
    countries: [Country!]
    createdAt: ISO8601DateTime!
    creator: JobsModeratorsVacancyCreator
    daysSinceLastHiringReviewed: Int
    defaultSubmission: JobsModeratorsVacancySubmission
    description: String
    employer: JobsModeratorsEmployer
    employerHiringCategories: JobsModeratorsEmployerHiringGroups
    employmentType: JobsVacancyEmployment!
    fieldValues: [JobsModeratorsVacancyFieldValue!]!
    fiveDaysActivity: Int!
    fromGreenhouse: Boolean!
    gptPrompt: String
    headcount: Int
    hiringsBacklogLimit: Int
    hiringsHiredCount: Int!
    hiringsInterviewedCount: Int!
    hiringsIntroducedCount: Int!
    hiringsOfferedCount: Int!
    hiringsScheduledCount: Int!
    hiringsToExpireCount: Int!
    hiringsToReviewCount: Int!
    id: ID!
    isImportedFromGreenhouse: Boolean!
    lookbackPeriod: Int
    openToRemoteWork: Boolean
    pairScoreThreshold: Float
    position: JobsRole
    recruiters: [JobsRecruitersRecruiter!]
    remoteOnlyAtSelectedLocations: Boolean
    state: JobsVacancyState!
    submission: JobsModeratorsVacancySubmission
    submitPeriod: Int
    submitScoreThreshold: Float
    title: String!
}

"""
The connection type for JobsModeratorsVacancy.
"""
type JobsModeratorsVacancyConnection {
    """
    A list of edges.
    """
    edges: [JobsModeratorsVacancyEdge!]!

    """
    A list of nodes.
    """
    nodes: [JobsModeratorsVacancy!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

type JobsModeratorsVacancyCreator implements JobsModeratorsVacancyCreatorInterface {
    fullName: String
    id: ID!
}

interface JobsModeratorsVacancyCreatorInterface {
    fullName: String
    id: ID!
}

"""
An edge in a connection.
"""
type JobsModeratorsVacancyEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: JobsModeratorsVacancy
}

union JobsModeratorsVacancyFieldValue = JobsModeratorsFieldValuesBoolean | JobsModeratorsFieldValuesFloat | JobsModeratorsFieldValuesFloatRange | JobsModeratorsFieldValuesInteger | JobsModeratorsFieldValuesIntegerRange | JobsModeratorsFieldValuesMultiSelect | JobsModeratorsFieldValuesMultiSelectRecord | JobsModeratorsFieldValuesSingleSelect | JobsModeratorsFieldValuesSingleSelectRecord | JobsModeratorsFieldValuesString | JobsModeratorsFieldValuesStringArray

type JobsModeratorsVacancyMatch {
    matchingModelInterpretation: [String!]
    score: Float
    vacancy: JobsModeratorsVacancy!
}

"""
Attributes for sorting vacancies for a moderator
"""
input JobsModeratorsVacancySortAttributes {
    field: JobsModeratorsVacancySortField!
    order: SortOrder!
}

enum JobsModeratorsVacancySortField {
    employer
    employment_type
    five_days_activity
    state
    title
}

type JobsModeratorsVacancySubmission implements JobsVacancySubmissionInterface {
    avgDealSize: String
    avgSalesCycle: String
    baseSalary: String
    brandMaturity: JobsVacancySubmissionBrandMaturity
    companyName: String!
    compensation: String
    compensationDescription: String
    customerProfile: String
    id: ID
    industry: String!
    jobUrl: String
    keyPoint1: String
    keyPoint2: String
    keyPoint3: String
    keyPoint4: String
    keyPoint5: String
    keyPoint6: String
    keyPoint7: String
    location: String!
    minBandwidth: String
    ote: String
    quotaAttainmentByTeam: Int
    roleName: String!
    visibilityOfAttributes: JobsVacancySubmissionVisibilityOfAttributes!
    workType: String
}

input JobsModeratorsVacancySubmissionVisibilityAttributes {
    isAvgDealSizeVisible: Boolean
    isAvgSalesCycleVisible: Boolean
    isBaseSalaryVisible: Boolean
    isBrandMaturityVisible: Boolean
    isCompanyNameVisible: Boolean
    isCompensationDescriptionVisible: Boolean
    isCompensationVisible: Boolean
    isCustomerProfileVisible: Boolean
    isIndustryVisible: Boolean
    isJobUrlVisible: Boolean
    isKeyPoint1Visible: Boolean
    isKeyPoint2Visible: Boolean
    isKeyPoint3Visible: Boolean
    isKeyPoint4Visible: Boolean
    isKeyPoint5Visible: Boolean
    isKeyPoint6Visible: Boolean
    isKeyPoint7Visible: Boolean
    isLocationVisible: Boolean
    isMinBandwidthVisible: Boolean
    isOteVisible: Boolean
    isQuotaAttainmentByTeamVisible: Boolean
    isRoleNameVisible: Boolean
    isWorkTypeVisible: Boolean
}

type JobsRecruiter {
    email: String!
    firstname: String
    lastname: String
    schedulingLink: String
}

enum JobsRecruiterLead {
    BACK_OFFICE
    FLEX
    FULL_TIME
}

enum JobsRecruiterState {
    ACTIVATED
    DRAFT
}

"""
Autogenerated input type of JobsRecruitersAcceptCandidate
"""
input JobsRecruitersAcceptCandidateInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    hashid: ID!
}

"""
Autogenerated input type of JobsRecruitersActivateCurrentRecruiter
"""
input JobsRecruitersActivateCurrentRecruiterInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

"""
Autogenerated input type of JobsRecruitersActivateVacancy
"""
input JobsRecruitersActivateVacancyInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    vacancyId: ID!
}

type JobsRecruitersCandidate implements JobsCandidateInterface {
    acceptedByCandidateAt: ISO8601DateTime
    acceptedByEmployerAt: ISO8601DateTime
    annualQuota: String
    avatarUrl: String
    badges: [JobsHiringBadge!]
    baseSalary: String
    bullet1: String
    bullet2: String
    captions: String
    city: City
    clients: [JobsRecruitersClient!]
    csmAccountsNumber: String
    csmQuotaMetric: String
    csmQuotaType: String
    csmRenewalValue: String
    csmTotalBusinessValue: String
    csmUpsellValue: String
    currency: Currency
    dealSize: String
    departments: [Department!]
    firstname: String
    flexAppliedCriteria: [JobsFlexAppliedCriteria!]
    flexBandwidth: String
    flexBriefVideoUrl: String
    flexPreviousExperience: String
    flexRating: Float
    flexReasonForParticipation: String
    flexRoles: [JobsFlexRole!]
    flexUnderstandingOfSales: String
    hashid: String!
    headline1: String
    headline2: String
    headline3: String
    hoursToExpire: Int
    id: ID!
    idealJobDescription: String
    initials: String
    inquiredPosition: JobsInquiryPosition
    lastname: String
    leadSources: String
    linkedinUrl: String
    marketingHeadline: String
    ote: String
    position: String
    quotaAttainmentByTeamPerPeriod: String
    quotaAttainmentPerLastYear: String
    quotaAttainmentPerPeriod: Int
    salesCycleLength: String
    selectedOnVacancy: JobsRecruitersVacancy
    state: JobsRecruitersCandidateState!
    teamRanking: String
    updatedAt: ISO8601DateTime!
    userId: ID!
    viewed: Boolean!
    vpDepartmentSize: String
    vpManagedRoles: String
    vpQuotaType: String
    willingToRelocate: Boolean
    workHistories: [WorkHistory!]
}

"""
The connection type for JobsRecruitersCandidate.
"""
type JobsRecruitersCandidateConnection {
    """
    A list of edges.
    """
    edges: [JobsRecruitersCandidateEdge!]!

    """
    A list of nodes.
    """
    nodes: [JobsRecruitersCandidate!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type JobsRecruitersCandidateEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: JobsRecruitersCandidate
}

enum JobsRecruitersCandidateState {
    accepted_another_offer
    deactivated
    draft
    expired
    hired
    interviewed
    introduced
    matched
    offered
    paired
    queued
    rejected_by_candidate
    rejected_by_employer
    rejected_by_ops
    scheduled_assessment
    scheduled_interview
    submitted
}

type JobsRecruitersClient {
    company: Company!
    id: ID!
}

"""
Autogenerated input type of JobsRecruitersCompleteTooltip
"""
input JobsRecruitersCompleteTooltipInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    task: String!
}

"""
Autogenerated input type of JobsRecruitersCreateCustomCompany
"""
input JobsRecruitersCreateCustomCompanyInput {
    categories: [String!]

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    domain: String
    logoUrl: String
    name: String!
}

"""
Autogenerated input type of JobsRecruitersCreateEmployer
"""
input JobsRecruitersCreateEmployerInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID!
}

"""
Autogenerated input type of JobsRecruitersCreateStripeBillingUrl
"""
input JobsRecruitersCreateStripeBillingUrlInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    returnUrl: String
}

"""
Autogenerated input type of JobsRecruitersCreateStripeSessionUrl
"""
input JobsRecruitersCreateStripeSessionUrlInput {
    cancelUrl: String

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    productSlug: JobsRecruitersSubscriptionProductSlug!
    quantity: Int = 1
    successUrl: String!
}

"""
Autogenerated input type of JobsRecruitersCreateVacancy
"""
input JobsRecruitersCreateVacancyInput {
    booleanFields: [JobsRecruitersFieldsBooleanAttributes!]
    cityIds: [ID!]

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    countries: [String!]
    countryStates: [String!]
    employmentType: JobsVacancyEmployment
    floatFields: [JobsRecruitersFieldsFloatAttributes!]
    floatRangeFields: [JobsRecruitersFieldsFloatRangeAttributes!]
    gptPrompt: String
    headcount: Int
    integerFields: [JobsRecruitersFieldsIntegerAttributes!]
    integerRangeFields: [JobsRecruitersFieldsIntegerRangeAttributes!]
    multiSelectFields: [JobsRecruitersFieldsMultiSelectAttributes!]
    multiSelectRecordFields: [JobsRecruitersFieldsMultiSelectRecordAttributes!]
    openToRemoteWork: Boolean
    position: JobsRole
    primaryRecruiterId: ID
    recruiterIds: [ID!]
    remoteOnlyAtSelectedLocations: Boolean
    singleSelectFields: [JobsRecruitersFieldsSingleSelectAttributes!]
    singleSelectRecordFields: [JobsRecruitersFieldsSingleSelectRecordAttributes!]
    stringArrayFields: [JobsRecruitersFieldsStringArrayAttributes!]
    stringFields: [JobsRecruitersFieldsStringAttributes!]
    title: String
}

"""
Autogenerated input type of JobsRecruitersDeleteEmployer
"""
input JobsRecruitersDeleteEmployerInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

"""
Autogenerated input type of JobsRecruitersDeleteRecruiter
"""
input JobsRecruitersDeleteRecruiterInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    recruiterId: ID!
}

"""
Autogenerated input type of JobsRecruitersDeleteVacancyField
"""
input JobsRecruitersDeleteVacancyFieldInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    fieldSlug: String!
    vacancyId: ID!
}

"""
Autogenerated input type of JobsRecruitersDeleteVacancy
"""
input JobsRecruitersDeleteVacancyInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    vacancyId: ID!
}

"""
Autogenerated input type of JobsRecruitersDestroyCandidate
"""
input JobsRecruitersDestroyCandidateInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    hashid: ID!
}

type JobsRecruitersDistribution {
    distributionBins: [JobsRecruitersDistributionBin!]!
    recommendation: IntRangeRightBoundOptional
    total: Float!
}

type JobsRecruitersDistributionBin {
    """
    Percentage of total value in the bin
    """
    percentage: Float!

    """
    Boundary values of the bin
    """
    range: IntRangeRightBoundOptional!
}

"""
Autogenerated input type of JobsRecruitersEditRecruiter
"""
input JobsRecruitersEditRecruiterInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    recruiter: JobsRecruitersRecruiterAttributes!
}

type JobsRecruitersEmployer {
    annualRevenue: JobsEmployersAnnualRevenue
    company: Company!
    country: Country
    fundingType: JobsEmployersFunding
    greenhouseError: String
    id: ID!
    isGreenhouseHarvestApiKeyPresent: Boolean!
    recruiters: [JobsRecruitersRecruiter!]!
    salesTeamSize: JobsEmployersSalesTeamSize
    talentAccessSubscription: JobsRecruitersEmployerSubscription
}

input JobsRecruitersEmployerAttributes {
    companyId: ID
    greenhouseHarvestApiKey: String
}

enum JobsRecruitersEmployerRejectionReason {
    no_startup_experience
    not_enough_saas_experience
    too_hoppy
    wrong_geo
    wrong_sales_cycle
    wrong_seniority
}

type JobsRecruitersEmployerSubscription {
    active: Boolean!
    expiresAt: ISO8601DateTime!
}

"""
Autogenerated input type of JobsRecruitersEnableVacancies
"""
input JobsRecruitersEnableVacanciesInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    vacancyIds: [ID!]!
}

union JobsRecruitersField = JobsRecruitersFieldsBoolean | JobsRecruitersFieldsFloat | JobsRecruitersFieldsFloatRange | JobsRecruitersFieldsInteger | JobsRecruitersFieldsIntegerRange | JobsRecruitersFieldsMultiSelect | JobsRecruitersFieldsMultiSelectRecord | JobsRecruitersFieldsSingleSelect | JobsRecruitersFieldsSingleSelectRecord | JobsRecruitersFieldsString | JobsRecruitersFieldsStringArray

interface JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    shouldClause: Boolean!
}

type JobsRecruitersFieldValuesBoolean implements JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    shouldClause: Boolean!
    value: Boolean
}

type JobsRecruitersFieldValuesFloat implements JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    shouldClause: Boolean!
    value: Float
}

type JobsRecruitersFieldValuesFloatRange implements JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    range: FloatRangeRightBoundOptional
    shouldClause: Boolean!
}

type JobsRecruitersFieldValuesInteger implements JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    shouldClause: Boolean!
    value: Int
}

type JobsRecruitersFieldValuesIntegerRange implements JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    range: IntRangeRightBoundOptional
    shouldClause: Boolean!
}

type JobsRecruitersFieldValuesMultiSelect implements JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    selectedOptions: [JobsFieldsSelectOption!]!
    shouldClause: Boolean!
    values: [String!]!
}

type JobsRecruitersFieldValuesMultiSelectRecord implements JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    records: [JobsRecruitersFieldValuesSelectRecordType!]!
    shouldClause: Boolean!
}

union JobsRecruitersFieldValuesSelectRecordType = City | Company | Department | Industry

type JobsRecruitersFieldValuesSingleSelect implements JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    selectedOption: JobsFieldsSelectOption!
    shouldClause: Boolean!
    value: String
}

type JobsRecruitersFieldValuesSingleSelectRecord implements JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    record: JobsRecruitersFieldValuesSelectRecordType!
    shouldClause: Boolean!
}

type JobsRecruitersFieldValuesString implements JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    shouldClause: Boolean!
    value: String
}

type JobsRecruitersFieldValuesStringArray implements JobsRecruitersFieldValueInterface {
    field: JobsRecruitersField!
    id: ID!
    negation: Boolean!
    position: Int!
    priority: Int
    shouldClause: Boolean!
    values: [String!]
}

type JobsRecruitersFieldsBoolean implements JobsFieldsBooleanInterface & JobsFieldsInterface {
    availableForRoles: [JobsRole!]!
    category: JobsRecruitersFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsRecruitersFieldsBooleanAttributes {
    fieldId: ID
    fieldSlug: String
    id: ID
    negation: Boolean
    priority: Int = 3
    shouldClause: Boolean
    value: Boolean
}

type JobsRecruitersFieldsCategory implements JobsFieldsCategoryInterface {
    description: String
    fields(
        """
        filter by overlapping for `accessLevels`
        """
        accessLevels: [JobsFieldsAccessLevel!]

        """
        filter by overlapping for `availableForRoles`
        """
        availableForRoles: [JobsRole!]

        """
        filter by overlapping for `popularForRoles`
        """
        popularForRoles: [JobsRole!]

        """
        filter by overlapping for `scopes`
        """
        scopes: [JobsFieldsScope!]
    ): [JobsRecruitersField!]!
    id: ID!
    position: Int!
    title: String!
}

type JobsRecruitersFieldsFloat implements JobsFieldsFloatInterface & JobsFieldsInterface {
    availableForRoles: [JobsRole!]!
    category: JobsRecruitersFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String!
    popularForRoles: [JobsRole!]!
    position: Int!
    range: FloatRangeRightBoundOptional
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsRecruitersFieldsFloatAttributes {
    fieldId: ID
    fieldSlug: String
    id: ID
    negation: Boolean
    priority: Int = 3
    shouldClause: Boolean
    value: Float
}

type JobsRecruitersFieldsFloatRange implements JobsFieldsFloatRangeInterface & JobsFieldsInterface {
    availableForRoles: [JobsRole!]!
    category: JobsRecruitersFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: JobsFieldsRangePlaceholder!
    popularForRoles: [JobsRole!]!
    position: Int!
    range: FloatRangeRightBoundOptional
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsRecruitersFieldsFloatRangeAttributes {
    fieldId: ID
    fieldSlug: String
    id: ID
    negation: Boolean
    priority: Int = 3
    shouldClause: Boolean
    value: FloatRangeRightBoundOptionalInput
}

type JobsRecruitersFieldsInteger implements JobsFieldsIntegerInterface & JobsFieldsInterface {
    availableForRoles: [JobsRole!]!
    category: JobsRecruitersFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    range: IntRangeRightBoundOptional
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsRecruitersFieldsIntegerAttributes {
    fieldId: ID
    fieldSlug: String
    id: ID
    negation: Boolean
    priority: Int = 3
    shouldClause: Boolean
    value: Int
}

type JobsRecruitersFieldsIntegerRange implements JobsFieldsIntegerRangeInterface & JobsFieldsInterface {
    availableForRoles: [JobsRole!]!
    category: JobsRecruitersFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: JobsFieldsRangePlaceholder!
    popularForRoles: [JobsRole!]!
    position: Int!
    range: IntRangeRightBoundOptional
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsRecruitersFieldsIntegerRangeAttributes {
    fieldId: ID
    fieldSlug: String
    id: ID
    negation: Boolean
    priority: Int = 3
    shouldClause: Boolean
    value: IntRangeRightBoundOptionalInput
}

type JobsRecruitersFieldsMultiSelect implements JobsFieldsInterface & JobsFieldsSelectInterface {
    availableForRoles: [JobsRole!]!
    category: JobsRecruitersFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    options: [JobsFieldsSelectOption!]!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsRecruitersFieldsMultiSelectAttributes {
    fieldId: ID
    fieldSlug: String
    id: ID
    negation: Boolean
    priority: Int = 3
    shouldClause: Boolean
    values: [String!]
}

type JobsRecruitersFieldsMultiSelectRecord implements JobsFieldsInterface & JobsFieldsSingleSelectRecordInterface {
    availableForRoles: [JobsRole!]!
    category: JobsRecruitersFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    recordType: JobsFieldsRecordType!
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsRecruitersFieldsMultiSelectRecordAttributes {
    fieldId: ID
    fieldSlug: String
    id: ID
    negation: Boolean
    priority: Int = 3
    recordIds: [ID!]
    shouldClause: Boolean
}

type JobsRecruitersFieldsSingleSelect implements JobsFieldsInterface & JobsFieldsSelectInterface {
    availableForRoles: [JobsRole!]!
    category: JobsRecruitersFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    options: [JobsFieldsSelectOption!]!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsRecruitersFieldsSingleSelectAttributes {
    fieldId: ID
    fieldSlug: String
    id: ID
    negation: Boolean
    priority: Int = 3
    shouldClause: Boolean
    value: String
}

type JobsRecruitersFieldsSingleSelectRecord implements JobsFieldsInterface & JobsFieldsSingleSelectRecordInterface {
    availableForRoles: [JobsRole!]!
    category: JobsRecruitersFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    recordType: JobsFieldsRecordType!
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsRecruitersFieldsSingleSelectRecordAttributes {
    fieldId: ID
    fieldSlug: String
    id: ID
    negation: Boolean
    priority: Int = 3
    recordId: ID
    shouldClause: Boolean
}

type JobsRecruitersFieldsString implements JobsFieldsInterface & JobsFieldsStringInterface {
    availableForRoles: [JobsRole!]!
    category: JobsRecruitersFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

type JobsRecruitersFieldsStringArray implements JobsFieldsInterface & JobsFieldsStringArrayInterface {
    availableForRoles: [JobsRole!]!
    category: JobsRecruitersFieldsCategory!
    configuration: JobsFieldsConfiguration!
    id: ID!
    label: String!
    placeholder: String
    popularForRoles: [JobsRole!]!
    position: Int!
    requiredForRoles: [JobsRole!]!
    slug: String!
    tooltip: JobsFieldsTooltip!
}

input JobsRecruitersFieldsStringArrayAttributes {
    fieldId: ID
    fieldSlug: String
    id: ID
    negation: Boolean
    priority: Int = 3
    shouldClause: Boolean
    values: [String!]
}

input JobsRecruitersFieldsStringAttributes {
    fieldId: ID
    fieldSlug: String
    id: ID
    negation: Boolean
    priority: Int = 3
    shouldClause: Boolean
    value: String
}

"""
Autogenerated input type of JobsRecruitersImportGreenhouseVacancies
"""
input JobsRecruitersImportGreenhouseVacanciesInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

type JobsRecruitersInquiry {
    autoName: String
    avatarUrl: String
    baseSalary: Int
    currentWorkHistory: WorkHistory
    firstname: String
    id: ID!
    linkedinUrl: String
    ote: Int
    positionMain: JobsInquiryPosition
    positionOther: String
    quotaAttainmentPerPeriod: Int
}

"""
Autogenerated input type of JobsRecruitersMarkCandidateAsViewed
"""
input JobsRecruitersMarkCandidateAsViewedInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    hashid: ID!
}

"""
Autogenerated input type of JobsRecruitersMatchVacancy
"""
input JobsRecruitersMatchVacancyInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

enum JobsRecruitersPeopleForHiring {
    MORE_THAN_50
    PEOPLE_10_25
    PEOPLE_1_5
    PEOPLE_25_50
    PEOPLE_5_10
}

type JobsRecruitersRecruiter {
    city: City
    company: Company
    email: String!
    employer: JobsRecruitersEmployer
    firstname: String
    id: ID!
    isImpersonateMode: Boolean!
    jobTitle: String
    joinedAt: ISO8601DateTime
    lastSelectedVacancy: JobsRecruitersVacancy
    lastname: String
    leadType: JobsRecruiterLead!
    onboardingStates: [String!]!
    peopleForHiring: JobsRecruitersPeopleForHiring
    phone: String
    primary: Boolean
    questionnaireFractionalSellersType: String
    questionnaireFreelanceSalesExpertsPurposes: [String!]
    questionnairePurpose: String
    questionnaireRole: String
    role: JobsRecruitersRecruiterRole!
    rolesForHiring: [JobsRecruitersRolesForHiring!]
    schedulingLink: String
    signInCount: Int
    state: JobsRecruiterState!
    tooltips: [Tooltip!]!
}

"""
Attributes for creating, updating, or deleting jobs employer's recruiters
"""
input JobsRecruitersRecruiterAttributes {
    email: String!
    firstname: String!
    id: ID
    lastname: String!
    phone: String
    schedulingLink: String
    slackId: String
}

enum JobsRecruitersRecruiterRole {
    ACCOUNT_OWNER
    REGULAR
}

"""
Autogenerated input type of JobsRecruitersRejectCandidate
"""
input JobsRecruitersRejectCandidateInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    hashid: ID!
    reasonOther: String
    reasons: [JobsRecruitersEmployerRejectionReason!]!
}

enum JobsRecruitersRolesForHiring {
    AE
    CSM_AM
    EXECUTIVE
    OTHER
    SALES_ENGINEER
    SDR
}

"""
Autogenerated input type of JobsRecruitersSendRecruiterAuthToken
"""
input JobsRecruitersSendRecruiterAuthTokenInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    email: String!
}

enum JobsRecruitersSubscriptionProductSlug {
    TALENT_ACCESS
}

"""
Autogenerated input type of JobsRecruitersUpdateCurrentEmployer
"""
input JobsRecruitersUpdateCurrentEmployerInput {
    annualRevenue: JobsEmployersAnnualRevenue

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID
    fundingType: JobsEmployersFunding
    greenhouseHarvestApiKey: String
    salesTeamSize: JobsEmployersSalesTeamSize
}

"""
Autogenerated input type of JobsRecruitersUpdateCurrentRecruiter
"""
input JobsRecruitersUpdateCurrentRecruiterInput {
    cityId: ID

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    email: String
    employer: JobsRecruitersEmployerAttributes = {} @deprecated(reason: "Use JobsRecruitersUpdateCurrentEmployer instead.")
    firstname: String
    jobTitle: String
    lastSelectedVacancyId: ID
    lastname: String
    leadType: JobsRecruiterLead
    onboardingStates: [String!]
    peopleForHiring: JobsRecruitersPeopleForHiring
    phone: String
    questionnaireFractionalSellersType: String
    questionnaireFreelanceSalesExpertsPurposes: [String!]
    questionnairePurpose: String
    questionnaireRole: String
    rolesForHiring: [JobsRecruitersRolesForHiring!]
}

"""
Autogenerated input type of JobsRecruitersUpdateCustomCompany
"""
input JobsRecruitersUpdateCustomCompanyInput {
    categories: [String!]

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of JobsRecruitersUpdateVacancyField
"""
input JobsRecruitersUpdateVacancyFieldInput {
    booleanField: JobsRecruitersFieldsBooleanAttributes

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    floatField: JobsRecruitersFieldsFloatAttributes
    floatRangeField: JobsRecruitersFieldsFloatRangeAttributes
    integerField: JobsRecruitersFieldsIntegerAttributes
    integerRangeField: JobsRecruitersFieldsIntegerRangeAttributes
    multiSelectField: JobsRecruitersFieldsMultiSelectAttributes
    multiSelectRecordField: JobsRecruitersFieldsMultiSelectRecordAttributes
    singleSelectField: JobsRecruitersFieldsSingleSelectAttributes
    singleSelectRecordField: JobsRecruitersFieldsSingleSelectRecordAttributes
    stringArrayField: JobsRecruitersFieldsStringArrayAttributes
    stringField: JobsRecruitersFieldsStringAttributes
    vacancyId: ID!
}

"""
Autogenerated input type of JobsRecruitersUpdateVacancy
"""
input JobsRecruitersUpdateVacancyInput {
    booleanFields: [JobsRecruitersFieldsBooleanAttributes!]
    cityIds: [ID!]

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    countries: [String!]
    countryStates: [String!]
    employmentType: JobsVacancyEmployment
    floatFields: [JobsRecruitersFieldsFloatAttributes!]
    floatRangeFields: [JobsRecruitersFieldsFloatRangeAttributes!]
    gptPrompt: String
    headcount: Int
    id: ID!
    integerFields: [JobsRecruitersFieldsIntegerAttributes!]
    integerRangeFields: [JobsRecruitersFieldsIntegerRangeAttributes!]
    multiSelectFields: [JobsRecruitersFieldsMultiSelectAttributes!]
    multiSelectRecordFields: [JobsRecruitersFieldsMultiSelectRecordAttributes!]
    openToRemoteWork: Boolean
    position: JobsRole
    primaryRecruiterId: ID
    recruiterIds: [ID!]
    remoteOnlyAtSelectedLocations: Boolean
    singleSelectFields: [JobsRecruitersFieldsSingleSelectAttributes!]
    singleSelectRecordFields: [JobsRecruitersFieldsSingleSelectRecordAttributes!]
    stringArrayFields: [JobsRecruitersFieldsStringArrayAttributes!]
    stringFields: [JobsRecruitersFieldsStringAttributes!]
    title: String
}

type JobsRecruitersVacancy {
    avatarNumber: Int!
    candidates(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int
        isAcceptedByEmployer: Boolean

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        state: [JobsRecruitersCandidateState!]
    ): JobsRecruitersCandidateConnection!
    cities: [City!]
    countries: [Country!]
    countryStates: [String!]
    defaultSubmission: JobsRecruitersVacancySubmission!
    description: String
    employmentType: JobsVacancyEmployment!
    fieldValueBoolean(slug: String!): JobsRecruitersFieldValuesBoolean
    fieldValueFloat(slug: String!): JobsRecruitersFieldValuesFloat
    fieldValueFloatRange(slug: String!): JobsRecruitersFieldValuesFloatRange
    fieldValueInteger(slug: String!): JobsRecruitersFieldValuesInteger
    fieldValueIntegerRange(slug: String!): JobsRecruitersFieldValuesIntegerRange
    fieldValueMultiSelect(slug: String!): JobsRecruitersFieldValuesMultiSelect
    fieldValueMultiSelectRecord(slug: String!): JobsRecruitersFieldValuesMultiSelectRecord
    fieldValueSingleSelect(slug: String!): JobsRecruitersFieldValuesSingleSelect
    fieldValueSingleSelectRecord(slug: String!): JobsRecruitersFieldValuesSingleSelectRecord
    fieldValueString(slug: String!): JobsRecruitersFieldValuesString
    fieldValueStringArray(slug: String!): JobsRecruitersFieldValuesStringArray
    fieldValues: [JobsRecruitersVacancyFieldValue!]!
    gptPrompt: String
    hasExpiredCandidates: Boolean!
    headcount: Int
    id: ID!
    isBasedOnVacancy: Boolean!
    isImportedFromGreenhouse: Boolean!
    isSalesJob: Boolean
    openToRemoteWork: Boolean
    position: JobsRole
    recruiters: [JobsRecruitersRecruiter!]!
    remoteOnlyAtSelectedLocations: Boolean
    state: JobsVacancyState!
    stateUpdatedAt: ISO8601DateTime!
    title: String!
}

union JobsRecruitersVacancyFieldValue = JobsRecruitersFieldValuesBoolean | JobsRecruitersFieldValuesFloat | JobsRecruitersFieldValuesFloatRange | JobsRecruitersFieldValuesInteger | JobsRecruitersFieldValuesIntegerRange | JobsRecruitersFieldValuesMultiSelect | JobsRecruitersFieldValuesMultiSelectRecord | JobsRecruitersFieldValuesSingleSelect | JobsRecruitersFieldValuesSingleSelectRecord | JobsRecruitersFieldValuesString | JobsRecruitersFieldValuesStringArray

type JobsRecruitersVacancyPromptTemplate {
    body: String!
    title: String!
}

type JobsRecruitersVacancySubmission implements JobsVacancySubmissionInterface {
    avgDealSize: String
    avgSalesCycle: String
    baseSalary: String
    brandMaturity: JobsVacancySubmissionBrandMaturity
    companyName: String!
    compensation: String
    compensationDescription: String
    customerProfile: String
    id: ID
    industry: String!
    jobUrl: String
    keyPoint1: String
    keyPoint2: String
    keyPoint3: String
    keyPoint4: String
    keyPoint5: String
    keyPoint6: String
    keyPoint7: String
    location: String!
    minBandwidth: String
    ote: String
    quotaAttainmentByTeam: Int
    roleName: String!
    visibilityOfAttributes: JobsVacancySubmissionVisibilityOfAttributes!
    workType: String
}

enum JobsRole {
    ACCOUNT_EXECUTIVE
    CSM_AM
    OTHER
    SDR
    VP
}

type JobsVacancy {
    cities: [City!]
    company: Company!
    countries: [Country!]
    description: String
    employer: JobsEmployer!
    employmentType: JobsVacancyEmployment!
    id: ID!
    openToRemoteWork: Boolean
    oteRange: [Int!]
    primaryRecruiter: JobsRecruiter
    submission: JobsVacancySubmission
    title: String!
    uid: String!
}

enum JobsVacancyEmployment {
    CONTRACT
    FULL_TIME
    SIDE_HUSTLE
}

enum JobsVacancyState {
    ACTIVATED
    DEACTIVATED
    DELETED
    DELETED_FROM_ATS
    DISABLED
    DRAFT
    PAUSED
}

type JobsVacancySubmission implements JobsVacancySubmissionInterface {
    avgDealSize: String
    avgSalesCycle: String
    baseSalary: String
    brandMaturity: JobsVacancySubmissionBrandMaturity
    companyName: String!
    compensation: String
    compensationDescription: String
    customerProfile: String
    industry: String!
    jobUrl: String
    keyPoint1: String
    keyPoint2: String
    keyPoint3: String
    keyPoint4: String
    keyPoint5: String
    keyPoint6: String
    keyPoint7: String
    location: String!
    minBandwidth: String
    ote: String
    quotaAttainmentByTeam: Int
    roleName: String!
    workType: String
}

enum JobsVacancySubmissionBrandMaturity {
    BRAND_NEW
    ESTABLISHED
    NEWER
}

interface JobsVacancySubmissionInterface {
    avgDealSize: String
    avgSalesCycle: String
    baseSalary: String
    brandMaturity: JobsVacancySubmissionBrandMaturity
    companyName: String!
    compensation: String
    compensationDescription: String
    customerProfile: String
    industry: String!
    jobUrl: String
    keyPoint1: String
    keyPoint2: String
    keyPoint3: String
    keyPoint4: String
    keyPoint5: String
    keyPoint6: String
    keyPoint7: String
    location: String!
    minBandwidth: String
    ote: String
    quotaAttainmentByTeam: Int
    roleName: String!
    workType: String
}

type JobsVacancySubmissionVisibilityOfAttributes {
    isAvgDealSizeVisible: Boolean!
    isAvgSalesCycleVisible: Boolean!
    isBaseSalaryVisible: Boolean!
    isBrandMaturityVisible: Boolean!
    isCompanyNameVisible: Boolean!
    isCompensationDescriptionVisible: Boolean!
    isCompensationVisible: Boolean!
    isCustomerProfileVisible: Boolean!
    isIndustryVisible: Boolean!
    isJobUrlVisible: Boolean!
    isKeyPoint1Visible: Boolean!
    isKeyPoint2Visible: Boolean!
    isKeyPoint3Visible: Boolean!
    isKeyPoint4Visible: Boolean!
    isKeyPoint5Visible: Boolean!
    isKeyPoint6Visible: Boolean!
    isKeyPoint7Visible: Boolean!
    isLocationVisible: Boolean!
    isMinBandwidthVisible: Boolean!
    isOteVisible: Boolean!
    isQuotaAttainmentByTeamVisible: Boolean!
    isRoleNameVisible: Boolean!
    isWorkTypeVisible: Boolean!
}

type Link {
    createdAt: ISO8601DateTime!
    highlightedText: String
    id: Int!
    link: String!
    linkDescription: String
    linkImageContentType: String
    linkImageFileName: String
    linkImageFileSize: Int
    linkImageUpdatedAt: ISO8601DateTime
    linkOriginalImageUrl: String
    linkTitle: String
    previewImageUrl: String
    rawText: String
    text: String
    textImageUrl: String
    title: String!
    updatedAt: ISO8601DateTime!
}

type LinkedinPost {
    createdAt: ISO8601DateTime!
    highlightedText: String
    id: Int!
    linkedinAvatarUrl: String
    linkedinName: String!
    linkedinPostUrl: String!
    linkedinText: String!
    previewImageUrl: String
    rawText: String
    text: String
    textImageUrl: String
    title: String!
    updatedAt: ISO8601DateTime!
}

"""
Autogenerated return type of LinkedinProfileImported
"""
type LinkedinProfileImportedPayload {
    isSuccessful: Boolean!
    portfolioCurrentUser: PortfolioCurrentUser!
}

union Location = City | CountryState

enum LocationType {
    CITY
    COUNTRY_STATE
}

"""
Autogenerated input type of MarkCommentsViewed
"""
input MarkCommentsViewedInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    commentIds: [ID!] @deprecated(reason: "We will mark all comments as viewed automatically")
    postSlug: String!
}

"""
Autogenerated input type of MarkPostsAsRead
"""
input MarkPostsAsReadInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

"""
Autogenerated input type of MatchJobsInquiryAfterOnboarding
"""
input MatchJobsInquiryAfterOnboardingInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

type Message {
    body: String!
    createdAt: ISO8601DateTime!
    id: ID!
    media: File
    readAt: ISO8601DateTime
    sender: User!
    thread: Thread!
}

"""
The connection type for Message.
"""
type MessageConnection {
    """
    A list of edges.
    """
    edges: [MessageEdge!]!

    """
    A list of nodes.
    """
    nodes: [Message!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type MessageEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Message
}

type Mutation {
    acceptConnectionRequest(
        """
        Parameters for AcceptRequest
        """
        input: AcceptRequestInput!
    ): Request
    activateJobsInquiry(
        """
        Parameters for ActivateJobsInquiry
        """
        input: ActivateJobsInquiryInput!
    ): JobsInquiry
    applyForWarRoom(
        """
        Parameters for ApplyForWarRoom
        """
        input: ApplyForWarRoomInput!
    ): User
    approveTestimonialForPublicPortfolioCurrentUser(
        """
        Parameters for ApproveTestimonialForPublicPortfolioCurrentUser
        """
        input: ApproveTestimonialForPublicPortfolioCurrentUserInput!
    ): Testimonial
    archiveCandidateHiring(
        """
        Parameters for ArchiveCandidateHiring
        """
        input: ArchiveCandidateHiringInput!
    ): Boolean
    archiveTestimonialForPublicPortfolioCurrentUser(
        """
        Parameters for ArchiveTestimonialForPublicPortfolioCurrentUser
        """
        input: ArchiveTestimonialForPublicPortfolioCurrentUserInput!
    ): Testimonial
    attachCompanySeriesStage(
        """
        Parameters for AttachCompanySeriesStage
        """
        input: AttachCompanySeriesStageInput!
    ): CompanySeriesStage
    attachCompanyStage(
        """
        Parameters for AttachCompanyStage
        """
        input: AttachCompanyStageInput!
    ): CompanyStage
    attachDepartment(
        """
        Parameters for AttachDepartment
        """
        input: AttachDepartmentInput!
    ): Department
    attachProductType(
        """
        Parameters for AttachProduct
        """
        input: AttachProductInput!
    ): ProductType
    attachSalesRole(
        """
        Parameters for AttachSalesRole
        """
        input: AttachSalesRoleInput!
    ): SalesRole
    cancelConnectionRequest(
        """
        Parameters for CancelRequest
        """
        input: CancelRequestInput!
    ): Boolean
    completeTooltip(
        """
        Parameters for CompleteTooltip
        """
        input: CompleteTooltipInput!
    ): Boolean
    confirmTermsOfServiceByPotentialEmployer(
        """
        Parameters for ConfirmTermsOfServiceByPotentialEmployer
        """
        input: ConfirmTermsOfServiceByPotentialEmployerInput!
    ): PotentialEmployer
    createAwardForPublicPortfolioCurrentUser(
        """
        Parameters for CreateAwardForPublicPortfolioCurrentUser
        """
        input: CreateAwardForPublicPortfolioCurrentUserInput!
    ): Award
    createClientForPublicPortfolioCurrentUser(
        """
        Parameters for CreateClientForPublicPortfolioCurrentUser
        """
        input: CreateClientForPublicPortfolioCurrentUserInput!
    ): Client
    createComment(
        """
        Parameters for CreateComment
        """
        input: CreateCommentInput!
    ): Comment
    createCompanyPagesInterview(
        """
        Parameters for CompanyPagesCreateInterview
        """
        input: CompanyPagesCreateInterviewInput!
    ): CompanyPagesInterview
    createCompanyPagesReview(
        """
        Parameters for CompanyPagesCreateReview
        """
        input: CompanyPagesCreateReviewInput!
    ): CompanyPagesReview
    createCompanyPagesSalary(
        """
        Parameters for CompanyPagesCreateSalary
        """
        input: CompanyPagesCreateSalaryInput!
    ): CompanyPagesSalary
    createConnectionRequest(
        """
        Parameters for CreateRequest
        """
        input: CreateRequestInput!
    ): Request
    createConnections(
        """
        Parameters for CreateConnections
        """
        input: CreateConnectionsInput!
    ): Boolean
    createCustomCompany(
        """
        Parameters for CreateCustomCompany
        """
        input: CreateCustomCompanyInput!
    ): Company
    createCustomDepartment(
        """
        Parameters for CreateCustomDepartment
        """
        input: CreateCustomDepartmentInput!
    ): Department
    createCustomProductType(
        """
        Parameters for CreateCustomProduct
        """
        input: CreateCustomProductInput!
    ): ProductType
    createCustomSalesRole(
        """
        Parameters for CreateCustomSalesRole
        """
        input: CreateCustomSalesRoleInput!
    ): SalesRole
    createCustomUniversity(
        """
        Parameters for CreateCustomUniversity
        """
        input: CreateCustomUniversityInput!
    ): University
    createDeals(
        """
        Parameters for CreateDeals
        """
        input: CreateDealsInput!
    ): [PortfolioDeal!]
    createDealsSource(
        """
        Parameters for CreateDealsSource
        """
        input: CreateDealsSourceInput!
    ): PortfolioDealsSource
    createEducationHistoryForPublicPortfolioCurrentUser(
        """
        Parameters for CreateEducationHistoryForPublicPortfolioCurrentUser
        """
        input: CreateEducationHistoryForPublicPortfolioCurrentUserInput!
    ): EducationHistory
    createJobsModeratorsEmployer(
        """
        Parameters for JobsModeratorsCreateEmployer
        """
        input: JobsModeratorsCreateEmployerInput!
    ): JobsModeratorsEmployer
    createJobsModeratorsHiring(
        """
        Parameters for JobsModeratorsCreateHiring
        """
        input: JobsModeratorsCreateHiringInput!
    ): JobsModeratorsHiring
    createJobsModeratorsHirings(
        """
        Parameters for JobsModeratorsCreateHirings
        """
        input: JobsModeratorsCreateHiringsInput!
    ): JobsModeratorsInquiry
    createJobsModeratorsInquiryNote(
        """
        Parameters for JobsModeratorsCreateInquiryNote
        """
        input: JobsModeratorsCreateInquiryNoteInput!
    ): JobsModeratorsInquiryNote
    createPollVote(
        """
        Parameters for CreatePollVote
        """
        input: CreatePollVoteInput!
    ): PollVote
    createPost(
        """
        Parameters for CreatePost
        """
        input: CreatePostInput!
    ): Post
    createPotentialEmployer(
        """
        Parameters for CreatePotentialEmployer
        """
        input: CreatePotentialEmployerInput!
    ): PotentialEmployer
    createRating(
        """
        Parameters for CreateRating
        """
        input: CreateRatingInput!
    ): Rating
    createTopic(
        """
        Parameters for CreateTopic
        """
        input: CreateTopicInput!
    ): Topic
    createWorkHistoryForPublicPortfolioCurrentUser(
        """
        Parameters for CreateWorkHistoryForPublicPortfolioCurrentUser
        """
        input: CreateWorkHistoryForPublicPortfolioCurrentUserInput!
    ): WorkHistory
    deactivateCurrentUser(
        """
        Parameters for DeactivateCurrentUser
        """
        input: DeactivateCurrentUserInput!
    ): CurrentUser
    destroyAwardForPublicPortfolioCurrentUser(
        """
        Parameters for DestroyAwardForPublicPortfolioCurrentUser
        """
        input: DestroyAwardForPublicPortfolioCurrentUserInput!
    ): Award
    destroyClientForPublicPortfolioCurrentUser(
        """
        Parameters for DestroyClientForPublicPortfolioCurrentUser
        """
        input: DestroyClientForPublicPortfolioCurrentUserInput!
    ): Client
    destroyComment(
        """
        Parameters for DestroyComment
        """
        input: DestroyCommentInput!
    ): Comment
    destroyCompanyPagesInterview(
        """
        Parameters for CompanyPagesDestroyInterview
        """
        input: CompanyPagesDestroyInterviewInput!
    ): CompanyPagesInterview
    destroyCompanyPagesReview(
        """
        Parameters for CompanyPagesDestroyReview
        """
        input: CompanyPagesDestroyReviewInput!
    ): CompanyPagesReview
    destroyCompanyPagesSalary(
        """
        Parameters for CompanyPagesDestroySalary
        """
        input: CompanyPagesDestroySalaryInput!
    ): CompanyPagesSalary
    destroyDeal(
        """
        Parameters for DestroyDeal
        """
        input: DestroyDealInput!
    ): PortfolioDeal
    destroyEducationHistoryForPublicPortfolioCurrentUser(
        """
        Parameters for DestroyEducationHistoryForPublicPortfolioCurrentUser
        """
        input: DestroyEducationHistoryForPublicPortfolioCurrentUserInput!
    ): EducationHistory
    destroyJobsModeratorsInquiryNote(
        """
        Parameters for JobsModeratorsDestroyInquiryNote
        """
        input: JobsModeratorsDestroyInquiryNoteInput!
    ): JobsModeratorsInquiryNote
    destroyPost(
        """
        Parameters for DestroyPost
        """
        input: DestroyPostInput!
    ): Post
    destroyRating(
        """
        Parameters for DestroyRating
        """
        input: DestroyRatingInput!
    ): Rating
    destroyTestimonialForPublicPortfolioCurrentUser(
        """
        Parameters for DestroyTestimonialForPublicPortfolioCurrentUser
        """
        input: DestroyTestimonialForPublicPortfolioCurrentUserInput!
    ): Testimonial
    destroyWorkHistoryForPublicPortfolioCurrentUser(
        """
        Parameters for DestroyWorkHistoryForPublicPortfolioCurrentUser
        """
        input: DestroyWorkHistoryForPublicPortfolioCurrentUserInput!
    ): WorkHistory
    detachCompanySeriesStage(
        """
        Parameters for DetachCompanySeriesStage
        """
        input: DetachCompanySeriesStageInput!
    ): CompanySeriesStage
    detachCompanyStage(
        """
        Parameters for DetachCompanyStage
        """
        input: DetachCompanyStageInput!
    ): CompanyStage
    detachDepartment(
        """
        Parameters for DetachDepartment
        """
        input: DetachDepartmentInput!
    ): Department
    detachProductType(
        """
        Parameters for DetachProduct
        """
        input: DetachProductInput!
    ): ProductType
    detachSalesRole(
        """
        Parameters for DetachSalesRole
        """
        input: DetachSalesRoleInput!
    ): SalesRole
    directMessagesBlockUser(
        """
        Parameters for BlockUser
        """
        input: BlockUserInput!
    ): User
    directMessagesReadThreadMessages(
        """
        Parameters for ReadThreadMessages
        """
        input: ReadThreadMessagesInput!
    ): Boolean
    directMessagesSendMessage(
        """
        Parameters for SendMessage
        """
        input: SendMessageInput!
    ): Message
    directMessagesUnblockUser(
        """
        Parameters for UnblockUser
        """
        input: UnblockUserInput!
    ): User
    endorseTestimonialForPublicPortfolioUser(
        """
        Parameters for EndorseTestimonialForPublicPortfolioUser
        """
        input: EndorseTestimonialForPublicPortfolioUserInput!
    ): Testimonial
    expressDesireToImportConnectionsForPublicPortfolioUser(
        """
        Parameters for ExpressDesireToImportConnectionsForPublicPortfolioUser
        """
        input: ExpressDesireToImportConnectionsForPublicPortfolioUserInput!
    ): Boolean
    fillJobsInquiry(
        """
        Parameters for FillInquiry
        """
        input: FillInquiryInput!
    ): JobsInquiry
    finishOnboarding(
        """
        Parameters for FinishOnboarding
        """
        input: FinishOnboardingInput!
    ): CurrentUser
    fireJobsHiringEvent(
        """
        Parameters for FireHiringEvent
        """
        input: FireHiringEventInput!
    ): JobsHiring
    fireJobsModeratorsHiringEvent(
        """
        Parameters for JobsModeratorsFireHiringEvent
        """
        input: JobsModeratorsFireHiringEventInput!
    ): JobsModeratorsHiring
    fireJobsModeratorsInquiryEvent(
        """
        Parameters for JobsModeratorsFireInquiryEvent
        """
        input: JobsModeratorsFireInquiryEventInput!
    ): JobsModeratorsInquiry
    flagIssue(
        """
        Parameters for FlagIssue
        """
        input: FlagIssueInput!
    ): Int
    hiringResendIntroduceEmail(
        """
        Parameters for HiringResendIntroduceEmail
        """
        input: HiringResendIntroduceEmailInput!
    ): JobsHiring
    jobsModeratorsActivateVacancy(
        """
        Parameters for JobsModeratorsActivateVacancy
        """
        input: JobsModeratorsActivateVacancyInput!
    ): JobsModeratorsVacancy
    jobsModeratorsCreateVacancy(
        """
        Parameters for JobsModeratorsCreateVacancy
        """
        input: JobsModeratorsCreateVacancyInput!
    ): JobsModeratorsVacancy
    jobsModeratorsCreateVacancySubmission(
        """
        Parameters for JobsModeratorsCreateVacancySubmission
        """
        input: JobsModeratorsCreateVacancySubmissionInput!
    ): JobsModeratorsVacancySubmission
    jobsModeratorsDeactivateVacancy(
        """
        Parameters for JobsModeratorsDeactivateVacancy
        """
        input: JobsModeratorsDeactivateVacancyInput!
    ): JobsModeratorsVacancy
    jobsModeratorsDeleteVacancy(
        """
        Parameters for JobsModeratorsDeleteVacancy
        """
        input: JobsModeratorsDeleteVacancyInput!
    ): JobsModeratorsVacancy
    jobsModeratorsEditEmployersClients(
        """
        Parameters for JobsModeratorsEditEmployersClients
        """
        input: JobsModeratorsEditEmployersClientsInput!
    ): JobsModeratorsEmployer
    jobsModeratorsEditEmployersRecruiters(
        """
        Parameters for JobsModeratorsEditEmployersRecruiters
        """
        input: JobsModeratorsEditEmployersRecruitersInput!
    ): JobsModeratorsEmployer
    jobsModeratorsMergeVacancy(
        """
        Parameters for JobsModeratorsMergeVacancy
        """
        input: JobsModeratorsMergeVacancyInput!
    ): JobsModeratorsVacancy
    jobsModeratorsRejectInquiryVacancySuggestionByOps(
        """
        Parameters for JobsModeratorsRejectInquiryVacancySuggestionByOps
        """
        input: JobsModeratorsRejectInquiryVacancySuggestionByOpsInput!
    ): Boolean
    jobsModeratorsSubmitHiring(
        """
        Parameters for JobsModeratorsSubmitHiring
        """
        input: JobsModeratorsSubmitHiringInput!
    ): JobsModeratorsCandidate
    jobsModeratorsUpdateCompany(
        """
        Parameters for JobsModeratorsUpdateCompany
        """
        input: JobsModeratorsUpdateCompanyInput!
    ): Company
    jobsModeratorsUpdateEmployer(
        """
        Parameters for JobsModeratorsUpdateEmployer
        """
        input: JobsModeratorsUpdateEmployerInput!
    ): JobsModeratorsEmployer
    jobsModeratorsUpdateVacancy(
        """
        Parameters for JobsModeratorsUpdateVacancy
        """
        input: JobsModeratorsUpdateVacancyInput!
    ): JobsModeratorsVacancy
    jobsModeratorsUpdateVacancySubmission(
        """
        Parameters for JobsModeratorsUpdateVacancySubmission
        """
        input: JobsModeratorsUpdateVacancySubmissionInput!
    ): JobsModeratorsVacancySubmission
    jobsRecruitersAcceptCandidate(
        """
        Parameters for JobsRecruitersAcceptCandidate
        """
        input: JobsRecruitersAcceptCandidateInput!
    ): JobsRecruitersCandidate
    jobsRecruitersActivateCurrentRecruiter(
        """
        Parameters for JobsRecruitersActivateCurrentRecruiter
        """
        input: JobsRecruitersActivateCurrentRecruiterInput!
    ): JobsRecruitersRecruiter
    jobsRecruitersActivateVacancy(
        """
        Parameters for JobsRecruitersActivateVacancy
        """
        input: JobsRecruitersActivateVacancyInput!
    ): JobsRecruitersVacancy
    jobsRecruitersCompleteTooltip(
        """
        Parameters for JobsRecruitersCompleteTooltip
        """
        input: JobsRecruitersCompleteTooltipInput!
    ): Boolean
    jobsRecruitersCreateCustomCompany(
        """
        Parameters for JobsRecruitersCreateCustomCompany
        """
        input: JobsRecruitersCreateCustomCompanyInput!
    ): Company
    jobsRecruitersCreateEmployer(
        """
        Parameters for JobsRecruitersCreateEmployer
        """
        input: JobsRecruitersCreateEmployerInput!
    ): JobsRecruitersEmployer
    jobsRecruitersCreateStripeBillingUrl(
        """
        Parameters for JobsRecruitersCreateStripeBillingUrl
        """
        input: JobsRecruitersCreateStripeBillingUrlInput!
    ): String
    jobsRecruitersCreateStripeSessionUrl(
        """
        Parameters for JobsRecruitersCreateStripeSessionUrl
        """
        input: JobsRecruitersCreateStripeSessionUrlInput!
    ): String
    jobsRecruitersCreateVacancy(
        """
        Parameters for JobsRecruitersCreateVacancy
        """
        input: JobsRecruitersCreateVacancyInput!
    ): JobsRecruitersVacancy
    jobsRecruitersDeleteEmployer(
        """
        Parameters for JobsRecruitersDeleteEmployer
        """
        input: JobsRecruitersDeleteEmployerInput!
    ): JobsRecruitersRecruiter
    jobsRecruitersDeleteEmployerRecruiter(
        """
        Parameters for JobsRecruitersDeleteRecruiter
        """
        input: JobsRecruitersDeleteRecruiterInput!
    ): JobsRecruitersRecruiter
    jobsRecruitersDeleteVacancy(
        """
        Parameters for JobsRecruitersDeleteVacancy
        """
        input: JobsRecruitersDeleteVacancyInput!
    ): JobsRecruitersVacancy
    jobsRecruitersDeleteVacancyField(
        """
        Parameters for JobsRecruitersDeleteVacancyField
        """
        input: JobsRecruitersDeleteVacancyFieldInput!
    ): JobsRecruitersVacancy
    jobsRecruitersDestroyCandidate(
        """
        Parameters for JobsRecruitersDestroyCandidate
        """
        input: JobsRecruitersDestroyCandidateInput!
    ): JobsRecruitersCandidate
    jobsRecruitersEditEmployersRecruiter(
        """
        Parameters for JobsRecruitersEditRecruiter
        """
        input: JobsRecruitersEditRecruiterInput!
    ): JobsRecruitersRecruiter
    jobsRecruitersEnableVacancies(
        """
        Parameters for JobsRecruitersEnableVacancies
        """
        input: JobsRecruitersEnableVacanciesInput!
    ): [JobsRecruitersVacancy!]
    jobsRecruitersImportGreenhouseVacancies(
        """
        Parameters for JobsRecruitersImportGreenhouseVacancies
        """
        input: JobsRecruitersImportGreenhouseVacanciesInput!
    ): [JobsRecruitersVacancy!]
    jobsRecruitersMarkCandidateAsViewed(
        """
        Parameters for JobsRecruitersMarkCandidateAsViewed
        """
        input: JobsRecruitersMarkCandidateAsViewedInput!
    ): JobsRecruitersCandidate
    jobsRecruitersMatchVacancy(
        """
        Parameters for JobsRecruitersMatchVacancy
        """
        input: JobsRecruitersMatchVacancyInput!
    ): JobsRecruitersVacancy
    jobsRecruitersRejectCandidate(
        """
        Parameters for JobsRecruitersRejectCandidate
        """
        input: JobsRecruitersRejectCandidateInput!
    ): JobsRecruitersCandidate

    """
    Response `true` if Recruiter with provided email exists and the token has been sent and `false` otherwise
    """
    jobsRecruitersSendRecruiterAuthToken(
        """
        Parameters for JobsRecruitersSendRecruiterAuthToken
        """
        input: JobsRecruitersSendRecruiterAuthTokenInput!
    ): Boolean
    jobsRecruitersUpdateCurrentEmployer(
        """
        Parameters for JobsRecruitersUpdateCurrentEmployer
        """
        input: JobsRecruitersUpdateCurrentEmployerInput!
    ): JobsRecruitersEmployer
    jobsRecruitersUpdateCurrentRecruiter(
        """
        Parameters for JobsRecruitersUpdateCurrentRecruiter
        """
        input: JobsRecruitersUpdateCurrentRecruiterInput!
    ): JobsRecruitersRecruiter
    jobsRecruitersUpdateCustomCompany(
        """
        Parameters for JobsRecruitersUpdateCustomCompany
        """
        input: JobsRecruitersUpdateCustomCompanyInput!
    ): Company
    jobsRecruitersUpdateVacancy(
        """
        Parameters for JobsRecruitersUpdateVacancy
        """
        input: JobsRecruitersUpdateVacancyInput!
    ): JobsRecruitersVacancy
    jobsRecruitersUpdateVacancyField(
        """
        Parameters for JobsRecruitersUpdateVacancyField
        """
        input: JobsRecruitersUpdateVacancyFieldInput!
    ): JobsRecruitersVacancy
    markCommentsViewed(
        """
        Parameters for MarkCommentsViewed
        """
        input: MarkCommentsViewedInput!
    ): Post
    markPostsAsRead(
        """
        Parameters for MarkPostsAsRead
        """
        input: MarkPostsAsReadInput!
    ): Boolean
    matchJobsInquiryAfterOnboarding(
        """
        Parameters for MatchJobsInquiryAfterOnboarding
        """
        input: MatchJobsInquiryAfterOnboardingInput!
    ): JobsInquiry
    matchJobsModeratorsInquiry(
        """
        Parameters for JobsModeratorsMatchInquiry
        """
        input: JobsModeratorsMatchInquiryInput!
    ): JobsModeratorsMatchInquiryPayload
    reRequestTestimonialForPublicPortfolioCurrentUser(
        """
        Parameters for ReRequestTestimonialForPublicPortfolioCurrentUser
        """
        input: ReRequestTestimonialForPublicPortfolioCurrentUserInput!
    ): Testimonial
    readAllNotifications(
        """
        Parameters for ReadAllNotifications
        """
        input: ReadAllNotificationsInput!
    ): Int
    readConnectionRequests(
        """
        Parameters for ReadRequests
        """
        input: ReadRequestsInput!
    ): [Request!]
    readNotification(
        """
        Parameters for ReadNotification
        """
        input: ReadNotificationInput!
    ): Notification
    refreshJobsInquiry(
        """
        Parameters for RefreshInquiry
        """
        input: RefreshInquiryInput!
    ): JobsInquiry
    rejectConnectionRequest(
        """
        Parameters for RejectRequest
        """
        input: RejectRequestInput!
    ): Request
    rejectJobsHiring(
        """
        Parameters for RejectJobsHiring
        """
        input: RejectJobsHiringInput!
    ): Boolean
    rejectJobsModeratorsHiringByOps(
        """
        Parameters for JobsModeratorsRejectJobsHiringByOps
        """
        input: JobsModeratorsRejectJobsHiringByOpsInput!
    ): JobsModeratorsHiring
    removeConnection(
        """
        Parameters for RemoveConnection
        """
        input: RemoveConnectionInput!
    ): Boolean
    removeJobsModeratorsInquiry(
        """
        Parameters for JobsModeratorsRemoveInquiry
        """
        input: JobsModeratorsRemoveInquiryInput!
    ): JobsModeratorsInquiry
    renewActiveJobStatus(
        """
        Parameters for RenewActiveJobStatus
        """
        input: RenewActiveJobStatusInput!
    ): User
    renewJobsModeratorsActiveJobStatus(
        """
        Parameters for JobsModeratorsRenewActiveJobStatus
        """
        input: JobsModeratorsRenewActiveJobStatusInput!
    ): JobsModeratorsUser
    reportSalesGptFeedback(
        """
        Parameters for ReportSalesGptFeedback
        """
        input: ReportSalesGptFeedbackInput!
    ): SalesGptQuery
    requestTestimonialForPublicPortfolioCurrentUser(
        """
        Parameters for RequestTestimonialForPublicPortfolioCurrentUser
        """
        input: RequestTestimonialForPublicPortfolioCurrentUserInput!
    ): [Testimonial!]
    saveSalesGptSummary(
        """
        Parameters for SaveSalesGptSummary
        """
        input: SaveSalesGptSummaryInput!
    ): SalesGptQuery
    sayThanks(
        """
        Parameters for SayThanks
        """
        input: SayThanksInput!
    ): Boolean
    scheduleHiringMeeting(
        """
        Parameters for ScheduleHiringMeeting
        """
        input: ScheduleHiringMeetingInput!
    ): JobsHiring
    scheduleJobsModeratorsMeeting(
        """
        Parameters for JobsModeratorsScheduleMeeting
        """
        input: JobsModeratorsScheduleMeetingInput!
    ): JobsModeratorsHiring
    sendSuperInvite(
        """
        Parameters for SendSuperInvite
        """
        input: SendSuperInviteInput!
    ): Boolean
    startTestimonialEndorsingForPublicPortfolioUser(
        """
        Parameters for StartTestimonialEndorsingForPublicPortfolioUser
        """
        input: StartTestimonialEndorsingForPublicPortfolioUserInput!
    ): Testimonial
    triggerContactsFetching(
        """
        Parameters for TriggerContactsFetching
        """
        input: TriggerContactsFetchingInput!
    ): Boolean
    triggerLinkedinScraping(
        """
        Parameters for TriggerLinkedinScraping
        """
        input: TriggerLinkedinScrapingInput!
    ): Boolean
    undoTestimonialForPublicPortfolioCurrentUser(
        """
        Parameters for UndoTestimonialForPublicPortfolioCurrentUser
        """
        input: UndoTestimonialForPublicPortfolioCurrentUserInput!
    ): Testimonial
    updateAcademyArticle(
        """
        Parameters for UpdateArticle
        """
        input: UpdateArticleInput!
    ): Article
    updateAwardForPublicPortfolioCurrentUser(
        """
        Parameters for UpdateAwardForPublicPortfolioCurrentUser
        """
        input: UpdateAwardForPublicPortfolioCurrentUserInput!
    ): Award
    updateClientForPublicPortfolioCurrentUser(
        """
        Parameters for UpdateClientForPublicPortfolioCurrentUser
        """
        input: UpdateClientForPublicPortfolioCurrentUserInput!
    ): Client
    updateClientPositionForPublicPortfolioCurrentUser(
        """
        Parameters for UpdateClientPositionForPublicPortfolioCurrentUser
        """
        input: UpdateClientPositionForPublicPortfolioCurrentUserInput!
    ): PublicPortfolioCurrentUser
    updateComment(
        """
        Parameters for UpdateComment
        """
        input: UpdateCommentInput!
    ): Comment
    updateCompanyPagesInterview(
        """
        Parameters for CompanyPagesUpdateInterview
        """
        input: CompanyPagesUpdateInterviewInput!
    ): CompanyPagesInterview
    updateCompanyPagesReview(
        """
        Parameters for CompanyPagesUpdateReview
        """
        input: CompanyPagesUpdateReviewInput!
    ): CompanyPagesReview
    updateCompanyPagesSalary(
        """
        Parameters for CompanyPagesUpdateSalary
        """
        input: CompanyPagesUpdateSalaryInput!
    ): CompanyPagesSalary
    updateConfigurationForPublicPortfolioCurrentUser(
        """
        Parameters for UpdateConfigurationForPublicPortfolioCurrentUser
        """
        input: UpdateConfigurationForPublicPortfolioCurrentUserInput!
    ): PublicPortfolioConfiguration
    updateCurrentPortfolioUser(
        """
        Parameters for UpdateCurrentPortfolioUser
        """
        input: UpdateCurrentPortfolioUserInput!
    ): PortfolioCurrentUser
    updateCurrentUser(
        """
        Parameters for UpdateCurrentUser
        """
        input: UpdateCurrentUserInput!
    ): CurrentUser
    updateDeal(
        """
        Parameters for UpdateDeal
        """
        input: UpdateDealInput!
    ): PortfolioDeal
    updateEducationHistoryForPublicPortfolioCurrentUser(
        """
        Parameters for UpdateEducationHistoryForPublicPortfolioCurrentUser
        """
        input: UpdateEducationHistoryForPublicPortfolioCurrentUserInput!
    ): EducationHistory
    updateJobsCandidatesHiring(
        """
        Parameters for JobsCandidatesUpdateHiring
        """
        input: JobsCandidatesUpdateHiringInput!
    ): JobsHiring
    updateJobsInquiry(
        """
        Parameters for UpdateInquiry
        """
        input: UpdateInquiryInput!
    ): JobsInquiry
    updateJobsModeratorsHiring(
        """
        Parameters for JobsModeratorsUpdateHiring
        """
        input: JobsModeratorsUpdateHiringInput!
    ): JobsModeratorsHiring
    updateJobsModeratorsInquiry(
        """
        Parameters for JobsModeratorsUpdateInquiry
        """
        input: JobsModeratorsUpdateInquiryInput!
    ): JobsModeratorsInquiry
    updateJobsModeratorsSubmittedHiring(
        """
        Parameters for JobsModeratorsUpdateSubmittedHiring
        """
        input: JobsModeratorsUpdateSubmittedHiringInput!
    ): JobsModeratorsHiring
    updateJobsModeratorsUser(
        """
        Parameters for JobsModeratorsUpdateUser
        """
        input: JobsModeratorsUpdateUserInput!
    ): JobsModeratorsUser
    updatePost(
        """
        Parameters for UpdatePost
        """
        input: UpdatePostInput!
    ): Post
    updatePublicPortfolioCurrentUser(
        """
        Parameters for UpdatePublicPortfolioCurrentUser
        """
        input: UpdatePublicPortfolioCurrentUserInput!
    ): PublicPortfolioCurrentUser
    updateTestimonialPositionForPublicPortfolioCurrentUser(
        """
        Parameters for UpdateTestimonialPositionForPublicPortfolioCurrentUser
        """
        input: UpdateTestimonialPositionForPublicPortfolioCurrentUserInput!
    ): Testimonial
    updateWorkHistoryForPublicPortfolioCurrentUser(
        """
        Parameters for UpdateWorkHistoryForPublicPortfolioCurrentUser
        """
        input: UpdateWorkHistoryForPublicPortfolioCurrentUserInput!
    ): WorkHistory
    upsertDealQuarter(
        """
        Parameters for UpsertDealQuarter
        """
        input: UpsertDealQuarterInput!
    ): PortfolioDealQuarter
    viewAllNotifications(
        """
        Parameters for ViewAllNotifications
        """
        input: ViewAllNotificationsInput!
    ): Int
}

type Notification {
    createdAt: ISO8601DateTime!
    id: ID!
    kind: NotificationKind!
    readAt: ISO8601DateTime
    referenceable: NotificationReferenceable
    type: String!
    updatedAt: ISO8601DateTime!
    user: User!
    viewedAt: ISO8601DateTime
    warRoomCommissionTransaction: CommissionTransaction
}

"""
The connection type for Notification.
"""
type NotificationConnection {
    """
    A list of edges.
    """
    edges: [NotificationEdge!]!

    """
    A list of nodes.
    """
    nodes: [Notification!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type NotificationEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Notification
}

enum NotificationKind {
    action_needed
    common
}

union NotificationReferenceable = Comment | JobsHiring | Post | Rating | SalesGptQuery | Testimonial | User

type OnboardingData {
    companyStages: [CompanyStage!]!
    customerSegments: [CustomerSegment!]!
    departments: [Department!]!
    expectations: [Expectation!]!
    industries: [Industry!]!
    jobSearchStatuses: [String!]!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
    """
    When paginating forwards, the cursor to continue.
    """
    endCursor: String

    """
    When paginating forwards, are there more items?
    """
    hasNextPage: Boolean!

    """
    When paginating backwards, are there more items?
    """
    hasPreviousPage: Boolean!

    """
    When paginating backwards, the cursor to continue.
    """
    startCursor: String
}

enum Platform {
    MOBILE
    WEB
}

type Poll {
    choices: [PollChoice!]!
    createdAt: ISO8601DateTime!
    currentUserVote: PollVote
    expiredForCommission: Boolean!
    id: Int!
    post: Post!
    postId: Int!
    previewUsers: [User!]
    title: String!
    updatedAt: ISO8601DateTime!
    votedUsers(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): UserConnection!
    votes(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): PollVoteConnection!
    votesCount: Int!
}

"""
Attributes for creating or updating a War Room poll
"""
input PollAttributes {
    choices: [PollChoiceAttributes!]!
    id: Int
    title: String!
}

type PollChoice {
    createdAt: ISO8601DateTime!
    currentVote: Boolean!
    id: Int!
    poll: Poll!
    pollId: Int!
    position: Int
    text: String!
    updatedAt: ISO8601DateTime!
    votedUsers(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): UserConnection!
    votes(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): PollVoteConnection!
    votesCount: Int!
}

"""
Attributes for creating or updating a War Room post
"""
input PollChoiceAttributes {
    id: Int
    position: Int!
    text: String!
}

type PollVote {
    choice: PollChoice!
    choiceId: Int!
    createdAt: ISO8601DateTime!
    id: Int!
    poll: Poll!
    updatedAt: ISO8601DateTime!
    user: User!
}

"""
The connection type for PollVote.
"""
type PollVoteConnection {
    """
    A list of edges.
    """
    edges: [PollVoteEdge!]!

    """
    A list of nodes.
    """
    nodes: [PollVote!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type PollVoteEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: PollVote
}

type PortfolioCurrentUser {
    city: City
    customerSegment: CustomerSegment
    dealQuarters: [PortfolioDealQuarter!]!
    deals(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): PortfolioDealConnection!
    id: ID!
    industry: Industry
    lastLinkedinSyncError: String
    lastLinkedinSyncedAt: ISO8601DateTime
    productTypes: [ProductType!]!
    ranking: PortfolioRanking!
    topDeals(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): PortfolioDealConnection!
}

type PortfolioDeal implements DealInterface {
    amount: Float!
    closeDate: ISO8601DateTime!
    company: Company
    createdAt: ISO8601DateTime!
    departments: [Department!]
    id: ID!
    interactionsCount: Int!
    isOwner: Boolean!
    isPrivateCompany: Boolean!
    isPrivateDepartments: Boolean!
    post: Post
}

"""
The connection type for PortfolioDeal.
"""
type PortfolioDealConnection implements DealConnectionInterface {
    """
    A list of edges.
    """
    edges: [PortfolioDealEdge!]!

    """
    A list of nodes.
    """
    nodes: [PortfolioDeal!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    statistics: DealsStatistics!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type PortfolioDealEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: PortfolioDeal
}

type PortfolioDealQuarter {
    quarter: Int!
    quota: Int
    revenue: Int
    year: Int!
}

type PortfolioDealsSource {
    id: ID!
}

type PortfolioRanking {
    rankingByCustomerSegment: Float
    rankingByIndustry: Float
    rankingByLocation: Float
}

type PortfolioUserSearchResult implements SearchResultInterface {
    category: String!
    portfolioUser: PublicPortfolioUser!
}

type Post {
    algorithmMetadata: JSON
    archivedAt: ISO8601DateTime
    author: UserAuthor!
    category: String!
    comments(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        sortType: String = "best"
    ): CommentConnection!
    commentsCount: Int!
    content: Content!
    contentId: Int!
    contentType: String!
    createdAt: ISO8601DateTime!
    currentUserRating: Rating
    files: [File!]
    id: ID!
    isAnonymous: Boolean!
    membersOnly: Boolean!
    metadataUsers(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): UserPostConnection!
    newCommentsCount: Int!
    official: Boolean!
    pinned: Boolean!
    pinnedAt: ISO8601DateTime
    poll: Poll
    previewComments(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): CommentConnection!
    publishedAt: ISO8601DateTime
    ratedUsers(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): UserConnection!
    ratings(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): RatingConnection!
    searchableComments: [Comment!]
    slug: String!
    topicId: Int!
    topics: [Topic!]!
    totalRating: Int!
    totalWeight: Float! @deprecated(reason: "Started to use #algorithm_metadata instead")
    updatedAt: ISO8601DateTime!
    user: User!
    viewed: Boolean
    viewers(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): UserConnection!
    views(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): PostViewConnection!
    viewsCount: Int!
}

"""
The connection type for Post.
"""
type PostConnection {
    """
    A list of edges.
    """
    edges: [PostEdge!]!

    """
    A list of nodes.
    """
    nodes: [Post!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type PostEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Post
}

type PostView {
    createdAt: ISO8601DateTime!
    id: Int!
    postId: Int!
    updatedAt: ISO8601DateTime!
    user: User!
}

"""
The connection type for PostView.
"""
type PostViewConnection {
    """
    A list of edges.
    """
    edges: [PostViewEdge!]!

    """
    A list of nodes.
    """
    nodes: [PostView!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type PostViewEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: PostView
}

type PotentialEmployer {
    company: Company
    companyBusinessAddress: String
    companyDomain: String
    email: String
    firstName: String
    hashid: ID!
    jobTitle: String
    lastName: String
    numberOfHirings: String
    otherRoles: String
    phone: String
    rolesOfHirings: [String!]
}

type ProductType {
    createdAt: ISO8601DateTime!
    custom: Boolean!
    id: Int!
    name: String!
    updatedAt: ISO8601DateTime!
    users: [User!]
}

type Public {
    avatarUrl: String
    currentCompany: String
    firstname: String
    lastname: String
    portfolioIsOpened: Boolean
    position: String
    slug: String!
}

type PublicPortfolioConfiguration {
    fieldCalendarLinkIsPublic: Boolean!
    fieldLinkedinSlugIsPublic: Boolean!
    fieldPhoneIsPublic: Boolean!
    fieldPublicEmailIsPublic: Boolean!
    isPublic: Boolean!
    sectionAwardsIsPublic: Boolean!
    sectionClientsIsPublic: Boolean!
    sectionConnectionsIsPublic: Boolean!
    sectionContactsIsPublic: Boolean!
    sectionEducationHistoriesIsPublic: Boolean!
    sectionHeadlineIsPublic: Boolean!
    sectionSalesExperienceIsPublic: Boolean!
    sectionTestimonialsIsPublic: Boolean!
    sectionWorkHistoriesIsPublic: Boolean!
}

type PublicPortfolioCurrentUser implements PublicPortfolioUserIterface {
    avatarUrl: String
    awards: [Award!]
    calendarLink: String
    city: City
    clients: [Client!]
    companySeriesStages: [CompanySeriesStage!]
    companyStages: [CompanyStage!]
    configuration: PublicPortfolioConfiguration!
    connections(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        search: String
    ): ConnectionConnection
    contacts: Contacts
    createdAt: ISO8601DateTime!
    currentCompany: Company
    currentPosition: String
    departments: [Department!]
    description: String
    educationHistories: [EducationHistory!]
    firstname: String
    industries: [Industry!]
    lastname: String
    linkedinUrl: String
    phone: String
    productTypes: [ProductType!]
    publicEmail: String
    slug: String!
    testimonials: [Testimonial!]
    tooltips: [Tooltip!]!
    warRoomSalesRoles: [SalesRole!]
    workHistories: [WorkHistory!]
    workHistory(id: ID!): WorkHistory!
    yearsOfExperience: Int
}

type PublicPortfolioUser implements PublicPortfolioUserIterface {
    avatarUrl: String
    awards: [Award!]
    calendarLink: String
    city: City
    clients: [Client!]
    companySeriesStages: [CompanySeriesStage!]
    companyStages: [CompanyStage!]
    configuration: PublicPortfolioConfiguration!
    connected: Boolean!
    connections(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        search: String
    ): ConnectionConnection
    contacts: Contacts
    createdAt: ISO8601DateTime!
    currentCompany: Company
    currentPosition: String
    departments: [Department!]
    description: String
    educationHistories: [EducationHistory!]
    firstname: String
    incomingConnectionRequest: Request
    industries: [Industry!]
    lastname: String
    outgoingConnectionRequest: Request
    phone: String
    productTypes: [ProductType!]
    publicEmail: String
    realUser: PublicPortfolioUser
    slug: String!
    testimonials: [Testimonial!]
    warRoomSalesRoles: [SalesRole!]
    workHistories: [WorkHistory!]
    yearsOfExperience: Int
}

interface PublicPortfolioUserIterface {
    avatarUrl: String
    awards: [Award!]
    calendarLink: String
    city: City
    clients: [Client!]
    companySeriesStages: [CompanySeriesStage!]
    companyStages: [CompanyStage!]
    configuration: PublicPortfolioConfiguration!
    connections(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        search: String
    ): ConnectionConnection
    contacts: Contacts
    createdAt: ISO8601DateTime!
    currentCompany: Company
    currentPosition: String
    departments: [Department!]
    description: String
    educationHistories: [EducationHistory!]
    firstname: String
    industries: [Industry!]
    lastname: String
    phone: String
    productTypes: [ProductType!]
    publicEmail: String
    slug: String!
    testimonials: [Testimonial!]
    warRoomSalesRoles: [SalesRole!]
    workHistories: [WorkHistory!]
    yearsOfExperience: Int
}

type Query {
    """
    Returns an Academy article by slug
    """
    academyArticle(slug: String!): Article!

    """
    Returns Academy articles sorted by weight
    """
    academyArticles(topicSlug: String = null): [Article!]!

    """
    Returns an ordered list of Academy topics
    """
    academyTopics(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): AcademyTopicConnection!
    cities(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        search: CitySearchParams
    ): CityConnection!

    """
    Returns a comment by id
    """
    comment(id: ID!, parentOnTop: Boolean = false): Comment!

    """
    Returns a list of comments from the given post
    """
    comments(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        postSlug: String!
        sortType: CommentSortType = best
    ): CommentConnection!

    """
    Returns current commission balance for the current user
    """
    commissionBalance: CommissionBalance!

    """
    Returns data to build commission onboarding for current user
    """
    commissionOnboarding: CommissionOnboarding!

    """
    Returns all companies with compgauge data
    """
    companies(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Sort companies based on reviews/salaries from a particular customer segment
        """
        customerSegmentId: ID = null

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int

        """
        Skip the first X results. Used for pagination
        """
        offset: Int = null

        """
        Sort companies based on reviews/salaries from a particular region
        """
        regionId: ID = null

        """
        Sort companies based on reviews/salaries from a particular role category
        """
        roleCategoryId: ID = null

        """
        Filter by initial letter of company name
        """
        searchLetter: String = null

        """
        Filter by search term
        """
        searchTerm: String = null

        """
        Specify sorting logic
        """
        sortType: CompaniesSort = RANKING
    ): CompaniesConnection

    """
    Return possible company categories
    """
    companiesCategories(searchTerm: String): [CompaniesCategory!]!

    """
    AI based companies search
    """
    companiesSearch(limit: Int = 5, minScore: Int = null, query: String!): [Company!]!

    """
    Returns company
    """
    company(slug: String): Company

    """
    Returns salaries average data
    """
    companyPagesAverageSalariesData(customerSegmentId: ID = null, regionId: ID = null, roleCategoryId: ID!): AverageSalariesData

    """
    Returns best cities by sales role and optionally by customer segment
    """
    companyPagesBestCities(customerSegmentId: ID, roleCategoryId: ID!): [BestCity!]!

    """
    Returns company pages interviews
    """
    companyPagesInterviews(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): CompanyPagesInterviewConnection

    """
    Returns users that are currently working or used to be in the past
    """
    companyPagesPeople(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        search: String
        slug: String!
    ): EmployeeConnection!

    """
    Returns all possible regions for salaries data aggregation
    """
    companyPagesRegions(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): RegionConnection!

    """
    Returns company pages reivews
    """
    companyPagesReviews(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): CompanyPagesReviewConnection

    """
    Returns role categories that contain data for provided customer segment
    """
    companyPagesRoleCategoriesByCustomerSegment(customerSegmentId: ID!): [RoleCategory!]

    """
    Returns salaries average data
    """
    companyPagesRoles(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String
        customerSegmentId: ID = null

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        roleCategoryId: ID!
    ): CompanyPagesRoleConnection

    """
    Returns a company role
    """
    companyRole(companyRoleId: ID!): CompanyPagesRole

    """
    Return particular connection request
    """
    connectionRequest(id: ID!): Request!

    """
    Returns user's requests for connection
    """
    connectionRequestsInbox(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): RequestConnection!

    """
    Returns a list of suggested contacts for connections
    """
    connectionSuggestions(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        type: ConnectionSuggestionType!
    ): ConnectionSuggestionInterfaceConnection!

    """
    Returns current user's job inquiry
    """
    currentJobsInquiry: JobsInquiry

    """
    Returns current user data
    """
    currentUser: CurrentUser!
    customerSegments: [CustomerSegment!]!
    deals(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): DealConnection!
    departments: [Department!]!

    """
    Returns direct message blocked users
    """
    directMessagesBlockedUsers: [User!]!

    """
    Returns suggested users for direct messaging
    """
    directMessagesSuggestedUsers: [User!]

    """
    Returns thread with other_user_username if it exists
    """
    directMessagesThread(username: String!): Thread

    """
    Returns direct message threads
    """
    directMessagesThreads: [Thread!]!

    """
    Returns users looked up by username attr (without blocked users)
    """
    directMessagesUsersByUsername(query: String!): [UserSearch!]!
    educationHistory(id: ID!): EducationHistory!
    industries: [Industry!]!

    """
    Returns an limited ordered list of CompanySeriesStage options for Jobs
    """
    jobsCompanySeriesStages: [CompanySeriesStage!]!

    """
    Returns a hiring by hashid
    """
    jobsHiring(hashid: String!): JobsHiring!

    """
    Returns Bravado account owners
    """
    jobsModeratorsAccountOwners: [JobsModeratorsEmployersAccountOwner!]!
    jobsModeratorsBestHiringsExplanation(hiringIds: [ID!]!): JobsModeratorsHiringExplanation!
    jobsModeratorsCandidate(id: ID!): JobsModeratorsCandidate!
    jobsModeratorsDefaultCandidate(hiringId: ID!): JobsModeratorsCandidate!

    """
    Returns job employer by id for moderator
    """
    jobsModeratorsEmployer(id: ID!): JobsModeratorsEmployer

    """
    Returns jobs employers for moderator
    """
    jobsModeratorsEmployers(
        accountOwnerIds: [ID!]

        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        needsAttention: Boolean = false
        searchTerm: String
        sort: JobsModeratorsEmployerSortAttributes
        subscriptionStates: [JobsModeratorsEmployerSubscriptionState!]
        subscriptionTypes: [JobsModeratorsEmployerSubscriptionType!]
    ): JobsModeratorsEmployerConnection!
    jobsModeratorsFields(
        """
        filter by overlapping for `accessLevels`
        """
        accessLevels: [JobsFieldsAccessLevel!]

        """
        filter by overlapping for `availableForRoles`
        """
        availableForRoles: [JobsRole!]
        categoryIds: [ID!]

        """
        filter by overlapping for `popularForRoles`
        """
        popularForRoles: [JobsRole!]

        """
        filter by overlapping for `scopes`
        """
        scopes: [JobsFieldsScope!]
    ): [JobsModeratorsField!]!
    jobsModeratorsFieldsCategories: [JobsModeratorsFieldsCategory!]!

    """
    Returns job hiring by id for moderator
    """
    jobsModeratorsHiring(id: ID!): JobsModeratorsHiring

    """
    Returns a list of hiring states
    """
    jobsModeratorsHiringStates: [JobsModeratorsHiringState!]!

    """
    Returns a list of hiring states with counters
    """
    jobsModeratorsHiringStatesWithCounters: [JobsModeratorsHiringStateCounter!]!

    """
    Returns last job hirings for moderator
    """
    jobsModeratorsHirings(
        acceptedByCandidate: Boolean
        acceptedByEmployer: Boolean

        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String
        assigneeIds: [ID]

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String
        employerIds: [ID!]
        employmentTypes: [JobsVacancyEmployment!]

        """
        Returns the first _n_ elements from the list.
        """
        first: Int
        interviewNumber: [Int]

        """
        Returns the last _n_ elements from the list.
        """
        last: Int

        """
        Provide `null` to load all set
        """
        pageSize: Int = 21
        position: String
        searchTerm: String
        sort: JobsModeratorsHiringSortAttributes
        states: [JobsModeratorsHiringState!]
        submissionSources: [JobsHiringSubmissionSource!]
        tiers: [Int]
        vacancyId: ID
    ): JobsModeratorsHiringConnection

    """
    Returns last job inquiries for moderator
    """
    jobsModeratorsInquiries(
        acceptedByCandidate: Boolean
        acceptedByEmployer: Boolean

        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String
        assigneeIds: [ID]

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String
        employmentTypes: [JobsInquiryEmployment!]

        """
        Returns the first _n_ elements from the list.
        """
        first: Int
        hiringStates: [JobsModeratorsHiringState!]
        jobSearchStatuses: [JobsJobSearchStatus!]

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        oteMax: Int
        oteMin: Int
        position: String
        screened: Boolean
        searchTerm: String
        sort: JobsModeratorsInquirySortAttributes
        states: [JobsInquiryState!]
        tiers: [Int]
    ): JobsModeratorsInquiryConnection

    """
    Returns job inquiry by id for moderator
    """
    jobsModeratorsInquiry(id: ID!): JobsModeratorsInquiry

    """
    Returns a list of inquiry states visible for moderator
    """
    jobsModeratorsInquiryStates: [JobsInquiryState!]!

    """
    Returns a list of ops rejection reasons
    """
    jobsModeratorsOpsRejectionReasons: [JobsModeratorsOpsRejectionReason!]!

    """
    Returns Bravado recruiters
    """
    jobsModeratorsRecruiters: [JobsModeratorsUser!]!
    jobsModeratorsSuggestedInquiries(limit: Int = 10, vacancyId: ID!): [JobsModeratorsInquiryMatch!]!
    jobsModeratorsSuggestedVacancies(inquiryId: ID!, limit: Int = 10): [JobsModeratorsVacancyMatch!]!

    """
    Returns job vacancies for moderator
    """
    jobsModeratorsVacancies(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String
        employerAccountOwnerIds: [ID!]
        employerIds: [ID!]
        employmentTypes: [JobsVacancyEmployment!]

        """
        Returns the first _n_ elements from the list.
        """
        first: Int
        isWorkingInSalesSaas: [Boolean!]

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        positions: [JobsRole!]
        searchTerm: String
        sort: JobsModeratorsVacancySortAttributes
        states: [JobsVacancyState!]
    ): JobsModeratorsVacancyConnection!
    jobsModeratorsVacancy(id: ID!): JobsModeratorsVacancy!
    jobsRecruitersCandidate(hashid: ID!): JobsRecruitersCandidate!
    jobsRecruitersCandidates(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int
        isAcceptedByEmployer: Boolean

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        state: [JobsRecruitersCandidateState!]
        vacancyId: ID
    ): JobsRecruitersCandidateConnection!
    jobsRecruitersCheckEmployerExistence(companyId: ID!): Boolean!
    jobsRecruitersCheckRecruiterExistence(email: String!): Boolean!
    jobsRecruitersCompanyCategorySuggestions(companyId: ID!): [String!]!
    jobsRecruitersCurrentRecruiter: JobsRecruitersRecruiter
    jobsRecruitersEmployerRecruiters: [JobsRecruitersRecruiter!]
    jobsRecruitersField(slug: String!): JobsRecruitersField!
    jobsRecruitersFields(
        """
        filter by overlapping for `accessLevels`
        """
        accessLevels: [JobsFieldsAccessLevel!]

        """
        filter by overlapping for `availableForRoles`
        """
        availableForRoles: [JobsRole!]
        categoryIds: [ID!]

        """
        filter by overlapping for `popularForRoles`
        """
        popularForRoles: [JobsRole!]

        """
        filter by overlapping for `scopes`
        """
        scopes: [JobsFieldsScope!]
    ): [JobsRecruitersField!]!
    jobsRecruitersFieldsCategories: [JobsRecruitersFieldsCategory!]!
    jobsRecruitersInquiry(hashId: String!): JobsRecruitersInquiry
    jobsRecruitersOteDistribution(
        """
        if set as `true` uses the candidates that applied in the lat 16 weeks to get
        an average of candidates to be expected weekly. It will substitute the total
        value to be the average instead the candidate pool number.
        """
        useAverageCandidateIntake: Boolean = true
        vacancyId: ID!
    ): JobsRecruitersDistribution
    jobsRecruitersVacancies(states: [JobsVacancyState!] = [DRAFT, ACTIVATED, DEACTIVATED, DISABLED, DELETED, DELETED_FROM_ATS, PAUSED]): [JobsRecruitersVacancy!]!
    jobsRecruitersVacancy(id: ID!): JobsRecruitersVacancy!
    jobsRecruitersVacancyPromptTemplates(employmentType: JobsVacancyEmployment!, position: JobsRole!): [JobsRecruitersVacancyPromptTemplate!]!

    """
    Returns a vacancy by uid
    """
    jobsVacancy(uid: String!): JobsVacancy!

    """
    Returns data for top users commission leaderboard and current user position in leaderboard
    """
    leaderboard: JSON!

    """
    Returns a list with notifications received by the current user
    """
    notifications(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int
        kinds: [NotificationKind!] = null

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        platform: Platform = MOBILE
    ): NotificationConnection
    onboardingData: OnboardingData!

    """
    Returns user's outgoing requests
    """
    outgoingConnectionRequests(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): RequestConnection!

    """
    Returns a list of a suggested bravado users for connections(v2)
    """
    peopleYouMightKnow(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): SuggestedUserConnection!

    """
    Returns a list with posts for War Room personal feed with pagination
    """
    personalFeedPosts(filterByTopicSlug: String, limit: Int, offset: Int! = 0): [Post!]!

    """
    Returns a list with pinned posts from War Room
    """
    pinnedPosts(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): PostConnection!

    """
    Returns a list with the most popular topics from War Room
    """
    popularTopics: [Topic!]!

    """
    Returns current portfolio user
    """
    portfolioCurrentUser: PortfolioCurrentUser!
    portfolioDeal(id: ID!): PortfolioDeal!

    """
    Returns a post by slug
    """
    post(slug: String!): Post

    """
    Returns a list of posts from War Room
    """
    posts(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String
        filterByPopularityType: String
        filterByTopicSlug: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        sortType: String
        tab: String
    ): PostConnection!
    productTypes: [ProductType!]!

    """
    Returns connections by user's slug and search query
    """
    publicPortfolioConnections(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        search: String
        slug: String!
    ): ConnectionConnection
    publicPortfolioCurrentUser: PublicPortfolioCurrentUser!

    """
    Returns portfolio public user by slug
    """
    publicPortfolioUser(slug: String!): PublicPortfolioUser
    publicPortfolioUserTestifySign(slug: String!): String
    roleCategories: [RoleCategory!]!
    salesDirectoryProfiles(page: Int = 1, perPage: Int = 20, prefix: String!): SalesDirectoryPage!

    """
    Returns flex cta by search session key
    """
    salesGptFlexCta(sessionId: String!): String

    """
    Returns query, summary and sources for given a query session ID
    """
    salesGptQuery(sessionId: String!): SalesGptQuery!
    salesRoles: [SalesRole!]!

    """
    AI based Universal Search
    """
    search(filterCategories: [SearchResultCategory!] = [], page: Int = 1, perPage: Int = 10, produceAiSummary: Boolean = false, query: String!): SearchInfo!
    searchLocations(
        countryName: String = null

        """
        The maximum value is 100
        """
        first: Int = 10
        term: String = null

        """
        You can search by specific type of location
        """
        types: [LocationType!] = [CITY, COUNTRY_STATE]
    ): [Location!]!

    """
    Returns data for mentioning
    """
    searchUsers(boostUserUsernames: String, query: String): [UserSearch!]!
    suggestedGeolocation(
        """
        If doesn't provide then request IP will be used
        """
        ip: String
    ): City
    suggestedLinkedinProfiles: [VendorDbUser!]!
    testimonial(sign: String!): Testimonial!

    """
    Returns top 5 flex vacancies
    """
    topFlexJobsVacancies: [JobsVacancy!]

    """
    Returns a list of topics from War Room
    """
    topics(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): TopicConnection!

    """
    Search universities
    """
    universities(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        search: String
    ): UniversityConnection!
    university(slug: String!): University!

    """
    Search university degrees
    """
    universityDegrees(search: String): [String!]!

    """
    Returns alumni of particular university
    """
    universityPagesPeople(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        search: String
        slug: String!
    ): AlumniConnection!

    """
    Returns suggestions for university page
    """
    universityPagesSuggestions(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        slug: String!
    ): SuggestedUserConnection!

    """
    Returns a user by username
    """
    user(username: String!): User

    """
    Returns a list of posts by given user
    """
    userPosts(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        username: String
    ): PostConnection!

    """
    Returns a list of posts published by real identity
    """
    userPublicPosts(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
        slug: String!
    ): PostConnection!

    """
    Search user refer
    """
    userReferrer(invite: String!): SuggestedUser

    """
    Returns a list of posts with search term
    """
    warRoomSearchPosts(query: String): [Post!]!

    """
    Returns last war room activity type
    """
    warRoomSuggestedActivityType: Activity!

    """
    Returns number of unreaded posts
    """
    warRoomUnreadPostsCount: Int!
}

type Rating {
    createdAt: ISO8601DateTime!
    id: ID!
    reactable: Reactable!
    reactableId: Int!
    reactableType: String!
    updatedAt: ISO8601DateTime!
    user: User!
    value: Int!
}

"""
The connection type for Rating.
"""
type RatingConnection {
    """
    A list of edges.
    """
    edges: [RatingEdge!]!

    """
    A list of nodes.
    """
    nodes: [Rating!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type RatingEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Rating
}

"""
Autogenerated input type of ReRequestTestimonialForPublicPortfolioCurrentUser
"""
input ReRequestTestimonialForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

union Reactable = Comment | Post

"""
Autogenerated input type of ReadAllNotifications
"""
input ReadAllNotificationsInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    platform: Platform = MOBILE
}

"""
Autogenerated input type of ReadNotification
"""
input ReadNotificationInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

"""
Autogenerated input type of ReadRequests
"""
input ReadRequestsInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    ids: [ID!]!
}

type ReadThreadEvent {
    readAt: ISO8601DateTime!
    threadId: ID!
}

"""
Autogenerated input type of ReadThreadMessages
"""
input ReadThreadMessagesInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    threadId: ID!
}

"""
Autogenerated input type of RefreshInquiry
"""
input RefreshInquiryInput {
    baseSalary: Int!

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    ote: Int!
    quotaAttainmentByTeamPerPeriod: Int
    quotaAttainmentPerLastYear: Int
    quotaAttainmentPerPeriod: Int
    rankOnTeam: Int
    teamSize: Int
    unarchivedClientCompanyIds: [ID!]!
    vpDepartmentSize: JobsInquiryVpDepartmentSize
}

type Region {
    category: String!
    code: String!
    id: ID!
    name: String!
    section: String!
    slug: String!
}

"""
The connection type for Region.
"""
type RegionConnection {
    """
    A list of edges.
    """
    edges: [RegionEdge!]!

    """
    A list of nodes.
    """
    nodes: [Region!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type RegionEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Region
}

"""
Autogenerated input type of RejectJobsHiring
"""
input RejectJobsHiringInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
    rejectionReason: String
}

"""
Autogenerated input type of RejectRequest
"""
input RejectRequestInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

type RelatedCompany implements CompanyInterface {
    employeeCount: String
    fullDescription: String
    id: ID!
    investmentRound: String
    logoUrl: String
    name: String!
    shortDescription: String
    slug: String
    totalFunding: BigInt
    webSiteUrl: String
}

type RelatedCompanyPageResponse {
    category: String
    list: [RelatedCompany!]!
}

"""
Autogenerated input type of RemoveConnection
"""
input RemoveConnectionInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    slug: ID!
}

"""
Autogenerated input type of RenewActiveJobStatus
"""
input RenewActiveJobStatusInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

"""
Autogenerated input type of ReportSalesGptFeedback
"""
input ReportSalesGptFeedbackInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    feedbackText: String
    feedbackType: SalesGptFeedback!
    isHarmful: Boolean
    isIncorrect: Boolean
    sessionId: ID!
}

type Request {
    createdAt: ISO8601DateTime!
    id: ID!
    read: Boolean!
    receiver: RequestParticipant!
    requestee: RequestParticipant
    status: String!
}

"""
The connection type for Request.
"""
type RequestConnection {
    """
    A list of edges.
    """
    edges: [RequestEdge!]!

    """
    A list of nodes.
    """
    nodes: [Request!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type RequestEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Request
}

type RequestParticipant {
    avatarUrl: String
    currentCompany: Company
    currentPosition: String
    firstname: String
    lastname: String
    slug: String!
}

"""
Autogenerated input type of RequestTestimonialForPublicPortfolioCurrentUser
"""
input RequestTestimonialForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    emails: [String!]!
    note: String!
}

type RoleCategory {
    createdAt: ISO8601DateTime!
    id: ID!
    name: String!
    slug: String
    updatedAt: ISO8601DateTime!
}

type SalesDirectoryPage {
    currentPage: Int!
    profiles: [SalesDirectoryUser!]!
    totalCount: Int!
    totalPages: Int!
}

type SalesDirectoryUser {
    firstname: String!
    lastname: String!
    slug: String!
}

enum SalesGptFeedback {
    NEGATIVE
    POSITIVE
}

type SalesGptQuery {
    flexCta: String
    query: String!
    sessionId: ID
    sources(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): SearchResultInterfaceConnection
    summary: String
    summaryType: SearchSummaryType!
    wasCompanyPagesDataUsed: Boolean!
    wasExternalDataUsed: Boolean!
}

type SalesRole {
    createdAt: ISO8601DateTime!
    id: ID!
    name: String!
    slug: String
    updatedAt: ISO8601DateTime!
}

type SalesTeamTenureAverage {
    average: Float!
    experience: Float!
}

type SalesTeamTenureAverages {
    ae: SalesTeamTenureAverage!
    sdr: SalesTeamTenureAverage!
}

"""
Autogenerated input type of SaveSalesGptSummary
"""
input SaveSalesGptSummaryInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    sessionId: ID!
    summary: String!
}

"""
Autogenerated input type of SayThanks
"""
input SayThanksInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    sessionId: ID!
}

"""
Autogenerated input type of ScheduleHiringMeeting
"""
input ScheduleHiringMeetingInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    hiringId: ID!
    interviewDate: ISO8601Date!
    meetingType: JobsHiringMeeting!
}

type SearchInfo {
    id: ID!
    results: [SearchResultsCategory!]!
    salesGptQuery: SalesGptQuery
}

enum SearchResultCategory {
    ACADEMY_ARTICLES
    COMPANIES
    COMPANY_PAGES_CATALOGS
    CONTENT
    USER_PORTFOLIOS
    WR_COMMENTS
    WR_POSTS
    WR_USERS
}

interface SearchResultInterface {
    category: String!
}

"""
The connection type for SearchResultInterface.
"""
type SearchResultInterfaceConnection {
    """
    A list of edges.
    """
    edges: [SearchResultInterfaceEdge!]!

    """
    A list of nodes.
    """
    nodes: [SearchResultInterface!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type SearchResultInterfaceEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: SearchResultInterface
}

type SearchResultsCategory {
    category: SearchResultCategory!
    items: [SearchResultInterface!]!
}

enum SearchSummaryType {
    CERTIFIED
    CREATE_POST
    FLEX
    NO_RESULTS
    REGULAR
}

"""
Autogenerated input type of SendMessage
"""
input SendMessageInput {
    body: String!

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    mediaSignedBlobId: String
    otherUserUsername: String!
}

"""
Autogenerated input type of SendSuperInvite
"""
input SendSuperInviteInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    email: String!
}

enum SortOrder {
    asc
    desc
}

"""
Autogenerated input type of StartTestimonialEndorsingForPublicPortfolioUser
"""
input StartTestimonialEndorsingForPublicPortfolioUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    testifySign: String!
}

type Story {
    coverContentType: String
    coverFileName: String
    coverFileSize: Int
    coverUpdatedAt: ISO8601DateTime
    coverUrl: String
    createdAt: ISO8601DateTime!
    highlightedText: String
    id: Int!
    previewImageUrl: String
    rawText: String
    text: String
    textImageUrl: String
    title: String!
    updatedAt: ISO8601DateTime!
}

type Subscription {
    commissionTransactions: CommissionTransactionSubscriptionPayload!
    directMessages: DirectMessagesSubscriptionPayload!
    linkedinProfileImported: LinkedinProfileImportedPayload!
}

type SuggestedUser {
    avatarUrl: String
    currentCompany: Company
    currentPosition: String
    firstname: String
    lastname: String
    matchMetadata: GenericMatch
    slug: String!
}

"""
The connection type for SuggestedUser.
"""
type SuggestedUserConnection {
    """
    A list of edges.
    """
    edges: [SuggestedUserEdge!]!

    """
    A list of nodes.
    """
    nodes: [SuggestedUser!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type SuggestedUserEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: SuggestedUser
}

type Testimonial {
    author: TestimonialAuthor!
    description: String
    id: ID!
    position: Int
    requestor: TestimonialRequestor!
    sign: String!
    skills: [String!]!
    state: TestimonialState!
    updatedAt: ISO8601DateTime!
}

type TestimonialAuthor {
    avatarUrl: String
    email: String
    firstname: String
    jobTitle: String
    lastname: String
}

type TestimonialRequestor {
    firstname: String
    lastname: String
    slug: String!
}

enum TestimonialState {
    approving
    archived
    declined
    failed
    new
    on_linkedin_verification
    on_manual_verification
    requested
    verified
}

type Thread {
    id: ID!
    lastMessage: Message
    messages(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): MessageConnection!
    otherUser: User!
    unreadMessages: Int!
}

type Tooltip {
    name: String!
}

type Topic {
    author: User!
    category: String!
    createdAt: ISO8601DateTime!
    emoji: String!
    id: Int!
    name: String!
    posts(
        """
        Returns the elements in the list that come after the specified cursor.
        """
        after: String

        """
        Returns the elements in the list that come before the specified cursor.
        """
        before: String

        """
        Returns the first _n_ elements from the list.
        """
        first: Int

        """
        Returns the last _n_ elements from the list.
        """
        last: Int
    ): PostConnection!
    slug: String!
    updatedAt: ISO8601DateTime!
}

"""
The connection type for Topic.
"""
type TopicConnection {
    """
    A list of edges.
    """
    edges: [TopicEdge!]!

    """
    A list of nodes.
    """
    nodes: [Topic!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type TopicEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: Topic
}

type TotalCompensationRange {
    maxCompensationRange: Float!
    minCompensationRange: Float!
}

"""
Autogenerated input type of TriggerContactsFetching
"""
input TriggerContactsFetchingInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

"""
Autogenerated input type of TriggerLinkedinScraping
"""
input TriggerLinkedinScrapingInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
}

"""
Autogenerated input type of UnblockUser
"""
input UnblockUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    otherUserUsername: String!
}

"""
Autogenerated input type of UndoTestimonialForPublicPortfolioCurrentUser
"""
input UndoTestimonialForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
}

type University {
    address: String
    city: City
    custom: Boolean!
    description: String
    id: ID!
    logoUrl: String
    name: String!
    parent: University
    slug: String
    verified: Boolean!
    websiteUrl: String
}

"""
The connection type for University.
"""
type UniversityConnection {
    """
    A list of edges.
    """
    edges: [UniversityEdge!]!

    """
    A list of nodes.
    """
    nodes: [University!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type UniversityEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: University
}

type UniversityMatch {
    type: String!
    universityName: String!
}

"""
Autogenerated input type of UpdateArticle
"""
input UpdateArticleInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    html: String
    markdown: String!
    slug: String!
}

"""
Autogenerated input type of UpdateAwardForPublicPortfolioCurrentUser
"""
input UpdateAwardForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
    name: String
    year: Int
}

"""
Autogenerated input type of UpdateClientForPublicPortfolioCurrentUser
"""
input UpdateClientForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
    isPublic: Boolean!
    soldTo: String
}

"""
Autogenerated input type of UpdateClientPositionForPublicPortfolioCurrentUser
"""
input UpdateClientPositionForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
    position: Int!
}

"""
Autogenerated input type of UpdateComment
"""
input UpdateCommentInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
    media: String
    text: String!
}

"""
Autogenerated input type of UpdateConfigurationForPublicPortfolioCurrentUser
"""
input UpdateConfigurationForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    fieldCalendarLinkIsPublic: Boolean
    fieldLinkedinSlugIsPublic: Boolean
    fieldPhoneIsPublic: Boolean
    fieldPublicEmailIsPublic: Boolean
    isPublic: Boolean
    sectionAwardsIsPublic: Boolean
    sectionClientsIsPublic: Boolean
    sectionConnectionsIsPublic: Boolean
    sectionContactsIsPublic: Boolean
    sectionEducationHistoriesIsPublic: Boolean
    sectionHeadlineIsPublic: Boolean
    sectionSalesExperienceIsPublic: Boolean
    sectionTestimonialsIsPublic: Boolean
    sectionWorkHistoriesIsPublic: Boolean
}

"""
Autogenerated input type of UpdateCurrentPortfolioUser
"""
input UpdateCurrentPortfolioUserInput {
    cityId: ID

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    customerSegmentId: ID
    industryId: ID
    productTypeIds: [ID!]!
}

"""
Autogenerated input type of UpdateCurrentUser
"""
input UpdateCurrentUserInput {
    calendarLink: String
    cityId: Int

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID
    departmentIds: [Int!]
    fakeVacancyIds: [Int!]
    firstname: String
    hasSeenNewReferProgram: Boolean
    lastname: String
    linkedinUrl: String
    onboardingVacancyUid: ID
    personalEmail: String
    phone: String
    position: String
    productTypeIds: [Int!]
    publicEmail: String
    slug: String
    unarchivedClientCompanyIds: [ID!]
    username: String
    warRoomAvatar: String
    warRoomCompanySeriesStageIds: [Int!]
    warRoomCompanyStageIds: [Int!]
    warRoomCustomerSegmentIds: [Int!]
    warRoomDescription: String
    warRoomIndustryIds: [Int!]
    warRoomJobSearchStatus: String
    warRoomPosition: String
    warRoomSalesRoleIds: [Int!]
    warRoomYearsOfExperience: Int
}

"""
Autogenerated input type of UpdateDeal
"""
input UpdateDealInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
    isPrivateCompany: Boolean
    isPrivateDepartments: Boolean
    post: DealStoryPostAttributes
}

"""
Autogenerated input type of UpdateEducationHistoryForPublicPortfolioCurrentUser
"""
input UpdateEducationHistoryForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    degreeName: String
    description: String
    endDate: ISO8601DateTime
    fieldOfStudy: String
    id: ID!
    startDate: ISO8601DateTime
    universityId: ID!
}

"""
Autogenerated input type of UpdateInquiry
"""
input UpdateInquiryInput {
    accomplishments: String
    aeLeadSourceOther: String
    aeLeadSourcesMain: [JobsInquiryAeLeadSource!]
    aeQuotaPerPeriod: Int
    aeQuotaTypeMain: JobsInquiryAeQuota
    aeQuotaTypeOther: String
    baseSalary: Int

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    csmAccountsNumber: JobsInquiryCsmAccountNumber
    csmQuotaMetricMain: [JobsInquiryCsmQuotaMetric!]
    csmQuotaMetricOther: String
    csmQuotaPeriodMain: JobsInquiryCsmQuotaPeriod
    csmQuotaPeriodOther: String
    csmQuotaTypeMain: JobsInquiryCsmQuota
    csmQuotaTypeOther: String
    csmRenewalValue: JobsInquiryCsmRenewalValue
    csmTotalBusinessValue: JobsInquiryCsmBusinessValue
    csmUpsellValue: JobsInquiryCsmUpsellValue
    currency: Currency
    dealBreakerOther: String
    dealBreakersMain: [JobsInquiryDealBreaker!]
    dealSize: JobsInquiryDealSize
    desiredCompanySeriesStageIds: [Int!]
    employmentTypes: [JobsInquiryEmployment!]
    fakeHiring: InquiryFakeHiringAttributes
    flexAppliedCriteria: [JobsFlexAppliedCriteria!]
    flexBandwidth: JobsFlexBandwidth
    flexBriefVideoUrl: String
    flexConsideredCompanyTypes: [JobsFlexFlexConsideredCompanyType!]
    flexOnboardingState: String
    flexPreviousExperience: String
    flexRating: Float
    flexReasonForParticipation: String
    flexRoles: [JobsFlexRole!]
    flexState: String
    flexUnderstandingOfSales: String
    idealJobDescription: String
    onboardingState: JobsInquiryOnboardingState
    ote: Int
    positionMain: JobsInquiryPosition
    positionOther: String
    quotaAttainmentByTeamPerPeriod: Int
    quotaAttainmentPerLastYear: Int
    quotaAttainmentPerPeriod: Int
    rankOnTeam: Int
    revenue: Int
    salesCycleLength: JobsInquirySalesCycleLength
    salesMethodologies: [JobsInquirySalesMethodology!]
    sdrQuotaPerPeriod: String
    sdrQuotaTypes: [JobsInquirySdrQuota!]
    source: JobsInquirySource
    teamSize: Int
    vpDepartmentSize: JobsInquiryVpDepartmentSize
    vpManagedRoles: [JobsInquiryVpManagedRole!]
    vpQuotaType: JobsInquiryVpQuota
    vpResponsibilities: String
    willingToRelocate: Boolean
    workHistoryId: ID = null
}

"""
Autogenerated input type of UpdatePost
"""
input UpdatePostInput {
    category: String

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    files: [String!]
    link: String
    poll: PollAttributes
    slug: String!
    text: String
    title: String
    topicIds: [Int!]
}

"""
Autogenerated input type of UpdatePublicPortfolioCurrentUser
"""
input UpdatePublicPortfolioCurrentUserInput {
    avatarSignedBlobId: String
    cityId: ID

    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    contactsEmail: String
    currentCompanyId: ID
    currentPosition: String
    departmentIds: [ID!]
    description: String
    firstname: String
    industryIds: [ID!]
    lastname: String
    linkedinUrl: String
    productTypeIds: [ID!]
    slug: String
    yearsOfExperience: Int
}

"""
Autogenerated input type of UpdateTestimonialPositionForPublicPortfolioCurrentUser
"""
input UpdateTestimonialPositionForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    id: ID!
    newPosition: Int!
}

"""
Autogenerated input type of UpdateWorkHistoryForPublicPortfolioCurrentUser
"""
input UpdateWorkHistoryForPublicPortfolioCurrentUserInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    companyId: ID
    currentWorkplace: Boolean
    endDate: ISO8601DateTime
    id: ID!
    startDate: ISO8601DateTime
    title: String
}

"""
Autogenerated input type of UpsertDealQuarter
"""
input UpsertDealQuarterInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    quarter: Int!
    quota: Float
    revenue: Float
    year: Int!
}

type User {
    abTests: [String!]
    achievements: [UserAchievement!]
    achievementsProgress: [UserAchievement!]
    address: String
    admin: Boolean
    autoName: String
    avatarUrl: String
    birthDate: ISO8601Date
    calendarLink: String
    city: City
    commentsCount: Int!
    company: Company
    companySeriesStages: [CompanySeriesStage!]
    companyStages: [CompanyStage!]
    contacts: [UserContact!]
    createdAt: ISO8601DateTime!
    departmentIds: [Int!]
    departments: [Department!]
    description: String
    email: String!
    enabledFeatures: [String!]
    facebookUrl: String
    fakeVacancyIds: [Int!]!
    firstname: String
    hasSeenNewReferProgram: Boolean
    id: ID!
    industries: [Industry!]
    industry: String
    instagramUrl: String
    inviteReferrerUser: User
    languages: String
    lastColleaguesSyncError: String
    lastColleaguesSyncedAt: ISO8601DateTime
    lastContactsSyncError: String
    lastContactsSyncedAt: ISO8601DateTime
    lastLinkedinSyncError: String
    lastLinkedinSyncedAt: ISO8601DateTime
    lastSeenAt: ISO8601DateTime
    lastname: String
    linkedinProfilePicUrl: String
    linkedinSlug: String
    linkedinUrl: String
    marker: String
    onboardingState: String!
    onboardingVacancy: JobsVacancy
    orderPosition: Int
    personalEmail: String
    phone: String
    position: String
    posts: [Post!]
    postsCount: Int!
    prevScore: Int
    privateHash: String!
    productTypeIds: [Int!]
    productTypes: [ProductType!]
    public: Boolean!
    publicEmail: String
    referralsCount: Int!
    role: String
    salesRoles: String
    score: Int
    slug: String!
    solidClients: [Client!]
    submittedCompaniesData: Boolean!
    superInviteMarker: String
    tooltips: [String!]
    toured: Boolean
    twitterUrl: String
    uiTheme: String
    unreadConnectionRequestsCount: Int!
    unreadWarRoomNotifications(platform: Platform = MOBILE): Boolean
    unseenWarRoomNotifications(platform: Platform = MOBILE): Boolean
    unusedSuperInvitesCount: Int!
    updatedAt: ISO8601DateTime!
    username: String
    warRoomAvatarUrl: String
    warRoomCompanySeriesStageIds: [Int!]
    warRoomCompanyStageIds: [Int!]
    warRoomCurrentBalance: Int
    warRoomDescription: String
    warRoomIndustryIds: [Int!]
    warRoomJobSearchStatus: String
    warRoomJobSearchStatusExpiredAt: ISO8601DateTime
    warRoomPosition: String
    warRoomSalesRoleIds: [Int!]
    warRoomSalesRoles: [SalesRole!]
    warRoomState: String!
    warRoomTotalBalance: Int
    warRoomYearsOfExperience: Int
    websiteUrl: String
}

type UserAchievement {
    achieved: String
    helpMessage: String
    level: String!
    slug: String!
    stateMessage: String!
    title: String!
}

union UserAuthor = Anonymous | Public

"""
The connection type for User.
"""
type UserConnection {
    """
    A list of edges.
    """
    edges: [UserEdge!]!

    """
    A list of nodes.
    """
    nodes: [User!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

type UserContact implements ConnectionSuggestionInterface {
    emails: [String!]!
    id: ID!
    name: String!
    position: String
}

"""
An edge in a connection.
"""
type UserEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: User
}

type UserPost {
    createdAt: ISO8601DateTime!
    id: Int!
    post: Post!
    postId: Int!
    postViewedAt: ISO8601DateTime!
    updatedAt: ISO8601DateTime!
    user: User!
}

"""
The connection type for UserPost.
"""
type UserPostConnection {
    """
    A list of edges.
    """
    edges: [UserPostEdge!]!

    """
    A list of nodes.
    """
    nodes: [UserPost!]!

    """
    Information to aid in pagination.
    """
    pageInfo: PageInfo!
    totalCount: Int!
}

"""
An edge in a connection.
"""
type UserPostEdge {
    """
    A cursor for use in pagination.
    """
    cursor: String!

    """
    The item at the end of the edge.
    """
    node: UserPost
}

type UserSearch {
    username: String
    warRoomAvatarUrl: String
}

type VendorDbUser {
    company: String
    emails: [String!]!
    firstname: String
    lastname: String
    linkedinSlug: String!
    position: String
}

"""
Autogenerated input type of ViewAllNotifications
"""
input ViewAllNotificationsInput {
    """
    A unique identifier for the client performing the mutation.
    """
    clientMutationId: String
    platform: Platform = MOBILE
}

type WarRoomPostCommentSearchResult implements SearchResultInterface {
    category: String!
    highlightedText: HighlightedText!
    record: Comment!
}

type WarRoomPostSearchResult implements SearchResultInterface {
    category: String!
    comments: [WarRoomPostCommentSearchResult!]
    post: Post!
}

type WarRoomUserSearchResult implements SearchResultInterface {
    category: String!
    warRoomUser: User
}

type WorkHistory {
    company: Company
    currentWorkplace: Boolean!
    description: String
    endDate: ISO8601DateTime
    id: ID
    startDate: ISO8601DateTime
    title: String
}

type WorkHistoryMatch {
    companyName: String!
    companySlug: String!
    positionName: String!
    type: String!
}

type YoutubeLink {
    coverUrl: String
    createdAt: ISO8601DateTime!
    highlightedText: String
    id: Int!
    link: String!
    previewImageUrl: String
    rawText: String
    text: String
    textImageUrl: String
    title: String!
    updatedAt: ISO8601DateTime!
}
